var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AdminUser1620299822480.html",[0,0.233,1,3.939]],["body/classes/AdminUser1620299822480.html",[0,0.215,1,5.11,2,0.633,3,0.052,4,0.052,5,0.046,6,5.911,7,3.634,8,2.121,9,2.796,10,0.211,11,1.031,12,3.251,13,1.963,14,2.466,15,2.417,16,2.417,17,3.466,18,0.543,19,4.421,20,1.116,21,0.006,22,0.998,23,0.353,24,0.699,25,1.014,26,1.586,27,2.417,28,4.421,29,0.171,30,0.858,31,3.4,32,3.946,33,2.707,34,5.177,35,3.946,36,4.893,37,3.946,38,0.052,39,0.004,40,1.818,41,1.034,42,1.753,43,2.562,44,7.802,45,3.059,46,2.399,47,4.421,48,4.421,49,2.252,50,1.789,51,4.421,52,3.634,53,3.946,54,3.946,55,5.398,56,3.4,57,4.113,58,3.634,59,5.11,60,3.008,61,3.447,62,4.52,63,2.81,64,2.529,65,4.421,66,1.826,67,0.004,68,0.003]],["title/classes/Answer.html",[0,0.233,69,2.508]],["body/classes/Answer.html",[0,0.202,2,0.595,3,0.049,4,0.049,5,0.043,10,0.198,18,0.793,21,0.006,22,0.666,23,0.476,24,0.668,29,0.221,30,0.805,38,0.049,39,0.002,40,1.739,41,2.011,67,0.004,68,0.002,69,3.111,70,3.705,71,1.655,72,3.497,73,0.744,74,4.38,75,6.2,76,3.48,77,5.709,78,5.019,79,2.741,80,2.807,81,2.807,82,2.125,83,3.639,84,4.151,85,3.763,86,3.269,87,4.151,88,4.151,89,4.151,90,3.639,91,3.514,92,2.142,93,4.151,94,6.071,95,4.144,96,4.151,97,2.008,98,3.497,99,2.059,100,2.755,101,1.96,102,3.129,103,2.008,104,1.96,105,2.008,106,1.96,107,2.008,108,2.872,109,2.638,110,1.524,111,3.705,112,3.705,113,3.523,114,2.302,115,4.414,116,5.307,117,2.747,118,3.412,119,1.914,120,4.151,121,4.151,122,1.646,123,3.193,124,2.872,125,3.193]],["title/classes/Answer1622421768424.html",[0,0.233,126,3.939]],["body/classes/Answer1622421768424.html",[0,0.202,2,0.595,3,0.049,4,0.049,5,0.043,8,2.028,9,2.701,10,0.331,11,0.986,12,3.185,13,1.923,14,2.358,15,2.312,16,2.312,17,3.415,18,0.606,20,1.067,21,0.006,22,1.289,23,0.394,24,0.668,25,0.97,26,1.542,27,2.312,29,0.114,30,0.805,38,0.049,39,0.002,40,1.739,43,2.619,66,2.869,67,0.004,68,0.002,69,4.755,73,0.744,78,2.747,86,3.459,95,2.059,122,3.552,126,6.234,127,6.77,128,3.705,129,0.722,130,2.21,131,1.553,132,4.151,133,4.151,134,4.151,135,2.872,136,3.711,137,2.747,138,4.597,139,4.597,140,2.747,141,3.417,142,2.747,143,2.747,144,2.747,145,5.307,146,4.887,147,4.573,148,5.945,149,2.747,150,4.919,151,2.747,152,5.112,153,3.446,154,4.252,155,5.945,156,5.112,157,4.252,158,4.151,159,4.937,160,5.945,161,4.151,162,5.945,163,3.705,164,3.36,165,4.113]],["title/controllers/AnswerController.html",[166,2.022,167,3.686]],["body/controllers/AnswerController.html",[0,0.204,3,0.049,4,0.049,5,0.044,10,0.2,11,0.995,13,2.068,18,0.611,20,1.255,21,0.006,22,1.123,23,0.375,24,0.786,25,1.141,26,1.22,29,0.247,38,0.049,39,0.003,40,2.231,41,2.101,42,1.667,46,2.151,66,1.737,67,0.004,68,0.003,69,3.139,82,1.636,166,1.773,167,4.614,168,1.894,169,3.753,170,2.485,171,3.302,172,3.813,173,6.995,174,4.204,175,4.23,176,6.244,177,5.803,178,4.204,179,4.204,180,3.302,181,2.672,182,4.614,183,4.204,184,4.204,185,6.417,186,4.614,187,4.204,188,2.485,189,3.546,190,3.056,191,5.999,192,2.909,193,5.546,194,2.574,195,0.895,196,4.151,197,4.151,198,2.485,199,1.938,200,2.2,201,2.909,202,3.234,203,2.485,204,3.673,205,2.782,206,2.909,207,4.84,208,3.753,209,3.753,210,4.931,211,3.753,212,3.456,213,4.204,214,4.204,215,2.574,216,2.2,217,1.25,218,4.204,219,3.753,220,4.204,221,4.204,222,1.856,223,4.204,224,2.574,225,2.782,226,3.234,227,4.204,228,3.234,229,4.204]],["title/classes/AnswerGrade.html",[0,0.233,144,3.172]],["body/classes/AnswerGrade.html",[0,0.212,2,0.625,3,0.051,4,0.051,5,0.046,10,0.208,18,0.819,21,0.006,23,0.471,24,0.692,29,0.197,30,0.846,38,0.051,39,0.003,40,1.801,41,1.985,67,0.004,68,0.003,69,4.742,71,1.715,72,2.011,73,0.77,74,3.636,75,5.498,76,2.889,77,5.062,78,4.076,79,2.84,80,2.908,81,2.908,82,2.193,83,4.37,85,4.059,86,3.343,90,2.67,91,2.579,92,1.572,94,4.477,95,3.056,97,2.11,98,4.235,99,2.164,100,2.831,101,2.06,102,3.216,103,2.11,104,2.06,105,2.11,106,2.06,107,2.11,113,2.598,115,3.914,144,4.076,230,5.868,231,3.894,232,3.931,233,6.372,234,4.362,235,4.362,236,4.362,237,4.362,238,4.362,239,4.362,240,4.362,241,4.362,242,3.894,243,5.062,244,4.362]],["title/classes/AnswerGradeRepository.html",[0,0.233,245,3.484]],["body/classes/AnswerGradeRepository.html",[0,0.335,2,0.988,3,0.081,4,0.081,5,0.072,21,0.006,29,0.246,30,1.614,38,0.081,39,0.004,67,0.005,68,0.004,71,2.316,144,4.565,245,6.046,246,6.158,247,6.158,248,4.807,249,3.713,250,2.91,251,2.91,252,2.91,253,6.898,254,5.015,255,6.898]],["title/modules/AnswerModule.html",[256,1.695,257,3.484]],["body/modules/AnswerModule.html",[0,0.268,3,0.065,4,0.065,5,0.058,21,0.006,29,0.259,38,0.065,39,0.003,67,0.004,68,0.003,110,2.022,167,6.194,168,3.253,195,1.173,207,6.299,208,4.918,245,5.249,256,2.849,257,6.983,258,2.665,259,2.601,260,2.806,261,2.806,262,2.665,263,4.101,264,2.733,265,4.918,266,4.918,267,4.918,268,6.025,269,6.299,270,3.677,271,2.806,272,2.806,273,5.509,274,4.003,275,5.509,276,3.501,277,2.324,278,4.005,279,4.918,280,4.918,281,4.918,282,4.005,283,4.918,284,5.509,285,5.509]],["title/classes/AnswerRepository.html",[0,0.233,278,3.484]],["body/classes/AnswerRepository.html",[0,0.337,2,0.995,3,0.081,4,0.081,5,0.073,21,0.006,29,0.247,30,1.621,38,0.081,39,0.004,67,0.005,68,0.004,69,3.635,71,2.326,212,5.71,248,4.821,249,3.74,250,2.93,251,2.93,252,2.93,278,6.072,286,6.201,287,6.947]],["title/classes/AnswerScoreCheck1624750140568.html",[0,0.233,288,3.939]],["body/classes/AnswerScoreCheck1624750140568.html",[0,0.247,2,0.728,3,0.06,4,0.06,5,0.053,8,2.335,9,3.008,10,0.242,11,1.135,12,3.393,13,2.049,14,2.714,15,2.661,16,2.661,17,3.572,18,0.675,20,1.228,21,0.006,22,1.387,23,0.38,24,0.769,25,1.117,26,1.683,27,2.661,29,0.14,30,0.986,38,0.06,39,0.003,43,2.421,67,0.004,68,0.003,69,4.331,73,0.856,78,5.889,86,2.191,90,3.111,112,4.537,113,2.887,122,3.069,123,3.909,124,3.517,125,3.909,129,0.884,130,1.617,131,1.901,136,3.492,153,3.395,164,3.311,288,6.803,289,7.389,290,4.537,291,5.083,292,5.083,293,5.083,294,5.951,295,2.459,296,2.907]],["title/injectables/AnswerService.html",[207,3.316,297,1.005]],["body/injectables/AnswerService.html",[0,0.148,3,0.036,4,0.036,5,0.032,10,0.145,11,0.783,13,2.005,18,0.651,20,1.264,21,0.006,22,1.131,23,0.346,24,0.792,25,1.149,26,1.633,29,0.246,30,0.592,33,2.645,38,0.036,39,0.002,40,2.179,41,1.928,43,2.349,46,1.778,49,2.945,50,2.635,66,1.261,67,0.003,68,0.002,69,3.899,74,2.945,76,2.851,82,1.352,94,2.218,110,1.735,111,2.724,118,2.508,119,1.407,141,2.129,172,3.003,176,4.218,177,4.506,181,3.003,185,5.838,195,0.65,203,1.804,207,3.27,209,2.724,210,3.884,211,2.724,212,2.508,217,1.936,222,1.977,245,5.65,250,3.388,251,1.287,252,1.287,277,1.287,278,5.417,279,2.724,280,2.724,281,2.724,297,0.991,298,1.079,299,2.724,300,5.783,301,4.31,302,2.793,303,1.837,304,3.051,305,4.939,306,5.143,307,3.051,308,3.051,309,5.009,310,3.051,311,3.051,312,3.128,313,3.051,314,3.051,315,3.128,316,3.051,317,3.54,318,1.643,319,3.128,320,2.111,321,2.218,322,2.347,323,2.508,324,3.051,325,3.051,326,3.051,327,2.304,328,3.051,329,3.051,330,1.939,331,3.051,332,3.051,333,3.051,334,3.051,335,2.111,336,2.019,337,2.724,338,3.051,339,3.051,340,3.884,341,2.508,342,3.051,343,4.726,344,3.051,345,3.051,346,2.508,347,2.347,348,3.051,349,2.724,350,3.051,351,3.051,352,3.051,353,3.051,354,3.051,355,3.051,356,3.051,357,2.347,358,3.051,359,3.051,360,3.051,361,3.051,362,3.051]],["title/controllers/AppController.html",[166,2.022,363,3.686]],["body/controllers/AppController.html",[0,0.31,3,0.075,4,0.075,5,0.067,10,0.304,11,1.315,18,0.692,21,0.006,25,1.294,29,0.176,38,0.075,39,0.004,67,0.005,68,0.004,82,1.855,129,1.5,166,3.346,168,2.876,188,3.774,195,1.36,222,2.105,363,6.101,364,5.699,365,9.026,366,9.026,367,7.932,368,6.384,369,6.384,370,6.384,371,6.384,372,6.384,373,6.384,374,6.384,375,6.384]],["title/modules/AppModule.html",[256,1.695,376,3.686]],["body/modules/AppModule.html",[0,0.208,3,0.05,4,0.05,5,0.045,21,0.006,29,0.263,38,0.05,39,0.003,67,0.004,68,0.003,76,1.735,168,2.741,195,0.913,256,2.501,257,6.136,258,2.074,259,2.024,260,2.183,261,2.183,262,2.074,263,2.183,264,2.127,268,5.586,269,5.84,270,3.098,271,2.183,272,2.183,274,3.92,276,2.724,277,1.808,282,3.116,283,3.826,363,5.438,376,7.597,377,3.826,378,3.826,379,5.84,380,5.364,381,6.136,382,6.136,383,5.586,384,6.136,385,5.84,386,4.286,387,4.679,388,4.89,389,2.534,390,5,391,3.523,392,3.297,393,4.286,394,3.826,395,3.826,396,3.826,397,4.286,398,4.286,399,4.286,400,4.286,401,4.286,402,4.286,403,4.286,404,4.286,405,4.286,406,2.966,407,4.286,408,2.452]],["title/classes/Auth.html",[0,0.233,60,2.319]],["body/classes/Auth.html",[0,0.249,2,0.736,3,0.06,4,0.06,5,0.054,10,0.245,18,0.796,21,0.006,23,0.466,29,0.19,30,0.996,38,0.06,39,0.003,40,2.016,41,1.201,55,5.381,57,4.449,60,3.334,61,4.313,67,0.004,68,0.003,71,1.919,72,3.832,73,0.862,79,3.177,80,3.254,81,3.254,82,2.132,85,3.859,92,2.483,97,2.485,98,3.832,99,2.548,100,3.085,101,2.425,102,3.504,103,2.485,104,2.425,105,2.485,106,2.425,107,2.485,113,3.506,114,2.848,129,1.552,409,4.584,410,5.276,411,3.71,412,5.136,413,5.136,414,5.136,415,3.734,416,5.136]],["title/classes/Auth1619445806509.html",[0,0.233,417,3.939]],["body/classes/Auth1619445806509.html",[0,0.198,2,0.584,3,0.048,4,0.048,5,0.043,8,2.001,9,2.672,10,0.425,11,0.972,12,3.165,13,1.911,14,2.326,15,2.281,16,2.281,17,3.4,18,0.6,20,1.052,21,0.006,22,1.279,23,0.392,24,0.659,25,0.957,26,1.529,27,2.281,29,0.112,30,0.79,34,3.467,36,3.157,38,0.048,39,0.002,40,2.199,43,2.56,46,2.45,55,2.818,57,2.33,60,3.325,61,3.252,63,2.589,64,2.33,67,0.004,68,0.002,73,0.734,86,2.528,95,2.021,122,3.759,129,0.708,130,2.64,131,1.524,136,3.172,137,3.882,138,5.492,139,5.492,140,3.882,141,2.643,142,3.882,143,3.882,149,3.882,150,3.355,151,3.882,164,3.638,171,2.769,295,4.015,411,3.7,417,6.18,418,6.712,419,3.636,420,4.074,421,4.074,422,4.074,423,5.08,424,5.865,425,3.133,426,5.236,427,5.865,428,5.865,429,5.236,430,4.511]],["title/controllers/AuthController.html",[166,2.022,431,3.686]],["body/controllers/AuthController.html",[0,0.296,3,0.071,4,0.071,5,0.064,10,0.29,11,1.276,18,0.532,20,1.092,21,0.006,22,0.977,23,0.299,24,0.684,25,0.993,26,1.565,29,0.244,38,0.071,39,0.004,60,2.945,61,4.269,67,0.005,68,0.004,82,1.424,166,2.568,168,2.743,170,3.599,188,4.992,189,3.599,195,1.297,198,3.599,199,2.807,216,3.186,217,1.81,222,1.615,431,5.922,432,5.434,433,5.434,434,6.468,435,6.088,436,5.367,437,4.683,438,5.434,439,6.088,440,6.088,441,6.088,442,6.088]],["title/classes/AuthDto.html",[0,0.233,443,3.316]],["body/classes/AuthDto.html",[0,0.404,2,0.988,3,0.081,4,0.081,5,0.072,10,0.329,18,0.602,21,0.006,23,0.339,29,0.19,38,0.081,39,0.004,61,4.951,67,0.005,68,0.004,73,1.04,82,1.613,129,1.446,443,5.754,444,6.158,445,4.565,446,6.898,447,5.504,448,5.286,449,3.18]],["title/modules/AuthModule.html",[256,1.695,379,3.316]],["body/modules/AuthModule.html",[0,0.223,3,0.054,4,0.054,5,0.048,21,0.006,29,0.261,38,0.054,39,0.003,67,0.004,68,0.003,168,2.874,195,0.977,200,4.95,256,2.594,258,2.219,259,2.165,260,2.335,261,2.335,262,2.219,263,3.735,264,3.639,270,3.248,271,2.335,272,2.335,274,4.066,276,2.914,277,1.935,379,6.736,385,5.968,387,5.641,388,5.038,389,2.711,392,3.527,395,4.093,406,3.173,408,2.623,431,5.641,436,6.011,437,3.527,450,4.093,451,4.093,452,4.093,453,4.093,454,6.877,455,6.271,456,4.586,457,4.586,458,3.527,459,3.527,460,4.586,461,3.334,462,4.093,463,4.586,464,4.586,465,4.586,466,4.586,467,4.586,468,4.586]],["title/classes/AuthRepository.html",[0,0.233,461,3.484]],["body/classes/AuthRepository.html",[0,0.337,2,0.995,3,0.081,4,0.081,5,0.073,21,0.006,29,0.247,30,1.621,38,0.081,39,0.004,60,3.361,67,0.005,68,0.004,71,2.326,248,4.821,249,3.74,250,2.93,251,2.93,252,2.93,461,6.072,469,6.201,470,6.201,471,6.947]],["title/injectables/AuthService.html",[297,1.005,436,3.046]],["body/injectables/AuthService.html",[0,0.178,3,0.043,4,0.043,5,0.038,10,0.174,11,0.899,13,1.997,18,0.666,20,1.369,21,0.006,22,1.225,23,0.393,24,0.857,25,1.166,26,1.727,29,0.247,30,0.71,31,2.813,33,2.724,36,1.969,38,0.043,39,0.002,43,2.484,46,1.125,49,2.761,50,2.194,55,4.469,56,2.813,57,3.101,60,3.691,61,3.961,67,0.003,68,0.002,82,0.855,195,0.779,217,1.921,222,1.714,250,3.014,251,1.543,252,1.543,277,1.543,297,1.137,298,1.294,303,2.108,317,2.239,318,1.969,327,2.285,408,2.092,433,4.839,434,5.278,436,3.445,438,3.265,443,6.107,458,2.813,461,5.809,462,3.265,470,3.265,472,3.265,473,5.421,474,5.421,475,5.421,476,3.658,477,8.27,478,5.398,479,3.658,480,5.421,481,5.546,482,3.658,483,5.421,484,3.658,485,3.658,486,5.421,487,3.658,488,2.813,489,3.006,490,3.006,491,3.265,492,2.092,493,3.006,494,3.658,495,3.658,496,3.006,497,3.658,498,3.658,499,3.658,500,3.658,501,3.658,502,5.421,503,3.658,504,3.658,505,3.658,506,3.658,507,3.658,508,5.421,509,3.658,510,2.813,511,3.658,512,3.658,513,3.658,514,3.658,515,3.658]],["title/classes/Auxiliary1620477175799.html",[0,0.233,516,3.939]],["body/classes/Auxiliary1620477175799.html",[0,0.277,2,0.29,3,0.024,4,0.024,5,0.021,8,1.157,9,1.702,10,0.312,11,0.562,12,2.354,13,1.422,14,1.345,15,1.319,16,1.319,17,2.728,18,0.382,20,0.609,21,0.006,22,0.991,23,0.215,24,0.381,25,0.553,26,1.042,27,1.319,29,0.056,30,0.393,38,0.024,39,0.001,40,2.272,43,2.791,66,2.709,67,0.002,68,0.001,73,0.424,76,2.499,86,3.53,90,3.493,95,1.004,113,3.017,122,3.839,129,0.352,130,2.642,131,0.757,136,4,137,4.086,138,5.625,139,5.625,140,4.086,141,3.571,142,4.086,143,4.086,149,4.086,150,4.955,151,4.086,153,3.549,154,4.015,156,4.937,157,4.015,159,4.768,164,4.153,171,2.915,232,2.782,294,5.045,295,4.464,296,5.034,411,2.357,423,3.78,430,4.389,516,4.211,517,4.573,518,1.663,519,1.806,520,2.023,521,1.806,522,2.93,523,3.029,524,2.466,525,2.466,526,3.545,527,3.367,528,3.027,529,2.291,530,2.155,531,1.663,532,1.806,533,4.148,534,1.727,535,1.806,536,2.588,537,3.256,538,1.641,539,3.391,540,3.072,541,1.806,542,2.608,543,3.391,544,2.608,545,2.68,546,2.466,547,1.286,548,1.471,549,3.027,550,4.373,551,2.005,552,2.898,553,3.941,554,2.931,555,4.272,556,2.608,557,3.391,558,1.556,559,3.027,560,2.788,561,3.027,562,1.806,563,3.027,564,1.806,565,3.027]],["title/classes/Auxiliary1624416663574.html",[0,0.233,566,3.939]],["body/classes/Auxiliary1624416663574.html",[0,0.185,2,0.333,3,0.027,4,0.027,5,0.024,8,1.299,9,1.879,10,0.378,11,0.631,12,2.522,13,1.523,14,1.51,15,1.481,16,1.481,17,2.875,18,0.422,20,0.683,21,0.005,22,0.989,23,0.238,24,0.428,25,0.621,26,1.135,27,1.481,29,0.064,30,0.451,38,0.027,39,0.001,40,1.114,43,2.841,66,3.281,67,0.002,68,0.001,73,0.476,86,3.61,90,2.331,95,1.155,113,1.606,122,3.604,129,0.405,130,2.221,131,0.87,135,3.344,136,4.062,137,1.54,138,3.198,139,3.198,140,1.54,141,3.652,142,1.54,143,1.54,147,5.603,149,3.198,150,5.254,151,3.198,152,5.811,153,4.093,154,4.863,156,5.53,157,4.863,159,5.182,163,3.399,164,3.991,165,5.04,232,3.652,423,1.424,518,1.913,519,2.077,521,2.077,525,2.768,526,2.634,529,2.529,530,2.42,533,4.808,534,1.939,535,3.399,538,1.126,540,3.921,541,3.399,542,5.087,544,5.087,545,2.331,548,5.295,551,1.375,552,2.52,554,4.167,558,1.79,560,3.13,561,4.985,562,3.399,563,4.985,564,3.399,565,4.985,566,4.59,567,4.985,568,2.327,569,5.498,570,2.331,571,3.13,572,6.502,573,3.808,574,3.808,575,5.603,576,3.808,577,3.808,578,3.13,579,2.077,580,3.808,581,3.808,582,3.399,583,4.985,584,3.808,585,3.808,586,3.808]],["title/modules/AuxiliaryModule.html",[256,1.695,380,3.046]],["body/modules/AuxiliaryModule.html",[0,0.236,3,0.057,4,0.057,5,0.051,21,0.006,29,0.259,38,0.057,39,0.003,67,0.004,68,0.003,195,1.035,256,2.674,258,2.35,259,2.293,260,2.474,261,2.474,262,2.35,263,3.85,264,3.75,270,3.38,271,2.474,272,2.474,274,2.693,276,3.087,277,2.049,380,6.206,587,4.336,588,4.336,589,4.336,590,6.608,591,6.608,592,6.608,593,6.608,594,4.857,595,4.824,596,4.336,597,4.824,598,4.336,599,4.824,600,4.336,601,4.824,602,4.336,603,4.857,604,4.857,605,4.857,606,4.857,607,3.992]],["title/interfaces/BatchUser.html",[309,3.686,608,1.292]],["body/interfaces/BatchUser.html",[3,0.081,4,0.081,5,0.073,10,0.331,21,0.006,23,0.41,38,0.081,39,0.004,41,2.258,67,0.005,68,0.004,73,1.045,180,4.387,224,5.688,309,6.424,608,1.873,609,2.811,610,6.201,611,5.05]],["title/injectables/CaslAbilityFactory.html",[297,1.005,612,3.484]],["body/injectables/CaslAbilityFactory.html",[0,0.22,3,0.053,4,0.053,5,0.047,10,0.216,11,1.049,18,0.396,20,0.813,21,0.006,22,0.728,23,0.358,24,0.509,25,0.74,29,0.252,33,2.084,38,0.053,39,0.003,40,1.326,42,2.509,46,2.767,50,1.834,67,0.004,68,0.003,69,4.342,74,4.377,109,2.881,110,1.664,130,1.442,159,2.68,195,0.966,222,1.203,224,3.873,225,4.824,232,2.042,297,1.327,298,1.603,522,1.798,546,3.295,612,4.6,613,5.2,614,3.726,615,6.327,616,6.327,617,4.533,618,6.506,619,6.327,620,6.327,621,6.327,622,5.648,623,4.046,624,4.533,625,4.533,626,4.533,627,3.726,628,4.046,629,4.533,630,4.533,631,3.406,632,3.295,633,2.775,634,3.136,635,4.046,636,3.726,637,4.046,638,4.046,639,5.648,640,4.046,641,4.533,642,5.648,643,4.533,644,8.297,645,5.648,646,4.533,647,7.288,648,4.533,649,4.533,650,4.046,651,7.288,652,4.533,653,4.533,654,4.533]],["title/modules/CaslModule.html",[256,1.695,454,3.484]],["body/modules/CaslModule.html",[0,0.309,3,0.075,4,0.075,5,0.067,21,0.006,29,0.218,38,0.075,39,0.004,67,0.005,68,0.004,195,1.355,256,3.048,258,3.079,259,3.004,260,3.241,261,3.241,262,3.079,263,4.388,264,4.275,270,4.032,271,3.241,272,3.241,454,6.969,612,7.224,655,5.68,656,5.68,657,5.68,658,6.363,659,6.363,660,6.363]],["title/classes/CopyQuestionGroupDto.html",[0,0.233,661,3.484]],["body/classes/CopyQuestionGroupDto.html",[0,0.388,2,0.923,3,0.076,4,0.076,5,0.067,10,0.307,18,0.697,21,0.006,23,0.392,29,0.178,38,0.076,39,0.004,41,2.118,67,0.005,68,0.004,73,0.998,76,3.508,82,1.866,110,3.182,180,4.092,449,2.972,661,5.801,662,7.737,663,4.687,664,5.306,665,5.162,666,6.446,667,5.755]],["title/modules/CoreModule.html",[256,1.695,381,3.484]],["body/modules/CoreModule.html",[0,0.288,3,0.069,4,0.069,5,0.062,21,0.006,29,0.242,38,0.069,39,0.004,67,0.005,68,0.004,195,1.262,256,2.949,258,2.866,259,2.796,260,3.017,261,3.017,262,2.866,263,4.246,264,4.137,270,3.853,271,3.017,272,3.017,274,3.284,381,6.946,387,5.82,389,3.501,668,5.287,669,5.287,670,5.287,671,6.323,672,7.154,673,5.923,674,6.219,675,5.923,676,5.923,677,5.923]],["title/classes/Course.html",[0,0.233,536,2.833]],["body/classes/Course.html",[0,0.244,2,0.721,3,0.059,4,0.059,5,0.053,10,0.24,18,0.792,21,0.006,23,0.459,29,0.212,30,0.976,38,0.059,39,0.003,40,1.988,41,1.176,42,1.995,67,0.004,68,0.003,71,1.893,72,3.8,73,0.85,79,3.133,80,3.209,81,3.209,82,2.121,85,3.372,92,2.449,97,2.434,98,3.8,99,2.496,100,3.053,101,2.375,102,3.468,103,2.434,104,2.375,105,2.434,106,2.375,107,2.434,113,3.247,114,2.789,117,3.329,129,1.433,410,4.872,411,3.659,536,4.017,537,4.891,538,3.724,540,4.634,678,4.491,679,7.696,680,5.031,681,2.878,682,5.031,683,5.031,684,4.319,685,4.491,686,5.031,687,5.031]],["title/classes/CreateAnswerDto.html",[0,0.233,177,3.316]],["body/classes/CreateAnswerDto.html",[0,0.351,2,0.789,3,0.065,4,0.065,5,0.058,10,0.262,18,0.746,21,0.006,23,0.456,24,0.961,29,0.199,38,0.065,39,0.003,41,2.129,67,0.004,68,0.003,73,0.903,77,6.619,78,5.33,82,1.999,94,5.855,118,4.528,119,2.54,130,1.753,131,2.061,177,5.572,233,7.189,349,4.918,449,2.54,665,4.739,688,7.92,689,4.528,690,5.509,691,5.509,692,5.509,693,5.509,694,5.509,695,7.219,696,5.509,697,5.509,698,4.528,699,4.76,700,4.528,701,5.509,702,5.509,703,5.509,704,5.509,705,5.509,706,5.509,707,5.509]],["title/classes/CreateAuthDto.html",[0,0.233,481,3.484]],["body/classes/CreateAuthDto.html",[0,0.32,2,0.945,3,0.077,4,0.077,5,0.069,10,0.314,18,0.707,21,0.006,23,0.398,29,0.182,38,0.077,39,0.004,57,4.63,61,4.488,67,0.005,68,0.004,71,2.254,73,1.012,82,1.893,98,3.732,129,1.407,434,6.317,443,4.565,445,4.366,481,5.885,708,5.889,709,5.889,710,5.889,711,5.075,712,6.598,713,5.889,714,6.598]],["title/classes/CreateExamAgreementDto.html",[0,0.233,715,3.484]],["body/classes/CreateExamAgreementDto.html",[0,0.414,2,0.891,3,0.073,4,0.073,5,0.065,10,0.296,18,0.543,21,0.006,23,0.419,24,0.877,29,0.246,38,0.073,39,0.004,67,0.005,68,0.004,71,1.733,73,0.976,82,1.455,199,2.869,224,3.809,449,2.869,522,3.383,547,5.421,699,4.614,715,5.675,716,6.416,717,4.524,718,4.127,719,5.555,720,6.222,721,5.115,722,3.955,723,5.401,724,4.786,725,5.115,726,6.222]],["title/classes/CreateExamDto.html",[0,0.233,727,3.316]],["body/classes/CreateExamDto.html",[0,0.373,2,0.717,3,0.059,4,0.059,5,0.052,10,0.238,18,0.773,21,0.006,23,0.459,24,0.924,29,0.211,38,0.059,39,0.003,67,0.004,68,0.003,73,0.847,82,2.072,92,2.44,100,3.513,119,2.308,129,1.43,445,4.482,447,5.08,448,4.879,449,2.308,524,5.581,538,3.714,698,4.114,699,4.538,716,7.445,718,3.277,722,3.181,723,4.686,727,4.686,728,4.114,729,6.852,730,5.904,731,5.904,732,4.538,733,4.468,734,5.005,735,5.005,736,6.773,737,5.005,738,5.005,739,4.391,740,5.005,741,5.209,742,5.005,743,5.005,744,4.924,745,7.676,746,2.549,747,2.363,748,5.005]],["title/classes/CreateQuestion.html",[0,0.233,749,3.316]],["body/classes/CreateQuestion.html",[0,0.426,2,0.843,3,0.069,4,0.069,5,0.062,10,0.28,18,0.514,21,0.006,23,0.409,24,0.847,29,0.241,38,0.069,39,0.004,40,2.432,41,1.763,67,0.005,68,0.004,71,1.64,73,0.943,82,1.377,92,2.716,110,2.767,171,2.78,199,2.715,330,3.742,449,2.715,664,3.604,665,4.179,699,4.455,721,4.839,722,3.742,741,5.797,744,5.48,749,6.064,750,5.48,751,4.839,752,5.256,753,5.888,754,5.256,755,6.728,756,6.728,757,3.742,758,4.28,759,5.256,760,4.074,761,5.256]],["title/classes/CreateQuestionDto.html",[0,0.233,757,3.046]],["body/classes/CreateQuestionDto.html",[0,0.322,2,0.696,3,0.057,4,0.057,5,0.051,10,0.231,18,0.743,21,0.006,23,0.431,24,0.987,29,0.183,38,0.057,39,0.003,41,1.552,67,0.004,68,0.003,73,0.83,82,1.989,110,3.223,129,1.526,199,2.239,445,3.215,447,5.003,448,4.804,449,2.239,538,3.21,664,4.627,665,4.191,699,4.802,718,3.93,723,4.591,750,6.383,757,4.217,762,3.736,763,6.747,764,6.747,765,6.213,766,6.213,767,4.857,768,4.336,769,4.857,770,4.857,771,4.857,772,4.857,773,5.454,774,6.636,775,7.251,776,6.636,777,6.636,778,5.924,779,6.636,780,6.636,781,6.636,782,6.636,783,6.636,784,6.636,785,4.857,786,4.857,787,4.857,788,6.636,789,6.636,790,4.857]],["title/classes/CreateQuestionGroupDto.html",[0,0.233,791,3.316]],["body/classes/CreateQuestionGroupDto.html",[0,0.433,2,0.803,3,0.066,4,0.066,5,0.059,10,0.267,18,0.751,21,0.006,23,0.423,24,1.028,29,0.154,38,0.066,39,0.003,41,1.707,67,0.004,68,0.003,73,0.913,76,3.61,82,2.012,110,3.275,129,1.269,180,3.833,445,3.708,447,4.831,448,4.639,449,2.583,538,3.928,551,4.8,663,4.073,665,4.048,699,5.085,718,4.162,723,5.618,733,6.516,750,6.485,752,5.002,791,5.051,792,5.603,793,5.603,794,5.603,795,5.603]],["title/classes/CreateQuestionsDto.html",[0,0.233,760,3.316]],["body/classes/CreateQuestionsDto.html",[0,0.426,2,0.843,3,0.069,4,0.069,5,0.062,10,0.28,18,0.514,21,0.006,23,0.409,29,0.241,38,0.069,39,0.004,40,1.722,41,1.377,67,0.005,68,0.004,71,1.64,73,0.943,82,1.377,92,2.716,110,2.767,171,2.78,199,2.715,330,5.284,449,2.715,664,3.604,665,4.179,699,4.455,721,4.839,722,3.742,741,5.797,744,5.48,749,6.064,750,5.48,751,4.839,754,5.256,755,6.728,756,6.728,757,3.742,758,4.28,759,5.256,760,5.215,761,5.256,796,5.888,797,5.888,798,5.888,799,5.888]],["title/classes/CreateUserDto.html",[0,0.233,800,3.046]],["body/classes/CreateUserDto.html",[0,0.386,2,0.77,3,0.063,4,0.063,5,0.056,10,0.256,18,0.739,21,0.006,23,0.453,29,0.254,34,4.703,36,4.283,38,0.063,39,0.003,57,3.074,63,5.056,67,0.004,68,0.003,71,1.496,73,0.888,82,1.979,119,2.478,129,1.472,199,2.478,449,3.275,481,3.907,493,4.417,634,5.504,636,4.417,698,4.417,800,4.514,801,7.856,802,4.417,803,7.955,804,5.374,805,6.539,806,5.374,807,7.102,808,5.374,809,5.056,810,7.102,811,5.374,812,4.797,813,5.374,814,5.374,815,5.374,816,5.463,817,5.374,818,5.374]],["title/interfaces/CsvLine.html",[608,1.292,819,3.484]],["body/interfaces/CsvLine.html",[3,0.062,4,0.062,5,0.056,10,0.253,21,0.006,23,0.465,24,0.947,38,0.062,39,0.003,67,0.004,68,0.003,73,0.882,129,1.757,608,1.433,609,2.151,773,6.927,819,5.126,820,4.369,821,4.745,822,6.927,823,7.523,824,7.523,825,6.927,826,7.183,827,7.523,828,7.523,829,7.523,830,7.523,831,6.927,832,7.523,833,6.927]],["title/interfaces/CsvLineRow.html",[608,1.292,834,3.686]],["body/interfaces/CsvLineRow.html",[3,0.058,4,0.058,5,0.051,10,0.234,21,0.006,23,0.473,24,0.99,38,0.058,39,0.003,41,2.059,46,2.336,67,0.004,68,0.003,73,0.836,78,5.399,129,1.727,146,6.705,547,5.184,555,5.644,608,1.323,609,1.985,718,4.499,820,4.032,834,5.139,835,4.032,836,4.379,837,7.281,838,7.281,839,7.281,840,5.644,841,7.281,842,7.281,843,6.274,844,7.281,845,7.281,846,3.77,847,3.587]],["title/injectables/CustomLogger.html",[297,1.005,848,3.172]],["body/injectables/CustomLogger.html",[0,0.347,3,0.084,4,0.084,5,0.075,21,0.006,29,0.197,38,0.084,39,0.004,67,0.005,68,0.004,71,2.366,195,1.523,297,1.782,298,2.529,848,5.623,849,6.381,850,5.762,851,8.496,852,7.148]],["title/classes/Exam.html",[0,0.233,522,1.901]],["body/classes/Exam.html",[0,0.148,2,0.436,3,0.036,4,0.036,5,0.032,10,0.145,11,0.782,18,0.819,21,0.006,23,0.469,24,0.53,25,0.496,29,0.214,30,0.59,38,0.036,39,0.002,40,1.379,41,1.35,42,1.87,67,0.003,68,0.002,71,1.313,72,3.579,73,0.59,74,3.311,79,2.998,80,3.069,81,3.069,82,2.17,83,1.862,85,3.851,86,2.032,95,3.226,97,1.472,98,3.579,99,1.509,100,3.451,101,2.226,102,2.601,103,1.472,104,2.226,105,1.472,106,2.226,107,1.472,109,1.933,110,1.117,113,3.384,114,1.687,115,2.996,117,2.013,129,1.13,130,1.5,222,1.251,522,2.579,523,3.843,524,4.196,526,4.498,530,3.668,534,3.953,538,2.793,631,3.5,632,2.211,633,1.862,681,2.697,684,3.668,718,2.281,729,5.152,730,4.44,731,4.44,732,3.412,746,1.549,853,2.715,854,5.152,855,4.744,856,4.744,857,5.344,858,3.262,859,4.44,860,4.44,861,3.042,862,3.427,863,3.262,864,3.042,865,3.042,866,3.042,867,3.042,868,3.042,869,3.042,870,3.042,871,5.782,872,3.042,873,4.303,874,3.042,875,3.042,876,3.042,877,2.013,878,2.013,879,2.013,880,4.744,881,3.042,882,2.105,883,3.042,884,3.042,885,3.042,886,3.042,887,3.042,888,4.208,889,3.626,890,2.211,891,2.34,892,3.042,893,1.862,894,3.042,895,1.687,896,3.042,897,3.042,898,3.042,899,2.34,900,2.5,901,2.5,902,3.042,903,3.042]],["title/classes/Exam1620478273991.html",[0,0.233,904,3.939]],["body/classes/Exam1620478273991.html",[0,0.261,2,0.77,3,0.063,4,0.063,5,0.056,8,2.423,9,3.093,10,0.256,11,1.177,12,3.448,13,2.082,14,2.817,15,2.762,16,2.762,17,3.612,18,0.695,20,1.274,21,0.006,22,1.413,23,0.391,24,0.798,25,1.159,26,1.721,27,2.762,29,0.148,30,1.043,38,0.063,39,0.003,43,2.077,67,0.004,68,0.003,73,0.888,90,4.348,122,2.817,129,0.934,130,2.26,131,2.01,136,2.996,152,4.348,522,2.817,528,7.555,529,2.812,554,4.063,904,6.957,905,7.555,906,4.797,907,5.374,908,5.374,909,5.374]],["title/classes/ExamAgreement.html",[0,0.233,74,2.441]],["body/classes/ExamAgreement.html",[0,0.233,2,0.447,3,0.037,4,0.037,5,0.033,10,0.149,11,0.797,18,0.808,21,0.006,23,0.465,24,0.74,25,0.509,29,0.223,30,0.605,38,0.037,39,0.002,40,1.406,41,1.664,42,1.237,46,2.409,67,0.003,68,0.002,71,1.338,72,3.612,73,0.601,74,2.448,79,3.038,80,3.111,81,3.111,82,2.15,83,2.942,85,3.73,86,2.84,91,3.895,92,2.564,95,3.269,97,1.509,98,3.612,99,1.548,100,3.208,101,2.269,102,2.642,103,1.509,104,2.269,105,1.509,106,2.269,107,1.509,108,6.055,113,3.412,114,1.729,115,3.727,117,2.064,129,1.145,130,2.096,180,2.768,199,1.438,222,0.828,224,3.59,411,1.679,522,3.107,523,2.841,526,3.325,529,1.632,530,3.727,547,3.727,650,5.234,718,3.443,722,1.982,746,1.589,840,4.057,858,3.325,863,3.325,877,2.064,878,2.064,879,2.064,882,2.158,890,2.268,895,1.729,910,2.784,911,5.864,912,6.588,913,5.864,914,3.119,915,3.119,916,3.119,917,3.119,918,5.173,919,3.119,920,3.119,921,4.29,922,4.806,923,3.119,924,3.119,925,3.119,926,3.119,927,3.119,928,5.864,929,3.119,930,3.119,931,3.119,932,2.564,933,3.119,934,4.806,935,4.806,936,4.29,937,3.119,938,2.564,939,3.119,940,2.564,941,3.119,942,2.399,943,3.119,944,3.119,945,2.784,946,2.564]],["title/classes/ExamAgreement1622332886234.html",[0,0.233,947,3.939]],["body/classes/ExamAgreement1622332886234.html",[0,0.215,2,0.633,3,0.052,4,0.052,5,0.046,8,2.121,9,2.796,10,0.211,11,1.031,12,3.251,13,1.963,14,2.466,15,2.417,16,2.417,17,3.466,18,0.628,20,1.116,21,0.006,22,1.32,23,0.353,24,0.699,25,1.014,26,1.586,27,2.417,29,0.122,30,0.858,38,0.052,39,0.003,43,2.615,66,2.568,67,0.004,68,0.003,73,0.778,86,1.905,113,1.865,122,2.852,129,0.769,130,1.406,131,1.654,136,3.772,141,2.801,150,4.463,153,3.568,154,3.806,156,4.776,157,3.806,159,4.612,164,3.479,295,4.326,296,5.115,423,2.706,545,5.473,546,5.672,548,3.214,552,4.759,554,3.556,558,3.4,582,3.946,947,6.413,948,6.964,949,3.946,950,4.421,951,4.421,952,4.421,953,3.946,954,6.217,955,6.217]],["title/classes/ExamAgreementAnonymousDefault1622334780336.html",[0,0.233,956,3.939]],["body/classes/ExamAgreementAnonymousDefault1622334780336.html",[0,0.257,2,0.757,3,0.062,4,0.062,5,0.055,8,2.397,9,3.069,10,0.252,11,1.165,12,3.432,13,2.072,14,2.787,15,2.732,16,2.732,17,3.601,18,0.689,20,1.261,21,0.006,22,1.406,23,0.388,24,0.79,25,1.146,26,1.71,27,2.732,29,0.146,30,1.026,38,0.062,39,0.003,43,2.055,67,0.004,68,0.003,73,0.879,90,4.301,122,2.787,129,0.919,130,2.235,131,1.978,136,2.964,295,3.399,296,4.019,529,2.767,545,4.301,547,5.344,554,4.019,956,6.912,957,7.507,958,4.72,959,5.287,960,5.287,961,5.287]],["title/controllers/ExamAgreementController.html",[166,2.022,962,3.686]],["body/controllers/ExamAgreementController.html",[0,0.214,3,0.052,4,0.052,5,0.046,10,0.21,11,1.027,13,1.96,18,0.541,20,1.112,21,0.006,22,0.995,23,0.353,24,0.697,25,1.011,26,1.583,29,0.253,38,0.052,39,0.003,46,2.69,67,0.004,68,0.003,74,3.653,82,1.449,109,2.797,166,1.857,168,1.983,170,2.602,175,4.317,188,4.24,189,4.24,192,4.288,194,2.694,195,0.937,196,4.288,197,4.288,198,2.602,199,2.029,200,2.303,201,3.045,203,3.664,204,4.391,205,2.913,206,3.045,215,2.694,216,2.303,217,1.309,222,1.644,306,4.747,323,3.618,492,2.518,522,2.845,715,5.661,725,5.094,895,3.978,962,4.767,963,5.896,964,3.929,965,6.403,966,7.173,967,3.929,968,5.661,969,4.401,970,5.532,971,4.401,972,6.95,973,5.387,974,6.95,975,5.387,976,3.929,977,4.401,978,4.767,979,2.797,980,3.045,981,3.939,982,3.618,983,3.618,984,4.401,985,4.401,986,4.401]],["title/classes/ExamAgreementDto.html",[0,0.233,724,3.686]],["body/classes/ExamAgreementDto.html",[0,0.388,2,0.926,3,0.076,4,0.076,5,0.068,10,0.308,18,0.698,21,0.006,23,0.393,29,0.22,38,0.076,39,0.004,41,2.12,67,0.005,68,0.004,73,1,82,1.87,180,4.098,199,2.982,224,5.313,449,2.982,665,4.813,717,4.702,724,6.15,936,7.748,987,7.135,988,6.468,989,6.468]],["title/classes/ExamAgreementObservation1622417032753.html",[0,0.233,990,3.939]],["body/classes/ExamAgreementObservation1622417032753.html",[0,0.26,2,0.768,3,0.063,4,0.063,5,0.056,8,2.419,9,3.089,10,0.255,11,1.175,12,3.445,13,2.08,14,2.812,15,2.757,16,2.757,17,3.61,18,0.694,20,1.272,21,0.006,22,1.412,23,0.39,24,0.797,25,1.157,26,1.719,27,2.757,29,0.148,30,1.04,38,0.063,39,0.003,43,2.074,67,0.004,68,0.003,73,0.887,113,2.261,122,2.126,129,0.932,130,1.705,131,2.005,136,2.991,153,2.659,164,2.593,295,3.43,296,4.055,523,3.168,545,4.34,840,4.905,990,6.949,991,7.547,992,4.784,993,5.359,994,5.359,995,5.359]],["title/classes/ExamAgreementRepository.html",[0,0.233,996,3.484]],["body/classes/ExamAgreementRepository.html",[0,0.335,2,0.988,3,0.081,4,0.081,5,0.072,21,0.006,29,0.246,30,1.614,38,0.081,39,0.004,67,0.005,68,0.004,71,2.316,74,3.513,109,4.384,248,4.807,249,3.713,250,2.91,251,2.91,252,2.91,980,4.773,996,6.046,997,5.67,998,6.158,999,6.898]],["title/injectables/ExamAgreementService.html",[297,1.005,306,3.172]],["body/injectables/ExamAgreementService.html",[0,0.127,3,0.031,4,0.031,5,0.027,10,0.124,11,0.693,13,2.008,18,0.664,20,1.365,21,0.006,22,1.221,23,0.396,24,0.855,25,1.195,26,1.752,29,0.237,30,0.811,33,2.152,38,0.031,39,0.002,41,0.977,43,2.039,46,2.144,49,2.662,50,2.418,66,1.078,67,0.003,68,0.002,74,3.729,79,1.204,82,1.397,100,2.904,109,1.659,123,2.008,129,0.909,175,3.313,180,1.973,195,0.556,203,2.47,217,1.776,222,1.85,224,3.657,225,2.766,250,3.395,251,1.101,252,1.101,277,1.101,297,0.876,298,0.923,302,2.47,303,1.625,306,2.766,317,1.598,318,1.405,322,6.035,327,2.59,408,1.493,488,2.008,492,1.493,496,2.146,522,2.765,715,4.343,725,3.435,746,1.33,848,3.954,850,3.321,859,2.008,860,4.595,890,1.898,895,4.778,918,1.898,942,2.008,965,4.665,967,2.33,968,4.343,970,4.665,972,3.731,973,4.133,974,5.333,975,4.133,979,1.659,980,1.806,981,2.656,996,4.343,1000,2.33,1001,4.179,1002,4.179,1003,4.179,1004,4.665,1005,5.226,1006,1.598,1007,4.835,1008,5.066,1009,2.611,1010,2.558,1011,4.179,1012,2.611,1013,2.611,1014,4.179,1015,3.435,1016,2.611,1017,3.435,1018,4.179,1019,2.611,1020,4.179,1021,2.611,1022,2.611,1023,2.611,1024,3.199,1025,2.611,1026,2.611,1027,2.611,1028,2.146,1029,2.33,1030,2.33,1031,2.146,1032,2.33,1033,2.611,1034,2.611,1035,2.611,1036,3.435,1037,3.799,1038,2.611,1039,2.33,1040,2.146,1041,2.611,1042,2.611,1043,4.179,1044,2.33,1045,2.611,1046,2.611,1047,1.898,1048,2.33,1049,2.611,1050,2.611,1051,2.611,1052,2.611,1053,2.611,1054,2.611,1055,2.146,1056,2.611,1057,2.892,1058,2.611,1059,3.214,1060,2.611,1061,2.33]],["title/classes/ExamAgreementUniqueCode1625001091462.html",[0,0.233,1062,3.939]],["body/classes/ExamAgreementUniqueCode1625001091462.html",[0,0.235,2,0.694,3,0.057,4,0.057,5,0.051,8,2.26,9,2.935,10,0.405,11,1.098,12,3.345,13,2.02,14,2.627,15,2.576,16,2.576,17,3.536,18,0.659,20,1.189,21,0.006,22,1.364,23,0.371,24,0.745,25,1.081,26,1.65,27,2.576,29,0.133,30,0.94,38,0.057,39,0.003,43,2.566,67,0.004,68,0.003,73,0.829,122,2.627,129,0.842,130,1.541,131,1.812,136,3.423,153,2.404,164,3.205,171,2.287,295,4.244,296,4.642,411,3.566,545,5.37,546,5.488,549,5.914,554,3.789,843,5.806,953,5.914,1062,5.445,1063,7.244,1064,4.325,1065,6.625,1066,4.845,1067,4.845,1068,4.845,1069,6.625]],["title/classes/ExamAgreementUniqueCodeSendedAt1625002603968.html",[0,0.233,1070,3.939]],["body/classes/ExamAgreementUniqueCodeSendedAt1625002603968.html",[0,0.26,2,0.768,3,0.063,4,0.063,5,0.056,8,2.419,9,3.089,10,0.255,11,1.175,12,3.445,13,2.08,14,2.812,15,2.757,16,2.757,17,3.61,18,0.694,20,1.272,21,0.006,22,1.412,23,0.39,24,0.797,25,1.157,26,1.719,27,2.757,29,0.148,30,1.04,38,0.063,39,0.003,43,2.074,67,0.004,68,0.003,73,0.887,113,2.261,122,2.126,129,0.932,130,1.705,131,2.005,136,2.991,153,2.659,164,2.593,295,3.43,296,4.055,526,3.708,545,4.34,1070,6.949,1071,7.547,1072,4.784,1073,5.359,1074,5.359,1075,5.359,1076,7.09]],["title/interfaces/ExamAgreementUser.html",[608,1.292,968,3.484]],["body/interfaces/ExamAgreementUser.html",[3,0.077,4,0.077,5,0.069,10,0.312,11,1.336,18,0.572,21,0.006,23,0.396,24,0.906,25,1.069,38,0.077,39,0.004,40,2.664,41,2.042,67,0.005,68,0.004,73,1.008,129,1.518,202,6.201,608,1.767,609,2.652,611,4.765,718,3.9,895,4.47,968,5.861,1024,5.576,1077,9.109,1078,6.554]],["title/controllers/ExamController.html",[166,2.022,1079,3.686]],["body/controllers/ExamController.html",[0,0.176,3,0.042,4,0.042,5,0.038,10,0.173,11,0.893,13,2.182,18,0.695,20,1.364,21,0.006,22,1.22,23,0.416,24,0.854,25,1.299,26,1.839,29,0.243,38,0.042,39,0.002,40,2.329,41,2.024,42,1.437,46,1.656,66,1.497,67,0.003,68,0.002,82,1.862,141,2.895,166,1.529,168,1.633,170,2.142,171,2.542,172,3.422,175,3.943,181,2.303,182,4.141,186,4.141,188,3.183,189,3.183,190,2.635,192,2.507,193,5.17,194,2.218,195,0.772,196,3.725,197,4.921,198,2.142,199,1.671,200,1.896,201,2.507,203,2.142,204,2.218,205,2.398,206,2.507,215,2.218,216,1.896,217,1.078,222,2.113,226,2.787,228,2.787,301,4.707,302,3.183,312,2.398,315,2.398,492,2.073,522,3.014,551,2.142,727,5.51,979,2.303,981,2.303,983,2.979,1007,4.083,1079,4.141,1080,3.235,1081,4.141,1082,3.235,1083,2.979,1084,3.624,1085,2.787,1086,3.624,1087,4.426,1088,3.624,1089,3.235,1090,3.624,1091,4.671,1092,3.624,1093,3.624,1094,6.158,1095,3.624,1096,3.235,1097,4.426,1098,2.635,1099,2.635,1100,3.235,1101,3.624,1102,3.624,1103,3.624,1104,3.624,1105,3.624,1106,3.624,1107,3.624,1108,2.979,1109,3.624,1110,3.624,1111,3.624]],["title/modules/ExamModule.html",[256,1.695,268,3.172]],["body/modules/ExamModule.html",[0,0.208,3,0.05,4,0.05,5,0.045,21,0.006,29,0.263,38,0.05,39,0.003,67,0.004,68,0.003,168,2.741,195,0.913,256,2.501,258,2.074,259,2.024,260,2.183,261,2.183,262,2.074,263,3.601,264,3.508,268,6.463,270,3.098,271,2.183,272,2.183,274,3.373,276,2.724,277,1.808,306,6.186,323,3.523,380,5.364,383,5.586,607,3.523,747,2.872,962,5.438,982,5,996,4.422,1007,5.94,1031,5,1032,3.826,1079,5.438,1096,3.826,1112,3.826,1113,4.286,1114,3.826,1115,3.826,1116,5.586,1117,5.586,1118,5.84,1119,4.286,1120,5.438,1121,4.286,1122,4.422,1123,3.826,1124,4.422,1125,3.826,1126,3.523,1127,6.083,1128,4.286,1129,4.286,1130,3.826,1131,3.826,1132,3.826,1133,3.826,1134,3.523,1135,3.826]],["title/classes/ExamPersonalResult.html",[0,0.233,1091,3.484]],["body/classes/ExamPersonalResult.html",[0,0.314,2,0.926,3,0.076,4,0.076,5,0.068,10,0.308,18,0.758,21,0.006,23,0.427,29,0.178,38,0.076,39,0.004,67,0.005,68,0.004,73,1,522,3.815,551,5.36,1036,7.135,1091,5.813,1098,4.702,1136,6.974,1137,5.773,1138,7.135,1139,7.748,1140,6.468,1141,6.468,1142,6.468]],["title/classes/ExamRepository.html",[0,0.233,1122,3.484]],["body/classes/ExamRepository.html",[0,0.167,2,0.493,3,0.04,4,0.04,5,0.036,10,0.164,11,0.859,13,1.798,18,0.544,20,1.118,21,0.006,22,1,23,0.306,24,0.7,25,1.016,26,1.409,29,0.23,30,1.005,33,1.706,38,0.04,39,0.002,45,3.583,46,1.058,50,2.096,67,0.003,68,0.002,71,1.442,100,2.948,122,2.054,123,5.717,175,3.843,203,2.034,222,1.653,224,3.17,225,2.277,248,3.353,249,1.852,250,1.451,251,1.451,252,1.451,327,2.203,522,3.098,530,3.291,531,4.257,732,4.394,746,2.638,747,2.941,859,5.33,860,4.791,871,2.828,873,3.428,890,3.765,891,2.646,895,2.872,918,2.501,940,2.828,942,2.646,978,6.234,980,2.38,981,2.186,1061,4.623,1098,2.501,1122,3.765,1138,4.257,1143,3.071,1144,6.228,1145,5.179,1146,6.228,1147,3.44,1148,5.33,1149,3.44,1150,4.623,1151,4.623,1152,5.33,1153,4.623,1154,6.228,1155,7.433,1156,6.228,1157,4.623,1158,5.119,1159,6.228,1160,6.228,1161,5.56,1162,6.186,1163,5.179,1164,5.179,1165,5.179,1166,5.179,1167,3.44,1168,3.44,1169,7.81,1170,3.44,1171,3.071,1172,2.501,1173,3.44,1174,2.828,1175,5.179,1176,3.44,1177,3.44,1178,3.44,1179,3.44,1180,3.44,1181,3.44,1182,5.179,1183,5.179,1184,3.44,1185,3.44,1186,3.44,1187,3.44,1188,3.44,1189,5.179,1190,3.44,1191,3.44,1192,3.44,1193,5.179,1194,3.44,1195,3.44,1196,3.44]],["title/injectables/ExamService.html",[297,1.005,1007,3.046]],["body/injectables/ExamService.html",[0,0.129,3,0.031,4,0.031,5,0.028,10,0.127,11,0.703,13,2.073,18,0.689,20,1.324,21,0.006,22,1.184,23,0.376,24,0.829,25,1.204,26,1.71,29,0.241,30,0.516,33,2.666,38,0.031,39,0.003,40,1.929,41,1.846,43,2.309,46,0.818,49,2.161,50,1.717,66,1.099,67,0.003,68,0.002,73,0.531,82,1.412,130,0.846,131,0.995,141,1.911,171,2.003,172,2.696,175,3.348,181,2.696,195,0.567,203,1.572,217,2.091,222,1.865,250,3.414,251,1.122,252,1.122,277,1.122,297,0.89,298,0.941,301,3.996,302,2.508,303,1.65,312,2.808,315,2.808,317,3.239,318,1.432,319,2.808,320,1.84,321,1.934,327,2.793,357,2.046,492,1.522,522,3.278,534,2.161,551,1.572,591,5.104,727,5.299,732,4.156,746,1.355,854,3.787,855,3.487,890,1.934,895,1.475,918,1.934,938,2.186,940,2.186,942,2.046,979,1.69,981,1.69,1006,1.628,1007,2.696,1010,2.597,1036,3.487,1039,3.787,1057,1.84,1059,5.074,1081,3.263,1082,3.787,1089,3.787,1091,1.934,1094,5.884,1097,3.487,1098,1.934,1099,1.934,1100,2.374,1117,3.996,1122,4.39,1123,2.374,1126,2.186,1138,3.487,1139,3.787,1174,2.186,1197,2.374,1198,4.349,1199,4.242,1200,4.723,1201,2.66,1202,2.66,1203,2.66,1204,2.66,1205,2.66,1206,4.242,1207,2.66,1208,3.487,1209,2.66,1210,2.66,1211,2.66,1212,2.66,1213,2.66,1214,2.66,1215,4.349,1216,2.66,1217,2.66,1218,2.66,1219,2.66,1220,2.66,1221,2.66,1222,2.66,1223,2.374,1224,2.66,1225,2.66,1226,2.186,1227,2.66,1228,4.242,1229,4.242,1230,2.66,1231,2.66,1232,2.374,1233,2.66,1234,2.66,1235,2.66,1236,2.66,1237,2.66,1238,2.374,1239,2.186]],["title/classes/ExamTarget.html",[0,0.233,873,3.172]],["body/classes/ExamTarget.html",[0,0.24,2,0.708,3,0.058,4,0.058,5,0.052,10,0.235,18,0.802,21,0.006,23,0.471,29,0.21,30,0.959,38,0.058,39,0.003,40,1.964,41,1.156,67,0.004,68,0.003,71,1.87,72,4.162,73,0.84,79,3.773,80,3.863,81,3.863,82,2.148,85,2.452,92,2.419,95,4.06,97,2.391,98,4.162,99,2.452,100,3.5,101,3.17,102,3.436,103,2.391,104,3.17,105,2.391,106,3.17,107,2.391,108,4.646,113,2.833,114,2.741,119,2.279,411,3.615,415,3.593,739,4.894,746,2.517,747,2.333,873,4.444,877,3.271,878,3.271,879,3.271,1240,4.412,1241,4.942,1242,4.942]],["title/classes/ExamTarget1622326106015.html",[0,0.233,1243,3.939]],["body/classes/ExamTarget1622326106015.html",[0,0.176,2,0.518,3,0.042,4,0.042,5,0.038,8,1.835,9,2.495,10,0.412,11,0.891,12,3.035,13,1.832,14,2.133,15,2.091,16,2.091,17,3.298,18,0.56,20,0.965,21,0.006,22,1.219,23,0.391,24,0.604,25,0.877,26,1.444,27,2.091,29,0.1,30,0.702,33,1.191,38,0.042,39,0.002,40,1.573,43,2.738,62,2.63,66,2.221,67,0.003,68,0.002,73,0.672,86,2.766,95,2.668,113,1.526,122,3.358,129,0.629,130,2.042,131,1.353,136,3.714,137,2.394,138,4.247,139,4.247,140,2.394,141,2.892,142,2.394,143,2.394,149,3.559,150,4.552,151,3.559,153,3.184,154,3.292,156,4.35,157,3.292,159,3.179,164,3.987,171,3.03,295,4.421,296,4.552,411,1.947,430,4.136,550,4.516,552,4.702,558,2.782,583,4.8,732,2.138,747,3.355,846,3.184,847,3.03,1153,7.557,1158,5.84,1243,5.84,1244,5.84,1245,2.973,1246,3.617,1247,3.617,1248,3.617,1249,4.8,1250,5.377,1251,3.617,1252,3.229,1253,7.105,1254,5.377,1255,5.377,1256,5.377,1257,5.377,1258,3.617]],["title/classes/ExamTargetAdd1622378888497.html",[0,0.233,1259,3.939]],["body/classes/ExamTargetAdd1622378888497.html",[0,0.234,2,0.691,3,0.057,4,0.057,5,0.05,8,2.253,9,2.928,10,0.23,11,1.095,12,3.34,13,2.017,14,2.619,15,2.567,16,2.567,17,3.533,18,0.657,20,1.185,21,0.006,22,1.362,23,0.455,24,0.742,25,1.077,26,1.646,27,2.567,29,0.133,30,0.935,33,1.588,38,0.057,39,0.003,43,2.369,62,3.505,66,1.992,67,0.004,68,0.003,73,0.826,95,3.276,122,2.619,129,0.838,130,1.534,131,1.804,136,2.785,232,2.975,295,3.643,296,3.777,341,3.963,536,3.903,554,3.777,747,2.276,846,3.276,847,3.117,1152,3.708,1158,6.657,1252,4.304,1259,6.657,1260,6.657,1261,3.963,1262,4.821,1263,4.821,1264,4.821,1265,6.189,1266,4.821,1267,4.821]],["title/controllers/ExamTargetController.html",[166,2.022,1120,3.686]],["body/controllers/ExamTargetController.html",[0,0.251,3,0.061,4,0.061,5,0.054,10,0.246,11,1.146,13,1.795,18,0.604,20,0.926,21,0.006,22,0.829,23,0.34,24,0.58,25,1.128,26,1.406,29,0.251,38,0.061,39,0.003,42,2.743,46,2.126,67,0.004,68,0.003,82,1.617,119,2.38,129,0.898,166,2.178,168,2.326,170,3.052,175,4.619,194,3.16,195,1.1,197,4.785,198,3.052,199,2.38,200,2.702,201,3.572,203,3.052,204,3.16,205,3.417,206,3.572,215,3.16,216,2.702,217,1.535,222,1.835,522,2.048,739,2.953,746,2.629,747,3.682,963,6.41,981,3.281,982,4.243,983,4.243,1085,3.971,1117,4.577,1120,5.319,1126,4.243,1200,4.608,1232,4.608,1268,4.608,1269,6.915,1270,7.435,1271,5.162,1272,5.162,1273,5.162,1274,6.173,1275,5.162,1276,6.915,1277,5.162,1278,5.162,1279,5.162,1280,5.162,1281,5.162,1282,5.162]],["title/interfaces/ExamTargetManagerDto.html",[608,1.292,1283,3.939]],["body/interfaces/ExamTargetManagerDto.html",[3,0.081,4,0.081,5,0.072,10,0.33,21,0.006,23,0.34,24,0.937,29,0.191,38,0.081,39,0.004,67,0.005,68,0.004,73,1.042,119,3.192,608,1.866,609,2.801,732,5.486,739,5.309,746,3.525,747,3.935,987,5.69,1283,6.851,1284,6.179]],["title/classes/ExamTargetNode.html",[0,0.233,1285,3.172]],["body/classes/ExamTargetNode.html",[0,0.263,2,0.776,3,0.064,4,0.064,5,0.057,10,0.258,11,1.184,18,0.741,20,0.972,21,0.006,22,0.87,23,0.466,24,0.609,25,0.884,29,0.149,33,2.352,38,0.064,39,0.003,42,2.149,67,0.004,68,0.003,73,0.893,119,2.498,129,1.389,222,2.253,718,2.621,739,4.569,746,2.759,747,4.278,858,4.941,1136,6.788,1285,5.84,1286,4.453,1287,6.144,1288,7.141,1289,7.988,1290,5.418,1291,5.418,1292,7.141,1293,5.418,1294,4.722,1295,5.418,1296,5.418,1297,5.418,1298,5.418,1299,5.418,1300,4.453,1301,5.418,1302,7.988,1303,5.418]],["title/injectables/ExamTargetNodeFactory.html",[297,1.005,1116,3.172]],["body/injectables/ExamTargetNodeFactory.html",[0,0.286,3,0.069,4,0.069,5,0.062,10,0.28,11,1.25,18,0.514,20,1.056,21,0.006,22,0.945,23,0.37,24,0.662,25,0.961,29,0.229,33,1.939,38,0.069,39,0.004,50,2.383,67,0.005,68,0.004,119,2.715,195,1.254,222,1.562,297,1.581,298,2.083,608,1.587,739,4.311,746,2.999,747,4.138,1099,4.28,1116,4.988,1274,5.256,1285,5.801,1287,4.529,1300,6.195,1304,6.195,1305,4.839,1306,7.537,1307,6.728,1308,6.969,1309,5.888,1310,4.839,1311,5.256,1312,5.256,1313,5.256,1314,5.256,1315,5.256]],["title/interfaces/ExamTargetNodeSchema.html",[608,1.292,1308,3.686]],["body/interfaces/ExamTargetNodeSchema.html",[0,0.288,3,0.069,4,0.069,5,0.062,10,0.282,21,0.006,23,0.456,24,0.85,29,0.23,33,1.951,38,0.069,39,0.004,50,2.397,67,0.005,68,0.004,73,0.946,119,2.731,195,1.262,222,1.572,297,1.587,608,1.597,609,2.397,739,5.025,746,3.017,747,3.936,1099,4.306,1116,3.92,1285,5.518,1287,6.757,1300,6.219,1304,4.869,1305,4.869,1307,5.287,1308,7.14,1310,4.869,1311,5.287,1312,5.287,1313,5.287,1314,5.287,1315,5.287]],["title/classes/ExamTargetRepository.html",[0,0.233,1124,3.484]],["body/classes/ExamTargetRepository.html",[0,0.335,2,0.988,3,0.081,4,0.081,5,0.072,21,0.006,29,0.246,30,1.614,38,0.081,39,0.004,67,0.005,68,0.004,71,2.316,248,4.807,249,3.713,250,2.91,251,2.91,252,2.91,873,4.565,891,5.306,980,4.773,997,5.67,1124,6.046,1316,6.158,1317,6.898]],["title/injectables/ExamTargetService.html",[297,1.005,1117,3.172]],["body/injectables/ExamTargetService.html",[0,0.204,3,0.049,4,0.049,5,0.044,10,0.2,11,0.993,13,1.93,18,0.732,20,1.075,21,0.006,22,0.962,23,0.343,24,0.857,25,1.243,26,1.704,29,0.238,33,1.973,38,0.049,39,0.003,43,1.752,50,2.424,67,0.004,68,0.003,73,0.749,119,1.934,129,1.215,195,0.894,217,1.781,222,2.022,277,1.77,297,1.256,298,1.484,303,2.329,318,2.258,322,6.636,327,3.12,335,4.145,336,3.964,732,2.48,739,3.997,746,2.137,747,3.598,873,2.776,891,3.227,980,2.903,1006,2.568,1010,3.667,1031,3.448,1057,2.903,1117,3.964,1118,5.273,1124,5.54,1125,3.745,1130,3.745,1131,3.745,1161,5.347,1223,3.745,1270,6.803,1318,3.745,1319,6.987,1320,7.621,1321,5.99,1322,7.621,1323,6.987,1324,5.99,1325,4.195,1326,4.195,1327,5.99,1328,4.195,1329,4.195,1330,3.448,1331,4.195,1332,4.195,1333,5.99,1334,5.99,1335,4.195,1336,4.195,1337,5.99,1338,4.195,1339,4.195,1340,4.195,1341,4.195,1342,4.195,1343,4.195]],["title/injectables/ExamTargetTree.html",[297,1.005,1118,3.316]],["body/injectables/ExamTargetTree.html",[0,0.244,3,0.059,4,0.059,5,0.053,10,0.24,11,1.127,18,0.672,20,1.219,21,0.006,22,1.091,23,0.446,24,0.764,25,0.821,29,0.227,33,1.657,38,0.059,39,0.003,49,2.562,50,2.036,67,0.004,68,0.003,73,0.85,119,2.319,129,1.338,195,1.072,217,2.289,222,1.335,297,1.425,298,1.78,303,1.956,317,3.08,327,2.722,739,2.878,746,2.562,747,4.413,1099,3.657,1116,5.455,1118,4.702,1132,4.491,1133,4.491,1285,5.698,1287,5.227,1294,4.55,1310,4.135,1344,7.358,1345,4.491,1346,7.696,1347,6.796,1348,6.796,1349,6.796,1350,5.031,1351,6.796,1352,5.031,1353,5.031,1354,5.031,1355,5.031,1356,5.031,1357,5.031,1358,5.031,1359,5.031,1360,5.031]],["title/classes/ExamTitle1621036457247.html",[0,0.233,1361,3.939]],["body/classes/ExamTitle1621036457247.html",[0,0.262,2,0.774,3,0.063,4,0.063,5,0.057,8,2.432,9,3.102,10,0.257,11,1.182,12,3.453,13,2.085,14,2.827,15,2.772,16,2.772,17,3.616,18,0.696,20,1.279,21,0.006,22,1.416,23,0.392,24,0.801,25,1.163,26,1.724,27,2.772,29,0.149,30,1.048,38,0.063,39,0.003,43,2.085,67,0.004,68,0.003,73,0.891,122,2.827,129,0.939,130,1.719,131,2.021,136,3.007,152,4.364,522,2.827,523,5.014,538,3.449,554,4.077,1361,6.972,1362,7.571,1363,4.823,1364,5.403,1365,5.403,1366,5.403]],["title/interfaces/ExamUser.html",[175,2.657,608,1.292]],["body/interfaces/ExamUser.html",[3,0.08,4,0.08,5,0.071,10,0.324,21,0.006,23,0.472,29,0.187,38,0.08,39,0.004,40,2.699,41,2.076,67,0.005,68,0.004,73,1.031,119,3.136,175,4.573,202,5.232,608,1.834,609,2.753,611,4.946,809,5.864,1367,6.803]],["title/controllers/ExportationController.html",[166,2.022,1368,3.686]],["body/controllers/ExportationController.html",[0,0.289,3,0.07,4,0.07,5,0.062,10,0.283,11,1.257,13,1.922,18,0.519,20,1.066,21,0.006,22,0.954,23,0.292,24,0.668,25,0.969,29,0.242,38,0.089,39,0.004,41,1.952,67,0.005,68,0.004,82,1.389,166,2.506,168,2.677,170,3.512,180,3.579,188,3.512,190,4.319,193,5.511,194,3.637,195,1.265,196,5.245,198,3.512,199,2.739,200,3.109,201,4.111,215,3.637,216,3.109,217,1.767,222,1.576,1368,5.831,1369,5.303,1370,6.767,1371,5.303,1372,7.581,1373,5.941,1374,5.245,1375,5.303,1376,5.941,1377,5.941,1378,4.57,1379,5.941,1380,5.941]],["title/modules/ExportationModule.html",[256,1.695,382,3.484]],["body/modules/ExportationModule.html",[0,0.271,3,0.066,4,0.066,5,0.058,21,0.006,29,0.252,38,0.066,39,0.003,67,0.004,68,0.003,168,3.283,195,1.19,256,2.868,258,2.703,259,2.638,260,2.846,261,2.846,262,2.703,263,4.13,264,4.023,270,3.711,271,2.846,272,2.846,274,4.04,276,3.551,277,2.357,382,7.052,383,6.049,607,4.592,1135,4.987,1368,6.237,1374,6.753,1375,4.987,1381,4.987,1382,4.987,1383,5.587,1384,4.987,1385,6.323,1386,5.587,1387,5.587,1388,4.987]],["title/injectables/ExportationRepository.html",[297,1.005,1385,3.316]],["body/injectables/ExportationRepository.html",[0,0.196,3,0.047,4,0.047,5,0.042,10,0.192,11,0.967,13,1.575,17,1.541,18,0.509,20,1.046,21,0.006,22,0.936,23,0.287,24,0.655,25,0.659,26,1.185,29,0.228,30,0.784,33,1.92,38,0.047,39,0.002,41,1.6,43,1.182,45,2.795,46,1.242,67,0.004,68,0.002,69,2.114,76,1.635,78,2.674,122,1.602,145,3.607,146,3.321,180,2.753,195,0.861,217,1.201,222,1.547,232,1.82,277,1.704,295,1.955,297,1.223,298,1.429,303,1.571,327,1.429,540,2.175,545,2.473,547,2.568,550,2.568,552,2.674,555,2.795,773,3.321,775,5.205,778,3.607,819,2.937,822,3.321,823,3.607,824,3.607,825,3.321,826,4.485,827,3.607,828,3.607,829,3.607,830,3.607,831,3.321,832,3.607,833,3.321,834,4.485,835,3.321,837,3.607,838,3.607,839,3.607,840,2.795,841,3.607,842,3.607,843,3.108,844,3.607,845,3.607,1150,3.607,1151,5.205,1152,6.365,1157,6.686,1385,4.034,1389,3.607,1390,5.831,1391,4.04,1392,8.275,1393,4.04,1394,5.831,1395,4.04,1396,5.205,1397,3.607,1398,4.04,1399,4.04,1400,3.321,1401,4.04,1402,4.04,1403,4.04,1404,4.04,1405,3.607,1406,5.831,1407,6.841,1408,4.04,1409,4.04,1410,4.04,1411,4.04,1412,4.04,1413,4.04,1414,6.841,1415,6.841,1416,4.04,1417,3.607,1418,4.04,1419,4.04,1420,4.04,1421,4.04,1422,4.04,1423,4.04,1424,4.04,1425,4.04,1426,4.04,1427,4.04,1428,4.04,1429,4.04,1430,4.04,1431,4.04,1432,4.04,1433,4.04,1434,4.04,1435,4.04,1436,4.04,1437,4.04,1438,4.04,1439,4.04,1440,6.841,1441,4.04,1442,4.04,1443,4.04,1444,4.04,1445,4.04,1446,4.04,1447,4.04,1448,4.04,1449,4.04,1450,4.04,1451,4.04,1452,4.04,1453,4.04,1454,4.04]],["title/injectables/ExportationService.html",[297,1.005,1374,3.316]],["body/injectables/ExportationService.html",[0,0.202,3,0.049,4,0.049,5,0.043,10,0.198,11,0.986,13,1.923,18,0.662,20,1.361,21,0.006,22,1.218,23,0.373,24,0.852,25,1.133,26,1.542,29,0.23,33,2.75,38,0.07,39,0.002,41,1.953,43,1.739,49,2.114,50,2.811,67,0.004,68,0.002,92,1.496,100,1.646,119,1.914,129,1.034,180,3.279,195,0.884,217,1.768,222,1.843,264,2.059,297,1.247,298,1.468,303,2.312,317,2.541,327,3.112,819,5.835,1006,2.541,1010,3.639,1370,5.307,1371,5.307,1374,4.113,1385,5.247,1388,3.705,1396,3.705,1397,3.705,1405,5.307,1455,3.705,1456,5.945,1457,6.946,1458,6.946,1459,4.82,1460,4.151,1461,5.945,1462,4.151,1463,4.151,1464,4.151,1465,7.677,1466,4.151,1467,4.151,1468,3.705,1469,3.705,1470,4.151,1471,4.151,1472,4.151,1473,4.151,1474,4.151,1475,4.151,1476,4.151,1477,4.151,1478,4.151,1479,4.151,1480,4.151,1481,4.151,1482,4.151,1483,4.151,1484,4.151,1485,4.151,1486,4.151,1487,5.945,1488,4.151,1489,4.151,1490,4.322,1491,4.151,1492,4.151,1493,3.412,1494,3.705,1495,3.705,1496,4.151,1497,3.705,1498,4.151,1499,3.705,1500,4.151,1501,3.705]],["title/classes/FFEntity.html",[0,0.233,72,2.21]],["body/classes/FFEntity.html",[0,0.292,2,0.861,3,0.071,4,0.071,5,0.063,10,0.286,18,0.771,21,0.006,23,0.434,29,0.21,30,1.167,38,0.071,39,0.004,40,2.456,41,1.787,67,0.005,68,0.004,71,2.127,72,3.522,73,0.955,79,3.522,80,3.607,81,3.607,82,2.066,97,4.062,98,3.871,100,3.33,101,2.839,102,4.199,103,2.909,104,2.839,105,2.909,106,2.839,107,2.909,1502,5.368,1503,6.013,1504,6.013]],["title/interfaces/FileSendDto.html",[608,1.292,1505,3.484]],["body/interfaces/FileSendDto.html",[3,0.072,4,0.072,5,0.064,10,0.292,21,0.006,23,0.46,24,0.869,38,0.072,39,0.004,41,1.98,67,0.005,68,0.004,73,0.967,129,1.687,608,1.652,609,2.479,718,4.097,1493,7.815,1494,7.939,1495,7.939,1497,7.939,1499,7.939,1501,7.939,1505,5.619,1506,5.468,1507,5.468]],["title/interfaces/FindExamByUserDto.html",[608,1.292,1148,3.686]],["body/interfaces/FindExamByUserDto.html",[3,0.078,4,0.078,5,0.069,10,0.316,21,0.006,23,0.399,29,0.224,38,0.078,39,0.004,67,0.005,68,0.004,73,1.017,119,3.062,522,3.724,608,1.791,609,2.688,732,5.41,739,5.235,746,3.383,747,3.136,802,5.46,1098,4.829,1148,6.252,1174,7.522,1508,5.929]],["title/classes/FindPersonalDto.html",[0,0.233,1509,3.686]],["body/classes/FindPersonalDto.html",[0,0.315,2,0.93,3,0.076,4,0.076,5,0.068,10,0.309,18,0.7,21,0.006,23,0.394,29,0.221,38,0.076,39,0.004,41,1.874,46,2.921,67,0.005,68,0.004,73,1.002,110,3.191,180,4.104,932,5.334,1509,6.163,1510,7.76,1511,5.792,1512,6.489,1513,6.686,1514,6.489,1515,5.792,1516,5.334]],["title/injectables/FirebaseAdmin.html",[297,1.005,1517,2.934]],["body/injectables/FirebaseAdmin.html",[0,0.163,3,0.039,4,0.039,5,0.035,8,1.142,10,0.159,11,0.841,18,0.812,20,0.91,21,0.006,22,1.179,23,0.301,24,0.57,25,1.468,26,1.031,29,0.188,38,0.039,39,0.002,49,2.583,50,2.053,60,3.306,64,1.914,66,2.823,67,0.003,68,0.002,73,0.634,129,1.188,195,0.713,217,1.821,222,2.387,297,1.064,298,1.184,303,1.301,327,2.167,408,1.914,609,1.354,858,3.51,1517,3.105,1518,7.202,1519,8.358,1520,2.988,1521,5.468,1522,6.834,1523,4.528,1524,5.617,1525,6.834,1526,6.834,1527,6.834,1528,6.834,1529,6.834,1530,6.834,1531,6.834,1532,5.256,1533,5.649,1534,3.347,1535,4.343,1536,5.072,1537,3.347,1538,5.072,1539,3.347,1540,4.528,1541,5.072,1542,3.347,1543,3.347,1544,2.751,1545,5.072,1546,3.347,1547,3.347,1548,4.528,1549,3.347,1550,5.072,1551,3.347,1552,5.072,1553,3.347,1554,5.072,1555,3.347,1556,4.528,1557,3.347,1558,5.072,1559,3.347,1560,5.072,1561,3.347,1562,5.072,1563,3.347,1564,4.528,1565,6.125,1566,2.988,1567,3.347,1568,3.347,1569,3.347,1570,3.504,1571,2.574,1572,2.988,1573,3.347,1574,3.347,1575,3.347,1576,2.751,1577,3.347,1578,2.574,1579,3.347,1580,3.347,1581,3.347,1582,5.072,1583,5.072,1584,3.347,1585,3.347,1586,3.347,1587,3.347,1588,3.347,1589,3.347,1590,3.347,1591,3.347,1592,3.347,1593,3.347,1594,3.347,1595,3.347,1596,3.347,1597,3.347]],["title/modules/FirebaseAdminModule.html",[256,1.695,1598,3.484]],["body/modules/FirebaseAdminModule.html",[0,0.223,3,0.054,4,0.054,5,0.048,11,0.762,18,0.558,20,1.146,21,0.006,22,1.026,23,0.314,24,0.718,25,1.042,29,0.219,38,0.054,39,0.003,67,0.004,68,0.003,195,0.979,217,1.9,222,1.695,256,2.95,258,2.224,259,2.17,260,2.341,261,2.341,262,2.224,263,4.396,264,4.138,270,3.254,271,2.341,272,2.341,274,2.549,327,2.26,406,3.18,408,2.629,609,1.86,1198,7.095,1517,5.874,1518,5.648,1533,5.648,1535,5.043,1570,2.629,1571,5.648,1572,4.103,1598,6.666,1599,4.103,1600,4.103,1601,4.103,1602,5.648,1603,4.596,1604,4.103,1605,5.703,1606,4.596,1607,7.444,1608,4.103,1609,5.703,1610,5.49,1611,4.596,1612,5.703,1613,4.596,1614,4.596,1615,5.703,1616,4.596,1617,5.703,1618,4.596,1619,4.596,1620,4.596,1621,4.103]],["title/interfaces/FirebaseAsyncModuleOptions.html",[608,1.292,1610,3.316]],["body/interfaces/FirebaseAsyncModuleOptions.html",[3,0.073,4,0.073,5,0.066,10,0.298,13,1.442,21,0.006,23,0.385,24,0.881,26,1.273,29,0.216,38,0.092,39,0.004,64,3.582,67,0.005,68,0.004,71,2.182,73,0.98,129,1.363,195,1.334,256,2.215,406,6.202,408,5.128,608,2.113,609,2.534,1535,4.981,1570,4.483,1576,5.147,1578,4.817,1610,5.422,1622,4.817,1623,5.147,1624,6.996,1625,6.442,1626,5.59,1627,5.147,1628,5.59,1629,5.59]],["title/interfaces/FirebaseAuthDecodedToken.html",[608,1.292,1630,3.686]],["body/interfaces/FirebaseAuthDecodedToken.html",[3,0.077,4,0.077,5,0.069,10,0.314,21,0.006,23,0.43,24,1.026,38,0.077,39,0.004,60,3.192,67,0.005,68,0.004,73,1.012,129,1.658,510,7.023,608,1.779,609,2.67,718,4.237,1024,5.589,1622,5.075,1630,6.226,1631,5.423,1632,5.889,1633,8.151]],["title/injectables/FirebaseAuthService.html",[297,1.005,1634,3.484]],["body/injectables/FirebaseAuthService.html",[0,0.198,3,0.048,4,0.048,5,0.043,10,0.194,11,0.974,13,1.584,18,0.747,20,1.49,21,0.006,22,1.333,23,0.421,24,0.933,25,1.301,26,1.841,29,0.207,33,1.344,38,0.048,39,0.002,43,1.194,60,1.975,64,3.36,67,0.004,68,0.002,73,0.735,122,1.619,129,1.61,195,0.869,204,3.596,217,2.046,222,2.203,297,1.232,298,1.444,303,1.587,327,2.434,347,4.518,510,6.134,1024,2.499,1044,3.644,1047,2.968,1517,4.882,1540,5.244,1570,3.936,1630,3.14,1631,4.828,1633,3.644,1634,4.27,1635,6.367,1636,3.644,1637,6.881,1638,5.002,1639,5.874,1640,6.142,1641,5.874,1642,4.518,1643,5.874,1644,4.082,1645,6.881,1646,4.082,1647,5.874,1648,4.082,1649,5.874,1650,4.082,1651,4.082,1652,6.718,1653,6.881,1654,4.082,1655,5.874,1656,4.082,1657,3.644,1658,3.644,1659,4.082,1660,4.082,1661,4.082,1662,4.082,1663,4.082,1664,4.082,1665,4.082,1666,4.082,1667,4.082,1668,4.082,1669,4.082,1670,4.082]],["title/injectables/FirebaseCloudMessagingService.html",[297,1.005,1671,3.484]],["body/injectables/FirebaseCloudMessagingService.html",[0,0.262,3,0.063,4,0.063,5,0.057,10,0.257,11,1.182,18,0.696,20,1.279,21,0.006,22,1.145,23,0.392,24,0.801,25,0.882,26,1.449,29,0.22,38,0.063,39,0.003,64,4.077,67,0.004,68,0.003,73,0.891,129,1.387,195,1.151,217,2.372,222,1.434,297,1.495,298,1.911,303,2.101,327,2.822,1517,5.397,1533,6.524,1544,4.441,1556,6.363,1570,4.563,1635,6.166,1642,5.483,1657,6.363,1671,5.182,1672,6.972,1673,4.823,1674,7.977,1675,7.977,1676,7.128,1677,5.403,1678,6.524,1679,7.977,1680,7.977,1681,5.403,1682,5.403,1683,5.403,1684,5.403]],["title/injectables/FirebaseFirestoreService.html",[297,1.005,1685,3.686]],["body/injectables/FirebaseFirestoreService.html",[0,0.273,3,0.066,4,0.066,5,0.059,10,0.268,11,1.212,18,0.71,20,1.312,21,0.006,22,1.174,23,0.4,24,0.822,25,0.917,29,0.237,38,0.066,39,0.003,64,4.183,67,0.004,68,0.003,73,0.915,129,1.414,195,1.197,217,2.418,222,1.491,297,1.534,298,1.988,303,2.185,327,2.876,1517,5.466,1524,7.079,1548,6.528,1570,4.651,1635,6.261,1642,5.625,1685,5.625,1686,5.016,1687,7.313,1688,7.313,1689,7.313,1690,5.619,1691,5.619,1692,7.258,1693,5.619,1694,5.619,1695,5.619,1696,5.619,1697,5.619]],["title/modules/FirebaseModule.html",[256,1.695,1698,3.484]],["body/modules/FirebaseModule.html",[0,0.211,3,0.051,4,0.051,5,0.046,11,0.722,13,1.002,18,0.537,20,1.103,21,0.006,22,0.987,23,0.302,24,0.691,25,1.003,29,0.234,38,0.051,39,0.003,67,0.004,68,0.003,92,2.216,195,0.927,217,1.829,222,1.632,256,3.001,258,2.106,259,2.055,260,2.217,261,2.217,262,2.106,263,4.321,264,4.209,270,3.132,271,2.217,272,2.217,274,3.41,327,2.175,437,3.348,674,5.054,1198,6.973,1533,4.73,1535,4.924,1570,2.49,1598,3.164,1602,3.348,1604,3.885,1605,5.489,1607,7.296,1608,3.885,1609,5.489,1610,5.361,1612,6.365,1617,5.489,1621,5.489,1634,6.918,1658,3.885,1671,6.918,1672,3.578,1685,5.484,1698,6.814,1699,3.885,1700,3.885,1701,3.885,1702,4.353,1703,4.353,1704,4.353,1705,5.489,1706,4.353,1707,4.353,1708,4.353,1709,5.183,1710,4.353,1711,4.353,1712,4.353]],["title/interfaces/FirebaseModuleOptions.html",[608,1.292,1535,3.046]],["body/interfaces/FirebaseModuleOptions.html",[3,0.071,4,0.071,5,0.064,10,0.29,13,1.402,21,0.006,23,0.415,24,0.997,26,1.238,29,0.212,38,0.09,39,0.004,64,3.482,67,0.005,68,0.004,71,1.695,73,0.963,129,1.625,195,1.297,256,2.153,406,4.212,408,3.482,608,2.076,609,2.464,1535,5.367,1570,4.404,1576,7.294,1578,6.825,1610,4.212,1622,4.683,1623,5.004,1624,5.434,1626,5.434,1627,7.294,1628,7.538,1629,5.434]],["title/injectables/FirebaseStorageService.html",[297,1.005,1709,3.484]],["body/injectables/FirebaseStorageService.html",[0,0.248,3,0.06,4,0.06,5,0.072,10,0.243,11,1.138,12,2.619,13,1.786,18,0.677,20,1.232,21,0.006,22,1.103,23,0.381,24,0.772,25,0.834,26,1.396,29,0.228,33,1.683,38,0.06,39,0.003,42,2.026,43,1.494,64,3.928,67,0.004,68,0.003,73,0.859,92,1.841,129,1.349,195,1.088,217,2.307,222,1.356,297,1.44,298,1.807,303,1.987,327,2.744,700,4.199,1294,4.059,1490,3.714,1517,5.298,1532,6.38,1564,6.13,1570,4.437,1635,6.03,1642,5.282,1709,4.992,1713,4.561,1714,5.966,1715,6.867,1716,5.109,1717,6.38,1718,5.109,1719,5.109,1720,5.109,1721,5.109,1722,5.109,1723,5.645,1724,5.645,1725,4.561,1726,5.109,1727,5.109,1728,5.109,1729,4.561,1730,5.109,1731,5.109,1732,5.109]],["title/interfaces/FirebaseStorageUploadDto.html",[608,1.292,1717,3.686]],["body/interfaces/FirebaseStorageUploadDto.html",[3,0.076,4,0.076,5,0.068,10,0.308,21,0.006,23,0.446,24,0.899,38,0.076,39,0.004,67,0.005,68,0.004,73,1,129,1.65,608,1.744,609,2.617,718,4.199,1490,6.592,1493,7.135,1532,4.975,1717,6.15,1723,7.453,1724,7.453,1725,8.094,1733,5.773,1734,5.773]],["title/injectables/FirebaseUploader.html",[297,1.005,1735,3.686]],["body/injectables/FirebaseUploader.html",[0,0.241,3,0.058,4,0.058,5,0.052,8,1.69,10,0.236,11,1.115,13,1.758,18,0.667,20,1.37,21,0.006,22,1.226,23,0.375,24,0.858,25,1.097,26,1.368,29,0.236,38,0.058,39,0.003,67,0.004,68,0.003,92,1.785,129,1.571,130,1.576,131,1.853,195,1.055,216,2.593,217,1.473,222,2.026,297,1.411,298,1.753,303,1.927,327,2.701,1294,5.221,1459,4.275,1490,3.602,1505,6.568,1566,6.004,1709,5.955,1714,5.174,1723,4.073,1724,4.073,1735,5.174,1736,7.312,1737,4.423,1738,4.955,1739,4.955,1740,6.726,1741,6.726,1742,4.955,1743,6.004,1744,6.004,1745,4.955,1746,4.955,1747,4.955,1748,4.423,1749,4.423,1750,4.423,1751,4.423,1752,4.955,1753,4.955,1754,4.955,1755,4.955,1756,4.955,1757,4.955,1758,4.955]],["title/classes/GracefulUniqueCodeOnExamAgreement1625001565001.html",[0,0.233,1759,3.939]],["body/classes/GracefulUniqueCodeOnExamAgreement1625001565001.html",[0,0.27,2,0.796,3,0.065,4,0.065,5,0.058,8,2.477,9,3.144,10,0.265,11,1.204,12,3.48,13,2.101,14,2.879,15,2.823,16,2.823,17,3.635,18,0.634,20,1.303,21,0.006,22,1.166,23,0.357,24,0.816,25,1.184,26,1.743,27,2.823,29,0.153,30,1.078,38,0.065,39,0.003,43,2.123,54,6.48,67,0.004,68,0.003,141,3.271,295,3.512,529,2.907,545,4.444,546,4.039,843,5.584,945,4.959,946,4.567,1759,5.967,1760,7.218,1761,4.959,1762,5.556,1763,5.556,1764,5.556,1765,5.556]],["title/classes/Grade.html",[0,0.233,232,2.159]],["body/classes/Grade.html",[0,0.199,2,0.586,3,0.048,4,0.048,5,0.043,10,0.195,18,0.801,21,0.006,22,0.945,23,0.459,29,0.236,30,0.794,38,0.048,39,0.002,40,1.721,41,1.866,42,1.622,67,0.004,68,0.002,69,2.141,71,1.638,72,3.473,73,0.736,79,2.712,80,2.777,81,2.777,82,2.145,83,3.601,85,2.919,86,3.247,97,1.979,98,3.473,99,2.03,100,2.732,101,1.931,102,3.104,103,1.979,104,1.931,105,1.979,106,1.931,107,1.979,113,2.906,114,2.268,115,4.378,117,2.707,144,4.986,230,3.362,232,2.651,254,2.974,340,5.662,534,4.361,540,4.61,572,5.251,575,4.525,681,2.34,684,3.739,685,3.651,846,3.738,847,3.557,856,5.662,888,6.15,889,5.299,1766,3.651,1767,6.889,1768,6.889,1769,6.889,1770,4.09,1771,4.09,1772,4.09,1773,5.883,1774,4.09,1775,4.09,1776,4.09,1777,4.09,1778,4.09,1779,4.09,1780,4.09,1781,4.09,1782,4.09]],["title/classes/GradeIndex1624560625346.html",[0,0.233,1783,3.939]],["body/classes/GradeIndex1624560625346.html",[0,0.35,2,0.787,3,0.064,4,0.064,5,0.057,8,2.459,9,3.127,10,0.383,11,1.195,12,3.469,13,2.094,14,2.858,15,2.802,16,2.802,17,3.628,18,0.702,20,1.293,21,0.006,22,1.423,23,0.395,24,0.81,25,1.176,26,1.736,27,2.802,29,0.151,30,1.066,38,0.064,39,0.003,43,2.108,67,0.004,68,0.003,73,0.901,129,0.955,130,1.748,131,2.055,135,3.801,165,3.801,550,4.58,552,3.636,1783,7.017,1784,7.621,1785,4.904,1786,5.494,1787,5.494,1788,5.494,1789,7.206]],["title/classes/GradeRepository.html",[0,0.233,595,3.484]],["body/classes/GradeRepository.html",[0,0.257,2,0.757,3,0.062,4,0.062,5,0.055,10,0.252,11,1.165,18,0.462,20,0.949,21,0.006,22,0.849,23,0.26,24,0.594,25,0.863,26,1.428,29,0.253,30,1.363,33,1.741,38,0.062,39,0.003,46,2.692,67,0.004,68,0.003,71,1.957,222,1.403,224,4.301,225,3.499,232,2.382,248,4.248,249,2.846,250,2.23,251,2.23,252,2.23,534,4.678,540,2.846,595,5.108,846,3.486,847,3.317,856,5.775,978,5.404,1513,6.468,1516,4.346,1790,4.72,1791,6.272,1792,6.272,1793,5.287,1794,4.72,1795,4.067,1796,4.346,1797,4.346,1798,4.72,1799,5.287,1800,5.287,1801,6.272,1802,5.287,1803,5.287,1804,5.287,1805,5.287,1806,4.346,1807,5.287,1808,5.287]],["title/injectables/GradeService.html",[297,1.005,590,3.316]],["body/injectables/GradeService.html",[0,0.265,3,0.064,4,0.064,5,0.057,10,0.26,11,1.188,18,0.699,20,1.286,21,0.006,22,1.151,23,0.394,24,0.806,25,1.169,26,1.73,29,0.25,38,0.064,39,0.003,46,1.675,67,0.004,68,0.003,195,1.16,217,1.62,222,1.902,232,2.455,277,2.298,297,1.503,298,1.927,301,5.632,303,2.787,318,2.933,327,1.927,534,4.782,590,4.959,595,6.598,596,4.863,1513,6.545,1516,4.478,1791,6.398,1792,6.398,1794,4.863,1795,4.19,1798,4.863,1809,4.863,1810,5.448,1811,5.448,1812,5.448,1813,5.448,1814,5.448,1815,5.448,1816,5.448]],["title/classes/HttpExceptionFilter.html",[0,0.233,671,3.172]],["body/classes/HttpExceptionFilter.html",[0,0.198,2,0.585,3,0.048,4,0.048,5,0.043,8,2.004,10,0.194,11,0.974,18,0.601,20,1.054,21,0.006,22,1.105,23,0.289,24,0.66,25,0.666,29,0.207,33,2.884,38,0.048,39,0.002,41,1.374,50,2.785,67,0.004,68,0.002,73,0.735,92,1.471,129,1.387,130,1.299,131,1.527,189,2.413,195,0.869,216,2.136,217,2.238,303,1.587,327,2.434,388,5.278,389,2.413,530,4.783,537,2.594,608,1.584,671,3.888,850,4.783,882,2.824,1047,5.002,1294,3.472,1678,5.293,1817,5.789,1818,3.14,1819,5.656,1820,4.082,1821,5.874,1822,4.828,1823,4.828,1824,6.186,1825,5.293,1826,6.186,1827,4.082,1828,4.082,1829,4.518,1830,4.828,1831,2.968,1832,4.828,1833,3.14,1834,4.27,1835,5.656,1836,4.828,1837,3.355,1838,4.27,1839,3.14,1840,3.355,1841,3.14,1842,3.355,1843,3.355,1844,3.355,1845,3.355,1846,3.355,1847,3.355,1848,3.355,1849,3.355,1850,3.355,1851,5.656,1852,3.355,1853,3.14,1854,3.355,1855,3.355,1856,4.828,1857,3.355,1858,3.355,1859,3.355,1860,3.355,1861,3.355,1862,4.828,1863,3.355,1864,3.355,1865,3.355,1866,3.355,1867,3.355,1868,3.355,1869,3.355,1870,3.355,1871,3.355,1872,3.355,1873,3.355,1874,3.355,1875,3.355,1876,3.355,1877,3.355]],["title/interfaces/IClassValidatorException.html",[608,1.292,1838,3.484]],["body/interfaces/IClassValidatorException.html",[0,0.212,3,0.051,4,0.051,5,0.046,8,1.488,10,0.208,21,0.006,22,0.7,23,0.351,29,0.214,33,2.935,38,0.051,39,0.003,41,1.814,50,2.492,67,0.004,68,0.003,73,0.77,92,1.572,129,1.575,189,2.579,195,0.929,216,2.283,217,1.831,327,1.543,388,4.537,389,2.579,530,4.929,537,2.772,608,1.661,609,1.765,671,2.887,850,3.914,1047,3.171,1294,3.641,1678,6.53,1817,3.355,1818,3.355,1819,5.062,1822,3.586,1823,3.586,1824,5.062,1825,3.355,1826,5.062,1829,4.737,1830,5.062,1831,3.171,1832,5.062,1833,3.355,1834,4.477,1835,6.978,1836,5.062,1837,3.586,1838,5.19,1839,5.965,1840,3.586,1841,3.355,1842,3.586,1843,3.586,1844,3.586,1845,3.586,1846,3.586,1847,3.586,1848,3.586,1849,3.586,1850,3.586,1851,5.868,1852,3.586,1853,3.355,1854,3.586,1855,3.586,1856,5.062,1857,3.586,1858,3.586,1859,3.586,1860,3.586,1861,3.586,1862,5.062,1863,3.586,1864,3.586,1865,3.586,1866,3.586,1867,3.586,1868,3.586,1869,3.586,1870,3.586,1871,3.586,1872,3.586,1873,3.586,1874,3.586,1875,3.586,1876,3.586,1877,3.586]],["title/interfaces/IEntity.html",[608,1.292,1878,3.686]],["body/interfaces/IEntity.html",[0,0.142,3,0.034,4,0.034,5,0.031,8,0.996,9,1.776,10,0.139,12,1.741,13,1.051,16,1.135,17,2.144,21,0.006,22,0.903,23,0.224,26,0.928,27,1.135,29,0.175,30,0.567,31,2.246,33,2.911,34,2.7,36,3.715,38,0.034,39,0.002,40,2.678,41,1.315,43,2.785,45,5.756,46,2.25,55,4.4,56,2.246,57,3.217,58,2.4,59,6.285,60,2.209,61,2.532,62,5.559,63,1.856,67,0.003,68,0.002,73,0.571,92,1.052,100,2.23,125,2.246,147,2.246,225,3.022,232,3.297,295,4.397,425,2.246,490,2.4,525,2.123,527,2.246,533,4.088,534,3.727,536,4.326,537,4.65,538,2.209,540,3.939,542,2.246,544,4.326,548,3.32,575,3.513,608,0.787,609,1.182,847,2.156,1806,5.227,1878,6.626,1879,2.246,1880,2.246,1881,2.607,1882,2.607,1883,2.607,1884,2.4,1885,2.4,1886,2.607,1887,6.399,1888,2.4,1889,2.4,1890,2.4,1891,2.246,1892,2.607,1893,2.607,1894,2.607,1895,2.607,1896,2.607,1897,2.4,1898,2.607,1899,4.077,1900,5.677,1901,6.532,1902,2.607,1903,4.077,1904,6.826]],["title/interfaces/IException.html",[608,1.292,1834,3.484]],["body/interfaces/IException.html",[0,0.199,3,0.048,4,0.048,5,0.043,8,1.401,10,0.196,21,0.006,22,1.212,23,0.421,24,0.935,29,0.208,33,2.889,38,0.048,39,0.002,41,1.765,50,2.388,67,0.004,68,0.002,73,0.738,92,1.48,129,1.596,189,4.462,195,0.875,216,2.15,217,1.755,327,1.453,388,4.388,389,2.428,530,4.797,537,2.61,608,1.591,609,1.662,671,2.719,850,3.75,1047,2.986,1294,4.725,1678,6.401,1817,3.159,1818,3.159,1819,4.85,1822,3.376,1823,3.376,1824,4.85,1825,3.159,1826,4.85,1829,4.538,1830,4.85,1831,2.986,1832,4.85,1833,3.159,1834,5.02,1835,6.84,1836,6.571,1837,6.204,1838,4.29,1839,3.159,1840,3.376,1841,3.159,1842,3.376,1843,3.376,1844,3.376,1845,3.376,1846,3.376,1847,3.376,1848,3.376,1849,3.376,1850,3.376,1851,5.676,1852,3.376,1853,3.159,1854,3.376,1855,3.376,1856,4.85,1857,3.376,1858,3.376,1859,3.376,1860,3.376,1861,3.376,1862,4.85,1863,3.376,1864,3.376,1865,3.376,1866,3.376,1867,3.376,1868,3.376,1869,3.376,1870,3.376,1871,3.376,1872,3.376,1873,3.376,1874,3.376,1875,3.376,1876,3.376,1877,3.376]],["title/modules/InfraModule.html",[256,1.695,383,3.172]],["body/modules/InfraModule.html",[0,0.214,3,0.052,4,0.052,5,0.046,21,0.006,29,0.259,38,0.052,39,0.003,67,0.004,68,0.003,168,2.797,195,0.94,256,2.541,258,2.134,259,2.083,260,2.247,261,2.247,262,2.134,263,3.658,264,3.563,270,3.161,271,2.247,272,2.247,274,3.982,383,6.311,387,5.524,388,5.563,389,2.608,406,4.295,408,3.551,1008,6.5,1029,3.938,1459,5.679,1615,6.411,1698,5.971,1705,3.938,1735,4.774,1748,3.938,1751,3.938,1905,3.938,1906,3.938,1907,4.411,1908,3.938,1909,5.914,1910,6.5,1911,4.411,1912,5.524,1913,4.411,1914,3.626,1915,4.411,1916,4.774,1917,3.626,1918,4.411,1919,4.774,1920,4.411,1921,4.411,1922,4.411,1923,3.938,1924,4.411,1925,4.411,1926,6.207,1927,4.411]],["title/injectables/JwtGuard.html",[200,2.508,297,1.005]],["body/injectables/JwtGuard.html",[0,0.35,3,0.084,4,0.084,5,0.075,21,0.006,29,0.235,38,0.084,39,0.004,67,0.005,68,0.004,71,2.005,195,1.534,200,4.465,297,1.79,298,2.547,1928,6.428,1929,7.2,1930,5.919,1931,7.2]],["title/interfaces/JwtPayload.html",[608,1.292,1932,3.686]],["body/interfaces/JwtPayload.html",[3,0.081,4,0.081,5,0.073,10,0.331,21,0.006,23,0.474,38,0.081,39,0.004,67,0.005,68,0.004,73,1.045,129,1.679,510,7.147,608,1.873,609,2.811,1932,6.424,1933,6.201,1934,6.201]],["title/injectables/JwtStrategy.html",[297,1.005,455,3.484]],["body/injectables/JwtStrategy.html",[0,0.232,3,0.056,4,0.056,5,0.05,10,0.227,11,1.087,13,1.725,18,0.573,20,1.177,21,0.006,22,1.053,23,0.322,24,0.737,25,0.779,26,1.333,29,0.255,33,2.16,36,2.57,38,0.056,39,0.003,43,1.918,46,2.304,49,3.34,50,2.654,60,3.173,61,2.648,67,0.004,68,0.003,71,1.33,92,1.72,195,1.017,217,1.95,222,1.267,297,1.375,298,1.689,303,2.55,327,2.32,388,5.685,389,2.822,392,3.672,436,5.551,437,3.672,455,4.768,458,3.672,459,3.672,478,5.685,489,6.158,491,4.262,1930,3.925,1932,6.203,1935,4.262,1936,6.558,1937,4.775,1938,4.775,1939,6.558,1940,4.775,1941,4.775,1942,4.262,1943,4.775,1944,4.775,1945,4.775,1946,4.262,1947,3.925,1948,4.775,1949,4.775,1950,4.775,1951,4.775,1952,4.775,1953,4.775,1954,4.775,1955,4.775,1956,4.775,1957,4.775,1958,6.558,1959,4.775]],["title/modules/LoggerModule.html",[256,1.695,384,3.484]],["body/modules/LoggerModule.html",[0,0.308,3,0.074,4,0.074,5,0.066,21,0.006,29,0.218,38,0.074,39,0.004,67,0.005,68,0.004,195,1.351,256,3.044,258,3.069,259,2.995,260,3.23,261,3.23,262,3.069,263,4.382,264,4.269,270,4.023,271,3.23,272,3.23,384,6.965,674,6.493,848,6.573,1960,5.662,1961,5.662,1962,5.662,1963,6.343,1964,6.343]],["title/classes/LoginDto.html",[0,0.233,434,3.316]],["body/classes/LoginDto.html",[0,0.381,2,0.897,3,0.073,4,0.073,5,0.066,10,0.298,18,0.684,21,0.006,23,0.385,29,0.236,38,0.073,39,0.004,57,4.893,61,4.346,67,0.005,68,0.004,71,2.182,73,0.98,82,1.833,98,2.887,129,1.487,434,5.422,443,6.202,445,4.144,448,4.981,449,2.887,493,5.147,710,5.59,711,6.58,713,5.59,921,5.59,1965,5.59,1966,6.262,1967,5.147,1968,6.262,1969,6.262]],["title/classes/MailerService.html",[0,0.233,1909,3.172]],["body/classes/MailerService.html",[0,0.326,2,0.961,3,0.079,4,0.079,5,0.07,10,0.32,11,1.356,18,0.586,20,1.204,21,0.006,22,1.077,23,0.33,24,0.754,25,1.095,26,1.663,29,0.185,38,0.079,39,0.004,67,0.005,68,0.004,1909,5.413,1970,5.99,1971,8.198,1972,6.723,1973,7.301,1974,6.845,1975,6.71,1976,5.515,1977,5.99]],["title/injectables/NodeMailerService.html",[297,1.005,1919,3.686]],["body/injectables/NodeMailerService.html",[0,0.25,3,0.06,4,0.06,5,0.054,8,1.757,10,0.245,11,1.144,13,1.793,18,0.603,20,1.239,21,0.006,22,1.108,23,0.339,24,0.776,25,0.84,26,1.403,29,0.251,33,1.696,38,0.06,39,0.003,43,1.506,67,0.004,68,0.003,195,1.097,217,2.316,297,1.448,298,1.821,303,2.684,327,2.755,388,5.798,389,3.044,408,2.945,848,5.507,850,4.949,1030,4.596,1909,4.569,1914,4.232,1916,3.96,1917,4.232,1919,5.31,1972,5.674,1973,6.162,1974,6.494,1976,4.232,1977,4.596,1978,4.596,1979,5.149,1980,7.973,1981,5.149,1982,5.149,1983,4.596,1984,5.149,1985,5.149,1986,6.903,1987,5.149,1988,4.232,1989,5.149,1990,5.149,1991,5.149]],["title/injectables/PayloadInterceptor.html",[297,1.005,672,3.484]],["body/injectables/PayloadInterceptor.html",[0,0.3,3,0.073,4,0.073,5,0.065,8,2.11,10,0.295,11,1.289,18,0.54,20,1.11,21,0.006,22,0.993,23,0.304,24,0.695,25,1.009,29,0.234,38,0.073,39,0.004,67,0.005,68,0.004,195,1.317,222,1.641,297,1.631,298,2.187,336,4.092,672,5.653,1330,5.083,1490,4.495,1992,5.52,1993,7.775,1994,7.775,1995,7.966,1996,8.505,1997,8.924,1998,6.183,1999,8.505,2000,7.775,2001,5.52,2002,6.183,2003,6.183]],["title/classes/Period.html",[0,0.233,534,2.441]],["body/classes/Period.html",[0,0.231,2,0.681,3,0.056,4,0.056,5,0.05,10,0.311,18,0.795,21,0.006,22,1.2,23,0.464,24,0.735,29,0.206,30,0.922,38,0.056,39,0.003,40,1.912,41,1.111,42,1.885,67,0.004,68,0.003,71,1.82,72,3.711,73,0.818,79,3.014,80,3.086,81,3.086,82,2.128,85,3.708,91,3.864,92,2.355,97,2.299,98,3.711,99,2.358,100,3.544,101,2.243,102,3.367,103,2.299,104,2.243,105,2.299,106,2.243,107,2.299,113,3.395,114,2.635,129,1.137,410,3.864,415,3.454,522,3.347,526,5.569,534,3.329,681,2.718,684,4.154,730,6.191,731,6.191,1226,3.906,2004,4.242,2005,7.473,2006,4.752,2007,4.752,2008,4.752,2009,4.752,2010,3.906,2011,4.752,2012,4.752]],["title/classes/PeriodIndex1624547816204.html",[0,0.233,2013,3.939]],["body/classes/PeriodIndex1624547816204.html",[0,0.225,2,0.665,3,0.054,4,0.054,5,0.049,8,2.194,9,2.869,10,0.352,11,1.066,12,3.301,13,1.993,14,2.55,15,2.5,16,2.5,17,3.504,18,0.644,20,1.154,21,0.006,22,1.344,23,0.363,24,0.723,25,1.049,26,1.62,27,2.5,29,0.128,30,0.9,38,0.054,39,0.003,43,2.647,66,2.656,67,0.004,68,0.003,73,0.804,86,2.771,122,2.55,129,0.807,130,1.476,131,1.736,135,3.21,136,3.652,141,2.897,150,4.557,152,5.3,153,3.19,154,3.936,156,4.877,157,3.936,159,4.71,164,3.111,165,3.21,522,3.434,525,3.373,527,3.569,533,6.294,534,3.275,554,3.678,559,7.112,560,5.285,2013,6.549,2014,7.112,2015,4.142,2016,4.64,2017,4.64,2018,4.64,2019,6.43]],["title/classes/PeriodRepository.html",[0,0.233,597,3.484]],["body/classes/PeriodRepository.html",[0,0.337,2,0.995,3,0.081,4,0.081,5,0.073,21,0.006,29,0.247,30,1.621,38,0.081,39,0.004,67,0.005,68,0.004,71,2.326,248,4.821,249,3.74,250,2.93,251,2.93,252,2.93,534,3.538,597,6.072,1795,5.343,2020,6.201,2021,6.947]],["title/injectables/PeriodService.html",[297,1.005,591,3.316]],["body/injectables/PeriodService.html",[0,0.217,3,0.052,4,0.052,5,0.047,10,0.213,11,1.037,13,1.969,18,0.684,20,1.123,21,0.006,22,1.005,23,0.307,24,0.703,25,1.179,26,1.738,29,0.227,30,0.866,33,2.061,38,0.052,39,0.003,43,1.83,49,3.186,50,2.532,67,0.004,68,0.003,100,3.107,195,0.95,217,1.327,222,2.078,277,1.882,297,1.312,298,1.578,301,5.184,303,2.433,317,2.731,318,2.402,327,1.578,346,5.143,534,4.472,591,4.329,597,6.216,598,3.982,730,4.812,731,4.812,859,3.431,860,3.431,862,3.243,1795,3.431,2022,3.982,2023,7.833,2024,7.226,2025,4.461,2026,4.461,2027,4.461,2028,4.461,2029,4.461,2030,7.226,2031,4.461,2032,4.461,2033,4.461,2034,4.461,2035,4.461,2036,4.461,2037,4.461,2038,7.833,2039,6.256,2040,4.461,2041,6.256,2042,4.461,2043,6.256,2044,4.461,2045,4.461,2046,6.256,2047,6.256,2048,4.461,2049,4.461]],["title/injectables/PersonalQuestionGroup.html",[297,1.005,2050,3.316]],["body/injectables/PersonalQuestionGroup.html",[0,0.3,3,0.051,4,0.051,5,0.046,10,0.209,11,1.024,13,1.648,18,0.539,20,1.109,21,0.006,22,0.992,23,0.304,24,0.694,25,0.715,26,1.256,29,0.253,33,2.357,38,0.051,39,0.004,43,1.807,46,2.2,50,1.773,67,0.004,68,0.003,92,1.579,110,2.627,195,0.933,217,1.837,222,1.899,232,1.974,277,1.848,297,1.296,298,1.55,303,2.402,318,2.359,327,2.185,522,3.538,590,6.045,631,2.359,633,2.682,846,3.856,847,3.669,893,4.381,899,3.37,1006,2.682,1010,3.782,1057,3.032,1059,3.37,1226,3.602,1417,3.911,2010,3.602,2050,4.275,2051,6.388,2052,3.911,2053,7.156,2054,5.377,2055,4.382,2056,4.382,2057,4.382,2058,3.911,2059,3.911,2060,4.382,2061,4.752,2062,3.602,2063,4.382,2064,3.032,2065,4.752,2066,3.602,2067,3.602,2068,3.602,2069,3.911,2070,3.37,2071,4.382,2072,4.382,2073,6.178,2074,4.382,2075,4.382,2076,6.178,2077,4.382,2078,4.382,2079,4.382,2080,3.911,2081,4.382]],["title/classes/Professor.html",[0,0.233,846,2.378]],["body/classes/Professor.html",[0,0.207,2,0.611,3,0.05,4,0.05,5,0.045,10,0.203,18,0.815,21,0.006,23,0.463,24,0.682,26,1.434,29,0.194,30,0.828,34,3.585,36,3.264,38,0.05,39,0.003,40,1.774,41,0.998,42,2.405,46,2.772,63,3.854,67,0.004,68,0.003,71,1.689,72,1.968,73,0.758,74,2.174,79,2.796,80,2.863,81,2.863,82,2.163,85,4.025,91,2.523,92,3.037,95,3.811,97,2.065,98,4.215,99,2.118,100,2.797,101,2.015,102,3.178,103,2.065,104,2.015,105,2.065,106,2.015,107,2.065,129,1.226,130,1.358,222,1.132,232,2.732,243,4.984,254,3.103,410,4.169,411,3.797,627,3.508,634,4.196,681,2.441,809,3.854,846,3.009,858,4.196,889,4.664,1024,3.712,2070,5.425,2082,3.81,2083,7.053,2084,4.984,2085,3.81,2086,5.413,2087,4.268,2088,3.81,2089,3.81,2090,3.81,2091,3.81,2092,3.81,2093,3.81,2094,3.81,2095,4.268,2096,4.268]],["title/classes/ProfessorRepository.html",[0,0.233,599,3.484]],["body/classes/ProfessorRepository.html",[0,0.337,2,0.995,3,0.081,4,0.081,5,0.073,21,0.006,29,0.247,30,1.621,38,0.081,39,0.004,67,0.005,68,0.004,71,2.326,248,4.821,249,3.74,250,2.93,251,2.93,252,2.93,599,6.072,846,3.447,1796,5.71,2097,6.201,2098,6.947]],["title/injectables/ProfessorService.html",[297,1.005,592,3.316]],["body/injectables/ProfessorService.html",[0,0.251,3,0.061,4,0.061,5,0.054,10,0.247,11,1.148,18,0.682,20,1.401,21,0.006,22,1.254,23,0.384,24,0.878,25,1.13,26,1.695,29,0.252,30,1.004,33,1.705,38,0.061,39,0.003,67,0.004,68,0.003,82,1.21,195,1.103,217,1.539,222,1.838,250,3.518,251,2.184,252,2.184,277,2.184,297,1.453,298,1.831,302,4.095,303,2.694,318,2.786,327,1.831,347,3.981,592,4.793,599,6.062,600,4.62,800,5.299,846,3.437,1006,3.169,1010,4.241,1037,3.763,1172,3.763,1796,4.255,2099,4.62,2100,6.184,2101,5.176,2102,6.184,2103,5.176,2104,6.184,2105,6.189,2106,5.176,2107,4.62,2108,4.62,2109,5.176,2110,4.62,2111,5.176]],["title/classes/Question.html",[0,0.233,76,1.94]],["body/classes/Question.html",[0,0.175,2,0.517,3,0.042,4,0.042,5,0.038,10,0.256,18,0.811,21,0.006,23,0.472,24,0.798,29,0.196,30,0.701,38,0.042,39,0.002,40,1.571,41,1.774,42,1.432,67,0.003,68,0.002,69,3.971,71,1.495,72,3.797,73,0.672,76,2.173,79,3.273,80,3.352,81,3.352,82,2.173,83,2.21,85,3.765,86,3.06,91,4.196,92,2.865,97,1.747,98,3.797,99,1.791,100,3.154,101,2.535,102,2.888,103,1.747,104,2.535,105,1.747,106,2.535,107,1.747,110,3.23,113,3.474,114,2.977,115,3.413,129,1.383,130,2.258,340,5.269,410,3.174,415,2.625,523,4.196,529,2.81,570,3.924,631,3.821,632,2.625,633,2.21,664,3.924,681,2.065,684,3.413,718,2.598,763,5.723,764,5.723,765,5.269,766,5.269,862,3.904,877,2.39,878,2.39,879,2.39,893,3.924,2112,3.223,2113,3.611,2114,3.611,2115,3.611,2116,3.611,2117,3.611,2118,3.611,2119,3.611,2120,3.611,2121,3.611,2122,3.611,2123,3.611,2124,3.611]],["title/controllers/QuestionController.html",[166,2.022,2125,3.686]],["body/controllers/QuestionController.html",[0,0.153,3,0.037,4,0.037,5,0.033,10,0.15,11,0.803,13,2.17,18,0.686,20,1.41,21,0.006,22,1.262,23,0.437,24,0.883,25,1.282,26,1.783,29,0.234,38,0.037,39,0.002,40,2.207,41,2.051,42,2.34,66,1.301,67,0.003,68,0.002,76,3.367,82,1.838,110,2.978,141,2.658,166,1.328,168,1.419,170,1.861,172,3.077,181,2.001,182,2.422,186,2.422,188,2.862,189,4.225,190,2.289,192,2.179,193,5.196,194,1.928,195,0.671,197,5.613,198,1.861,199,1.452,200,1.648,215,1.928,216,1.648,217,0.936,222,2.085,226,2.422,228,2.422,302,2.862,305,3.749,312,2.084,315,2.084,492,2.77,664,2.964,749,4.081,757,4.796,758,4.288,760,5.613,978,2.422,979,2.001,1017,3.98,1083,2.588,1085,2.422,1087,2.588,1108,2.588,2062,2.588,2125,3.724,2126,2.811,2127,5.266,2128,4.322,2129,4.537,2130,2.811,2131,3.149,2132,2.811,2133,3.149,2134,3.149,2135,2.811,2136,4.814,2137,3.149,2138,2.811,2139,4.842,2140,3.149,2141,2.811,2142,3.149,2143,3.149,2144,4.814,2145,2.811,2146,3.149,2147,4.842,2148,5.898,2149,2.811,2150,3.149,2151,4.322,2152,5.911,2153,2.588,2154,2.811,2155,2.422,2156,2.588,2157,2.811,2158,2.811,2159,2.811,2160,3.149,2161,3.149,2162,3.149,2163,3.149,2164,3.149,2165,3.149,2166,3.149,2167,3.149,2168,3.149,2169,3.149,2170,3.149]],["title/classes/QuestionFindDto.html",[0,0.233,2136,3.484]],["body/classes/QuestionFindDto.html",[0,0.399,2,0.968,3,0.079,4,0.079,5,0.071,10,0.322,18,0.59,21,0.006,23,0.332,24,0.923,29,0.186,38,0.079,39,0.004,41,1.921,67,0.005,68,0.004,73,1.027,82,1.58,110,3.015,449,3.115,664,5.417,665,4.554,699,4.855,2136,5.971,2171,6.751,2172,6.031,2173,6.756,2174,6.756]],["title/classes/QuestionGroup.html",[0,0.233,631,2.58]],["body/classes/QuestionGroup.html",[0,0.362,2,0.495,3,0.041,4,0.041,5,0.036,10,0.248,11,0.862,18,0.805,21,0.006,23,0.465,25,0.564,29,0.191,30,0.671,38,0.041,39,0.002,40,1.521,41,1.742,42,1.372,67,0.003,68,0.002,71,1.448,72,3.743,73,0.65,76,3.015,79,3.204,80,3.281,81,3.281,82,2.157,83,2.117,85,3.448,86,2.995,91,3.074,92,1.873,95,1.716,97,1.673,98,3.743,99,1.716,100,3.104,101,2.455,102,2.815,103,1.673,104,2.455,105,1.673,106,2.455,107,1.673,110,3.137,113,3.302,114,2.883,115,3.304,129,0.904,130,2.49,180,3.281,330,3.971,410,3.074,415,2.514,522,3.22,529,2.721,538,3.023,551,3.693,570,3.825,631,2.799,632,6.213,681,1.978,684,3.304,718,3.362,857,5.711,862,5.052,863,4.808,877,2.289,878,2.289,879,2.289,880,5.136,882,2.393,899,2.66,900,2.843,901,2.843,2010,2.843,2175,3.087,2176,3.458,2177,3.458,2178,3.458,2179,3.458,2180,3.087,2181,3.458,2182,3.458,2183,3.458,2184,3.458,2185,3.458,2186,3.458,2187,3.458,2188,3.458,2189,3.458,2190,3.458,2191,3.087,2192,3.458,2193,3.458,2194,3.458,2195,3.458,2196,3.458]],["title/classes/QuestionGroup1620179231630.html",[0,0.233,2197,3.939]],["body/classes/QuestionGroup1620179231630.html",[0,0.296,2,0.617,3,0.05,4,0.05,5,0.045,8,2.082,9,2.756,10,0.205,11,1.012,12,3.223,13,1.946,14,2.42,15,2.372,16,2.372,17,3.445,18,0.619,20,1.095,21,0.006,22,1.307,23,0.348,24,0.686,25,0.996,26,1.567,27,2.372,29,0.119,30,0.835,38,0.05,39,0.003,40,2.255,43,2.472,66,1.778,67,0.004,68,0.003,73,0.763,76,3.12,86,3.055,90,3.735,122,3.791,124,2.979,129,0.749,130,2.765,131,1.61,135,4.222,136,3.566,137,4.038,138,5.594,139,5.594,140,4.038,141,3.193,142,4.038,143,4.038,149,4.038,150,4.41,151,4.038,152,3.735,153,2.136,154,2.635,156,3.735,157,2.635,159,3.607,164,2.083,165,4.222,423,3.735,523,3.607,538,2.083,550,3.878,553,4.693,555,4.222,556,3.311,765,3.539,766,3.539,2197,6.337,2198,6.882,2199,3.843,2200,4.305,2201,4.305,2202,4.305,2203,3.843,2204,3.843]],["title/controllers/QuestionGroupController.html",[166,2.022,2205,3.686]],["body/controllers/QuestionGroupController.html",[0,0.14,3,0.034,4,0.034,5,0.03,10,0.138,11,0.751,13,2.173,18,0.688,20,1.367,21,0.006,22,1.223,23,0.433,24,0.856,25,1.287,26,1.829,29,0.233,38,0.034,39,0.002,40,2.131,41,2.009,42,2.216,46,2.425,66,1.194,67,0.003,68,0.002,76,2.779,82,1.844,110,2.976,141,2.517,166,1.219,168,1.302,170,1.708,171,2.638,172,2.879,180,2.638,181,1.837,182,2.223,186,2.223,188,2.678,189,4.06,190,2.101,192,3.134,193,4.993,194,1.769,195,0.616,196,3.134,197,5.61,198,1.708,199,1.333,200,1.512,204,2.773,205,1.913,206,2,215,1.769,216,1.512,217,0.859,219,2.58,222,2.092,226,2.223,228,2.223,301,4.185,302,2.678,312,1.913,315,1.913,492,1.653,631,4.365,633,1.769,661,5.297,791,5.041,893,2.773,932,2.376,976,2.58,979,1.837,1081,4.297,1083,2.376,1085,2.223,1087,2.376,1108,2.376,2064,2,2129,4.297,2138,2.58,2141,2.58,2145,2.58,2149,2.58,2151,4.044,2152,6.131,2153,2.376,2155,2.223,2159,2.58,2205,3.484,2206,7.238,2207,2.58,2208,4.987,2209,2.58,2210,5.586,2211,2.89,2212,2.58,2213,2.89,2214,2.89,2215,2.89,2216,2.89,2217,2.89,2218,2.89,2219,2.89,2220,2.89,2221,5.297,2222,2.89,2223,5.733,2224,2.89,2225,3.697,2226,2.58,2227,2.376,2228,5.198,2229,2.58,2230,2.89,2231,2.89,2232,2.89,2233,2.89,2234,2.89,2235,2.89,2236,2.89,2237,2.89,2238,2.89,2239,2.89]],["title/classes/QuestionGroupGrade.html",[0,0.233,2061,3.686]],["body/classes/QuestionGroupGrade.html",[0,0.331,2,0.574,3,0.047,4,0.047,5,0.042,10,0.191,11,0.961,18,0.83,21,0.006,23,0.465,25,0.654,29,0.16,38,0.047,39,0.002,40,1.695,41,1.592,42,1.589,67,0.003,68,0.002,71,1.614,72,3.44,73,0.725,76,1.622,79,3.44,80,3.523,81,3.523,82,2.211,83,2.453,85,3.702,86,2.498,91,2.369,92,1.444,97,1.939,98,4.359,99,1.988,100,3.273,101,2.737,102,3.068,103,1.939,104,2.737,105,1.939,106,2.737,107,1.939,110,2.128,129,0.697,130,2.166,180,2.737,232,3.718,242,3.577,330,3.684,410,2.369,522,2.701,529,2.097,538,2.804,551,3.426,570,3.548,631,4.916,633,2.453,681,2.292,718,2.804,857,5.597,862,4.214,863,4.01,877,2.652,878,2.652,879,2.652,880,3.294,882,2.773,893,3.548,2061,4.458,2064,2.773,2171,4.764,2180,3.577,2240,3.577,2241,4.007,2242,4.007,2243,4.007,2244,4.007,2245,4.007,2246,4.007,2247,4.007,2248,4.007,2249,4.007]],["title/classes/QuestionGroupGradeRemove1624883202213.html",[0,0.233,2250,3.939]],["body/classes/QuestionGroupGradeRemove1624883202213.html",[0,0.322,2,0.696,3,0.057,4,0.057,5,0.051,8,2.264,9,2.939,10,0.316,11,1.1,12,3.348,13,2.021,14,2.632,15,2.58,16,2.58,17,3.538,18,0.66,20,1.191,21,0.006,22,1.366,23,0.371,24,0.746,25,1.083,26,1.651,27,2.58,29,0.134,30,0.942,38,0.057,39,0.003,40,1.941,43,1.941,67,0.004,68,0.003,73,0.83,86,3.258,90,4.062,122,3.68,129,0.844,130,2.793,131,1.817,136,2.799,137,3.215,138,5.003,139,5.003,140,3.215,141,2.188,142,3.215,143,3.215,149,3.215,150,2.778,151,3.215,171,2.293,295,2.35,423,2.973,430,3.736,529,3.956,538,2.35,551,2.871,552,3.215,569,5.924,570,4.062,571,3.992,2250,6.677,2251,7.251,2252,4.336,2253,4.857,2254,4.857,2255,4.857]],["title/modules/QuestionGroupModule.html",[256,1.695,269,3.316]],["body/modules/QuestionGroupModule.html",[0,0.236,3,0.057,4,0.057,5,0.051,21,0.006,29,0.261,38,0.057,39,0.003,67,0.004,68,0.003,110,1.787,168,2.995,195,1.037,256,2.677,258,2.356,259,2.299,260,2.48,261,2.48,262,2.356,263,3.855,264,3.755,268,5.815,269,6.729,270,3.385,271,2.48,272,2.48,274,3.686,276,3.094,277,2.054,282,3.54,305,6.072,380,5.584,396,4.346,1134,4.002,2050,6.079,2054,3.369,2067,4.002,2068,4.002,2125,5.821,2157,4.346,2205,5.821,2225,5.815,2226,4.346,2227,4.002,2256,4.346,2257,4.346,2258,4.346,2259,4.869,2260,4.869,2261,4.869,2262,4.869,2263,4.869,2264,4.832,2265,4.346,2266,4.346,2267,4.346,2268,4.869]],["title/classes/QuestionGroupRepository.html",[0,0.233,2054,3.316]],["body/classes/QuestionGroupRepository.html",[0,0.334,2,0.985,3,0.081,4,0.081,5,0.072,21,0.006,29,0.246,30,1.61,38,0.081,39,0.004,67,0.005,68,0.004,71,2.311,110,2.523,248,4.8,249,3.7,250,2.9,251,2.9,252,2.9,631,3.7,633,4.208,2054,5.742,2064,4.756,2269,6.136,2270,6.136,2271,6.874]],["title/injectables/QuestionGroupService.html",[297,1.005,2225,3.172]],["body/injectables/QuestionGroupService.html",[0,0.174,3,0.025,4,0.025,5,0.023,10,0.103,11,0.594,13,2.078,18,0.661,20,1.317,21,0.006,22,1.178,23,0.361,24,0.825,25,1.197,26,1.717,29,0.242,30,0.696,33,2.556,38,0.025,39,0.003,40,2.213,41,1.855,42,0.858,43,2.47,46,1.412,49,1.826,50,1.859,66,0.894,67,0.002,68,0.001,76,2.397,82,1.385,110,2.849,124,2.481,141,2.069,171,2.168,172,2.279,180,3.014,181,2.279,195,0.461,217,1.589,222,1.877,250,3.346,251,0.913,252,0.913,277,0.913,297,0.752,298,0.765,301,3.536,302,2.12,303,1.394,305,4.297,312,2.373,315,1.432,317,2.811,318,1.165,319,2.373,320,1.497,321,1.573,327,2.392,330,1.375,335,1.497,336,1.432,341,1.778,357,1.664,492,1.237,522,2.349,529,1.132,570,2.811,631,4.488,633,1.324,661,4.642,791,4.417,846,1.779,847,1.693,855,1.778,863,1.497,893,3.625,899,1.664,900,1.778,901,1.778,979,1.375,1006,1.324,1007,4.297,1010,2.195,1037,1.573,1040,1.778,1055,1.778,1057,3.177,1059,3.532,1081,3.532,1171,1.931,1238,1.931,1239,1.778,1509,4.109,1801,3.201,2050,3.696,2054,3.696,2058,1.931,2059,1.931,2064,1.497,2065,4.109,2066,1.778,2067,1.778,2068,1.778,2069,1.931,2080,1.931,2129,3.532,2155,1.664,2208,4.099,2209,1.931,2212,1.931,2221,3.884,2223,5.143,2225,2.373,2228,4.391,2229,1.931,2266,1.931,2267,1.931,2272,6.928,2273,1.931,2274,4.592,2275,4.592,2276,2.163,2277,2.163,2278,2.163,2279,2.163,2280,2.163,2281,2.163,2282,2.163,2283,2.163,2284,1.931,2285,2.163,2286,2.163,2287,2.163,2288,2.163,2289,2.163,2290,3.775,2291,2.163,2292,2.163,2293,1.664,2294,1.931,2295,2.163,2296,2.163,2297,3.586,2298,2.163,2299,2.163,2300,2.163,2301,3.586,2302,3.586,2303,3.586,2304,4.592,2305,2.163,2306,2.163,2307,3.586,2308,2.163,2309,2.163,2310,2.163,2311,2.163,2312,2.163,2313,1.931,2314,2.163,2315,2.163,2316,2.163,2317,2.163,2318,3.586,2319,2.163,2320,2.163,2321,2.163,2322,2.163,2323,2.163]],["title/classes/QuestionGroupTarget1621992475274.html",[0,0.233,2324,3.939]],["body/classes/QuestionGroupTarget1621992475274.html",[0,0.212,2,0.625,3,0.051,4,0.051,5,0.046,8,2.101,9,2.776,10,0.416,11,1.021,12,3.237,13,1.955,14,2.443,15,2.395,16,2.395,17,3.455,18,0.623,20,1.105,21,0.006,22,1.313,23,0.445,24,0.692,25,1.005,26,1.577,27,2.395,29,0.12,30,0.846,38,0.051,39,0.003,43,2.742,46,2.786,67,0.004,68,0.003,73,0.77,95,3.056,113,3.011,122,2.831,129,0.758,130,1.388,131,1.632,136,3.581,153,3.542,164,4.107,171,3.37,294,4.737,295,4.443,296,4.436,423,2.67,429,6.923,550,4.929,747,3.37,846,3.056,847,2.908,1249,5.498,2324,6.375,2325,6.923,2326,3.894,2327,4.362,2328,4.362,2329,4.362]],["title/interfaces/QuestionGroupUser.html",[608,1.292,2330,3.939]],["body/interfaces/QuestionGroupUser.html",[3,0.084,4,0.084,5,0.075,10,0.339,21,0.006,23,0.35,38,0.084,39,0.004,40,2.74,41,2.117,67,0.005,68,0.004,73,1.06,110,2.614,608,1.92,609,2.882,611,5.178,893,4.36,2330,6.969,2331,6.358]],["title/classes/QuestionImage1620477869366.html",[0,0.233,2332,3.939]],["body/classes/QuestionImage1620477869366.html",[0,0.212,2,0.626,3,0.051,4,0.051,5,0.046,8,2.105,9,2.779,10,0.208,11,1.023,12,3.24,13,1.956,14,2.446,15,2.398,16,2.398,17,3.457,18,0.624,20,1.107,21,0.006,22,1.314,23,0.351,24,0.693,25,1.006,26,1.578,27,2.398,29,0.12,30,0.848,38,0.051,39,0.003,43,2.688,66,2.548,67,0.004,68,0.003,73,0.771,76,3.719,86,2.659,122,3.369,129,0.76,130,1.962,131,1.635,136,3.876,141,2.779,150,4.441,152,5.625,153,3.061,154,3.776,156,4.752,157,3.776,159,4.589,164,2.984,423,3.776,523,3.646,553,5.971,554,4.86,555,5.878,556,4.744,2203,6.93,2204,6.93,2332,6.381,2333,6.93,2334,3.903,2335,4.372,2336,4.372,2337,4.372]],["title/classes/QuestionPosition1620488935141.html",[0,0.233,2338,3.939]],["body/classes/QuestionPosition1620488935141.html",[0,0.251,2,0.741,3,0.061,4,0.061,5,0.054,8,2.364,9,3.036,10,0.247,11,1.148,12,3.411,13,2.06,14,2.748,15,2.694,16,2.694,17,3.585,18,0.682,20,1.243,21,0.006,22,1.396,23,0.384,24,0.779,25,1.13,26,1.695,27,2.694,29,0.143,30,1.004,38,0.061,39,0.003,43,2.439,67,0.004,68,0.003,73,0.866,76,2.804,86,2.986,113,2.922,122,2.748,129,0.9,130,2.484,131,1.936,136,3.518,152,5.104,153,3.437,164,3.352,529,3.625,550,4.403,570,5.104,2338,6.854,2339,7.443,2340,4.62,2341,5.176,2342,5.176,2343,5.176]],["title/classes/QuestionPositionIdx1620563708532.html",[0,0.233,2344,3.939]],["body/classes/QuestionPositionIdx1620563708532.html",[0,0.22,2,0.649,3,0.053,4,0.053,5,0.047,8,2.159,9,2.834,10,0.395,11,1.049,12,3.277,13,1.979,14,2.509,15,2.46,16,2.46,17,3.485,18,0.636,20,1.135,21,0.006,22,1.332,23,0.358,24,0.711,25,1.032,26,1.604,27,2.46,29,0.125,30,0.88,38,0.053,39,0.003,43,2.708,66,2.614,67,0.004,68,0.003,73,0.791,76,3.641,86,2.727,122,2.509,129,0.788,130,1.442,131,1.696,135,4.377,136,3.626,141,2.851,150,4.512,152,5.261,153,3.139,154,3.873,156,4.828,157,3.873,159,4.663,164,3.061,165,4.377,550,4.021,553,6.067,554,3.619,555,5.946,556,4.866,570,3.873,571,5.2,2344,6.483,2345,7.041,2346,4.046,2347,4.533,2348,4.533,2349,4.533,2350,6.327]],["title/classes/QuestionRepository.html",[0,0.233,2264,3.484]],["body/classes/QuestionRepository.html",[0,0.336,2,0.992,3,0.081,4,0.081,5,0.072,21,0.006,29,0.246,30,1.617,38,0.081,39,0.004,67,0.005,68,0.004,71,2.321,76,2.801,110,2.541,248,4.814,249,3.726,250,2.92,251,2.92,252,2.92,2156,5.69,2264,6.059,2351,6.179,2352,6.922]],["title/injectables/QuestionService.html",[297,1.005,305,3.046]],["body/injectables/QuestionService.html",[0,0.112,3,0.027,4,0.027,5,0.024,10,0.11,11,0.628,13,2.101,18,0.692,20,1.422,21,0.006,22,1.273,23,0.39,24,0.891,25,1.262,26,1.809,29,0.236,30,0.735,33,2.292,38,0.027,39,0.002,40,2.263,41,2.047,42,0.916,43,2.035,49,1.928,50,1.946,66,0.954,67,0.002,68,0.001,76,3.332,82,1.541,110,2.97,124,2.619,141,1.706,172,2.406,181,2.406,195,0.492,217,1.126,222,2.103,250,3.527,251,0.975,252,0.975,277,0.975,297,0.794,298,0.817,302,2.238,303,1.472,305,2.406,312,2.505,315,2.505,317,2.944,318,1.244,319,2.505,320,1.599,321,1.68,327,2.171,330,4.189,335,1.599,336,1.529,337,3.379,357,1.777,408,1.322,488,1.777,492,2.165,496,1.899,529,1.209,570,3.756,631,2.994,633,1.414,664,4.26,749,3.327,757,4.423,758,3.496,760,4.815,893,2.944,979,1.468,1006,1.414,1010,2.317,1017,3.112,1037,1.68,1040,4.571,1055,3.112,1057,2.619,1162,2.063,1208,1.899,1239,1.899,1652,4.964,2062,1.899,2064,1.599,2066,1.899,2127,4.293,2128,3.379,2129,3.699,2130,2.063,2132,2.063,2135,3.379,2136,4.043,2144,4.043,2148,4.043,2154,2.063,2155,1.777,2156,1.899,2158,2.063,2225,4.061,2227,1.899,2264,4.043,2265,2.063,2284,2.063,2293,1.777,2294,2.063,2353,2.063,2354,4.809,2355,3.786,2356,3.786,2357,4.809,2358,2.31,2359,2.31,2360,2.31,2361,2.31,2362,2.31,2363,2.31,2364,3.786,2365,2.31,2366,2.31,2367,3.786,2368,2.31,2369,2.31,2370,2.31,2371,2.31,2372,3.953,2373,2.31,2374,2.31,2375,2.31,2376,2.31,2377,3.786,2378,2.31,2379,2.31,2380,3.786,2381,2.31,2382,2.31,2383,2.31,2384,3.786,2385,2.31,2386,3.786,2387,2.31,2388,2.31,2389,2.063,2390,2.31,2391,2.31,2392,2.31,2393,2.31,2394,2.31]],["title/classes/ReorderQuestionDto.html",[0,0.233,2144,3.484]],["body/classes/ReorderQuestionDto.html",[0,0.387,2,0.92,3,0.075,4,0.075,5,0.067,10,0.306,18,0.695,21,0.006,23,0.391,29,0.177,38,0.075,39,0.004,41,2.116,67,0.005,68,0.004,73,0.996,82,1.862,92,2.869,110,3.177,449,2.963,664,5.298,665,4.799,744,5.79,762,4.942,2144,5.79,2389,7.725,2395,7.114,2396,6.425,2397,5.736,2398,6.425,2399,6.425]],["title/classes/ReorderQuestionGroupDto.html",[0,0.233,2221,3.484]],["body/classes/ReorderQuestionGroupDto.html",[0,0.383,2,0.906,3,0.074,4,0.074,5,0.066,10,0.301,18,0.688,21,0.006,23,0.387,29,0.174,38,0.074,39,0.004,41,2.104,67,0.005,68,0.004,73,0.986,76,3.477,82,1.844,92,2.841,110,3.154,180,4.056,449,2.915,663,4.596,665,4.988,667,5.644,741,4.863,744,5.732,2221,5.732,2313,7.669,2395,7.062,2397,5.644,2400,6.322]],["title/classes/SeedAuxiliary1624412129413.html",[0,0.233,1891,3.686]],["body/classes/SeedAuxiliary1624412129413.html",[0,0.134,2,0.397,3,0.032,4,0.032,5,0.029,8,1.494,9,2.112,10,0.132,11,0.726,12,2.728,13,1.647,14,1.737,15,1.703,16,1.703,17,3.05,18,0.382,20,0.786,21,0.006,22,1.08,23,0.267,24,0.492,25,0.714,26,1.255,27,1.703,29,0.17,30,0.537,31,2.129,33,2.877,34,2.589,36,3.621,38,0.032,39,0.002,40,2.583,41,0.647,43,2.766,45,5.668,46,2.2,55,4.273,56,2.129,57,3.107,58,2.275,59,6.159,60,2.119,61,2.428,62,5.447,63,1.759,67,0.003,68,0.002,92,0.997,100,2.155,125,2.129,147,2.129,225,2.898,232,3.223,295,4.353,425,2.129,490,2.275,525,2.013,527,2.129,533,3.949,534,3.643,536,4.229,537,4.546,538,2.119,540,3.851,542,2.129,544,4.178,548,3.183,575,3.368,608,0.746,847,2.067,1806,5.076,1878,6.428,1879,4.178,1880,2.129,1881,2.471,1882,2.471,1883,2.471,1884,2.275,1885,2.275,1886,2.471,1887,6.301,1888,2.275,1889,2.275,1890,2.275,1891,3.368,1892,2.471,1893,2.471,1894,2.471,1895,2.471,1896,2.471,1897,2.275,1898,2.471,1899,3.909,1900,5.512,1901,6.386,1902,2.471,1903,3.909,1904,6.688,2401,2.768,2402,2.768]],["title/interfaces/SendAgreementEmailDto.html",[608,1.292,2403,3.686]],["body/interfaces/SendAgreementEmailDto.html",[3,0.078,4,0.078,5,0.07,10,0.317,21,0.006,23,0.45,29,0.184,38,0.078,39,0.004,46,2.817,67,0.005,68,0.004,73,1.019,74,4.666,108,4.611,109,4.236,129,1.159,608,1.797,609,2.697,895,5.211,1015,6.695,1024,4.08,2403,6.265,2404,5.478,2405,5.949]],["title/injectables/SendEmailService.html",[297,1.005,1008,3.316]],["body/injectables/SendEmailService.html",[0,0.26,3,0.063,4,0.063,5,0.056,10,0.255,11,1.175,13,1.829,18,0.619,20,1.272,21,0.006,22,1.138,23,0.348,24,0.797,25,0.874,26,1.441,29,0.233,33,2.335,38,0.063,39,0.003,67,0.004,68,0.003,195,1.141,217,2.108,297,1.487,298,1.896,303,2.757,327,2.508,523,4.696,540,2.885,822,4.405,826,4.122,895,2.972,1004,6.329,1008,4.905,1028,6.53,1208,4.405,1909,5.979,1910,6.376,1972,4.405,1976,4.405,1983,4.784,2403,6.503,2406,4.784,2407,5.359,2408,5.359,2409,7.09,2410,5.359,2411,5.359,2412,5.359,2413,6.329,2414,7.09,2415,7.09,2416,5.359,2417,5.359,2418,4.784,2419,5.359,2420,5.359,2421,5.359]],["title/classes/SendMailDto.html",[0,0.233,1974,3.484]],["body/classes/SendMailDto.html",[0,0.316,2,0.933,3,0.076,4,0.076,5,0.068,10,0.31,18,0.793,21,0.006,23,0.447,38,0.076,39,0.004,67,0.005,68,0.004,73,1.004,129,1.692,523,5.146,540,4.686,1974,5.837,2404,7.673,2413,7.771,2422,5.812,2423,6.51,2424,6.51,2425,6.51,2426,6.51]],["title/interfaces/SoftDeleteResult.html",[319,3.172,608,1.292]],["body/interfaces/SoftDeleteResult.html",[3,0.082,4,0.082,5,0.073,10,0.334,21,0.006,23,0.442,38,0.082,39,0.004,41,1.642,66,2.9,67,0.005,68,0.004,73,1.051,319,5.563,320,4.858,608,1.893,609,2.841,1015,6.909,2427,5.771,2428,9.325,2429,7.021]],["title/classes/Student.html",[0,0.233,847,2.263]],["body/classes/Student.html",[0,0.207,2,0.611,3,0.05,4,0.05,5,0.045,10,0.203,18,0.815,21,0.006,23,0.463,24,0.682,26,1.434,29,0.194,30,0.828,34,3.585,36,3.264,38,0.05,39,0.003,40,1.774,41,0.998,42,2.405,46,2.772,63,3.854,67,0.004,68,0.003,71,1.689,72,1.968,73,0.758,74,2.174,79,2.796,80,2.863,81,2.863,82,2.163,85,4.025,91,2.523,92,3.037,95,3.811,97,2.065,98,4.215,99,2.118,100,2.797,101,2.015,102,3.178,103,2.065,104,2.015,105,2.065,106,2.015,107,2.065,129,1.226,130,1.358,222,1.132,232,2.732,243,4.984,254,3.103,410,4.169,411,3.797,627,3.508,634,4.196,681,2.441,809,3.854,847,2.863,858,4.196,889,4.664,1024,3.712,2070,5.425,2084,4.984,2085,3.81,2086,5.413,2088,3.81,2089,3.81,2090,3.81,2091,3.81,2092,3.81,2093,3.81,2094,3.81,2430,3.81,2431,7.053,2432,4.268,2433,4.268,2434,4.268]],["title/classes/StudentRepository.html",[0,0.233,601,3.484]],["body/classes/StudentRepository.html",[0,0.337,2,0.995,3,0.081,4,0.081,5,0.073,21,0.006,29,0.247,30,1.621,38,0.081,39,0.004,67,0.005,68,0.004,71,2.326,248,4.821,249,3.74,250,2.93,251,2.93,252,2.93,601,6.072,847,3.28,1797,5.71,2435,6.201,2436,6.947]],["title/injectables/StudentService.html",[297,1.005,593,3.316]],["body/injectables/StudentService.html",[0,0.251,3,0.061,4,0.061,5,0.054,10,0.247,11,1.148,18,0.682,20,1.401,21,0.006,22,1.254,23,0.384,24,0.878,25,1.13,26,1.695,29,0.252,30,1.004,33,1.705,38,0.061,39,0.003,67,0.004,68,0.003,82,1.21,195,1.103,217,1.539,222,1.838,250,3.518,251,2.184,252,2.184,277,2.184,297,1.453,298,1.831,302,4.095,303,2.694,318,2.786,327,1.831,347,3.981,593,4.793,601,6.062,602,4.62,800,5.299,847,3.271,1006,3.169,1010,4.241,1037,3.763,1172,3.763,1797,4.255,2100,6.184,2102,6.184,2104,6.184,2105,6.189,2107,4.62,2108,4.62,2110,4.62,2437,4.62,2438,5.176,2439,5.176,2440,5.176,2441,5.176,2442,5.176]],["title/classes/Subject.html",[0,0.233,540,2.58]],["body/classes/Subject.html",[0,0.223,2,0.657,3,0.054,4,0.054,5,0.048,10,0.218,18,0.8,21,0.006,23,0.465,29,0.218,30,0.89,38,0.054,39,0.003,40,1.865,41,1.715,42,1.819,67,0.004,68,0.003,71,1.776,72,3.655,73,0.798,79,2.941,80,3.011,81,3.011,82,2.143,83,2.807,85,3.639,86,2.749,92,2.298,97,2.219,98,3.655,99,2.275,100,2.909,101,2.165,102,3.304,103,2.219,104,2.165,105,2.219,106,2.165,107,2.219,113,3.344,114,2.543,115,4.053,117,3.035,129,1.378,232,3.754,254,3.334,410,4.686,411,3.433,536,5.231,537,4.661,538,3.548,540,3.433,681,2.623,684,4.053,2070,5.641,2443,4.093,2444,7.333,2445,4.586,2446,4.586,2447,4.586,2448,4.586,2449,4.586,2450,4.586,2451,4.586,2452,4.586]],["title/interfaces/SwaggerOptions.html",[608,1.292,2453,3.686]],["body/interfaces/SwaggerOptions.html",[3,0.077,4,0.077,5,0.069,10,0.312,21,0.006,23,0.448,38,0.077,39,0.004,67,0.005,68,0.004,73,1.008,129,1.707,524,6.623,538,4.407,608,1.767,609,2.652,2453,6.201,2454,5.85,2455,8.132,2456,8.132,2457,8.731]],["title/injectables/TemplateService.html",[297,1.005,1910,3.316]],["body/injectables/TemplateService.html",[0,0.247,3,0.06,4,0.06,5,0.072,10,0.243,11,1.136,18,0.676,20,1.23,21,0.006,22,1.101,23,0.381,24,0.573,25,0.831,29,0.228,33,2.551,38,0.06,39,0.003,49,2.595,50,2.774,67,0.004,68,0.003,73,0.857,129,1.503,195,1.085,217,2.304,222,1.352,297,1.438,298,1.803,303,3.012,327,2.74,335,4.743,336,3.373,946,4.189,1152,3.919,1294,3.012,1910,4.743,2458,4.549,2459,7.747,2460,6.855,2461,6.855,2462,8.286,2463,7.396,2464,5.096,2465,5.096,2466,5.096,2467,5.096,2468,5.096,2469,5.096,2470,6.119,2471,5.096,2472,5.096,2473,5.096,2474,5.096,2475,5.096,2476,5.096,2477,5.096,2478,5.096,2479,5.096,2480,5.096,2481,5.096,2482,5.096,2483,5.096,2484,5.096,2485,6.855,2486,5.096,2487,5.096,2488,5.096,2489,5.096]],["title/classes/TimestampEntity.html",[0,0.233,102,2.159]],["body/classes/TimestampEntity.html",[0,0.303,2,0.894,3,0.073,4,0.073,5,0.065,10,0.297,18,0.746,21,0.006,23,0.42,29,0.172,30,1.211,38,0.073,39,0.004,67,0.005,68,0.004,71,2.178,73,0.978,79,3.938,80,4.033,81,4.033,82,1.998,100,3.732,101,4.033,102,3.524,104,4.033,106,4.033,2490,5.572,2491,8.542,2492,6.242,2493,6.242,2494,6.242]],["title/classes/UpdateAnswerDto.html",[0,0.233,185,3.484]],["body/classes/UpdateAnswerDto.html",[0,0.347,2,1.024,3,0.084,4,0.084,5,0.075,21,0.006,29,0.234,38,0.084,39,0.004,67,0.005,68,0.004,71,1.991,171,3.375,177,4.946,185,6.177,210,5.876,689,5.876,2495,6.381,2496,5.498,2497,5.876,2498,5.876,2499,7.148]],["title/classes/UpdateExamAgreementDto.html",[0,0.233,975,3.316]],["body/classes/UpdateExamAgreementDto.html",[0,0.422,2,0.826,3,0.068,4,0.068,5,0.06,10,0.275,18,0.649,21,0.006,23,0.442,24,0.978,29,0.227,38,0.087,39,0.003,41,1.739,46,1.773,67,0.004,68,0.003,73,0.93,82,1.739,129,1.293,175,4.124,180,2.723,203,3.409,447,4.922,448,4.727,449,2.659,522,3.265,547,5.232,665,4.124,699,4.866,717,4.193,718,3.983,719,5.148,722,3.665,723,5.146,768,5.148,840,5.696,973,3.99,975,5.146,981,3.665,2500,6.332,2501,5.767,2502,5.767]],["title/classes/UpdateExamAgreementQueryDto.html",[0,0.233,973,3.316]],["body/classes/UpdateExamAgreementQueryDto.html",[0,0.426,2,0.843,3,0.069,4,0.069,5,0.062,10,0.28,18,0.658,21,0.006,23,0.445,29,0.229,38,0.088,39,0.004,41,1.944,46,2.556,67,0.005,68,0.004,73,0.943,82,1.377,129,1.024,175,4.61,180,3.925,203,3.48,447,4.988,448,4.79,449,2.715,522,3.297,547,3.742,665,4.179,699,4.914,717,4.28,718,3.647,722,3.742,723,5.215,840,4.074,973,5.215,975,4.074,981,3.742,2500,6.394,2503,5.888,2504,5.888,2505,5.888]],["title/classes/UpdateExamDto.html",[0,0.233,1094,3.484]],["body/classes/UpdateExamDto.html",[0,0.347,2,1.024,3,0.084,4,0.084,5,0.075,21,0.006,29,0.234,38,0.084,39,0.004,67,0.005,68,0.004,71,1.991,171,3.375,727,4.946,728,5.876,1094,6.177,1097,5.876,2496,5.498,2497,5.876,2498,5.876,2500,5.498,2506,7.148]],["title/classes/UpdateQuestionDto.html",[0,0.233,2148,3.484]],["body/classes/UpdateQuestionDto.html",[0,0.347,2,1.024,3,0.084,4,0.084,5,0.075,21,0.006,29,0.234,38,0.084,39,0.004,67,0.005,68,0.004,71,1.991,110,2.624,171,3.375,199,3.296,757,4.543,758,5.197,762,5.498,2148,6.177,2496,5.498,2507,5.876,2508,7.148]],["title/classes/UpdateQuestionGroupDto.html",[0,0.233,2223,3.484]],["body/classes/UpdateQuestionGroupDto.html",[0,0.343,2,1.013,3,0.083,4,0.083,5,0.074,21,0.006,29,0.233,38,0.083,39,0.004,67,0.005,68,0.004,71,1.969,76,3.416,110,2.596,171,3.339,663,5.141,791,4.893,2223,6.137,2228,5.812,2496,5.439,2497,5.812,2498,5.812,2507,5.812,2509,7.071]],["title/controllers/UploadController.html",[166,2.022,1912,3.686]],["body/controllers/UploadController.html",[0,0.278,3,0.067,4,0.067,5,0.086,10,0.273,11,1.228,13,1.89,18,0.501,20,1.029,21,0.006,22,0.921,23,0.282,24,0.644,25,0.935,29,0.253,38,0.067,39,0.003,67,0.004,68,0.003,82,1.341,166,2.419,168,2.583,170,3.389,188,4.38,194,3.51,195,1.221,196,5.127,198,3.389,199,2.644,200,3,201,3.967,215,3.51,216,3,217,1.705,222,1.521,1378,4.41,1459,4.709,1714,6.315,1831,4.168,1912,5.699,1917,4.713,1923,5.118,2510,5.118,2511,5.733,2512,8.21,2513,5.733,2514,5.733,2515,5.733,2516,5.733,2517,5.733,2518,5.118,2519,6.09,2520,5.733,2521,5.733,2522,5.733,2523,5.733,2524,5.733]],["title/classes/UploaderService.html",[0,0.233,1459,3.046]],["body/classes/UploaderService.html",[0,0.318,2,0.939,3,0.077,4,0.077,5,0.069,10,0.312,11,1.336,18,0.572,20,1.176,21,0.006,22,1.052,23,0.322,24,0.737,25,1.069,26,1.639,29,0.181,38,0.077,39,0.004,67,0.005,68,0.004,129,1.518,1294,5.161,1459,5.123,1505,6.623,1544,5.387,1714,6.201,1743,5.85,1744,7.196,1749,5.85,1750,5.85,1971,8.132,2525,5.85,2526,6.554]],["title/classes/User.html",[0,0.233,46,1.474]],["body/classes/User.html",[0,0.181,2,0.533,3,0.044,4,0.044,5,0.039,10,0.177,18,0.802,21,0.006,22,0.597,23,0.477,24,0.617,29,0.212,30,0.722,34,3.856,36,3.512,38,0.044,39,0.002,40,1.606,41,0.87,42,2.177,46,1.688,63,4.146,67,0.003,68,0.002,71,1.529,72,3.834,73,0.687,74,3.668,79,3.321,80,3.401,81,3.401,82,2.149,85,3.812,91,3.245,92,3.075,95,4.397,97,1.8,98,3.834,99,1.846,100,3.188,101,2.592,102,2.939,103,1.8,104,2.592,105,1.8,106,2.592,107,1.8,108,2.574,109,2.364,113,3.508,114,2.063,116,4.9,117,2.462,119,1.715,129,1.398,130,1.746,410,4.752,411,4.328,634,5.315,636,3.057,681,2.128,684,3.489,809,5.109,816,4.222,877,2.462,878,2.462,879,2.462,895,2.063,1024,3.994,2084,5.362,2527,3.32,2528,3.72,2529,3.72,2530,3.72,2531,3.72,2532,3.72,2533,3.72,2534,3.72,2535,3.72,2536,3.72]],["title/controllers/UserController.html",[166,2.022,2537,3.686]],["body/controllers/UserController.html",[0,0.253,3,0.061,4,0.061,5,0.055,10,0.249,11,1.155,18,0.608,20,1.25,21,0.006,22,1.118,23,0.342,24,0.783,25,1.136,29,0.252,38,0.061,39,0.003,46,2.86,67,0.004,68,0.003,82,1.629,166,2.201,168,2.351,170,3.084,188,4.634,189,3.084,192,3.61,194,3.194,195,1.111,198,3.084,199,2.405,200,2.73,204,4.799,206,3.61,215,4.263,216,2.73,217,1.551,222,2.08,478,4.982,492,2.984,800,5.698,1172,3.793,1638,5.063,1640,4.657,2153,4.288,2537,5.357,2538,4.657,2539,4.288,2540,5.217,2541,5.217,2542,5.217,2543,5.217,2544,5.217,2545,4.288,2546,4.657,2547,5.217,2548,5.217,2549,5.217,2550,5.217,2551,5.217,2552,5.217]],["title/classes/UserDto.html",[0,0.233,2105,3.316]],["body/classes/UserDto.html",[0,0.404,2,0.988,3,0.081,4,0.081,5,0.072,10,0.329,18,0.602,21,0.006,23,0.339,29,0.19,36,4.807,38,0.081,39,0.004,67,0.005,68,0.004,73,1.04,82,1.613,129,1.446,445,4.565,447,5.504,448,5.286,449,3.18,2105,5.754,2553,6.158,2554,6.898]],["title/classes/UserEmail1625013724392.html",[0,0.233,2555,3.939]],["body/classes/UserEmail1625013724392.html",[0,0.249,2,0.736,3,0.06,4,0.06,5,0.054,8,2.351,9,3.024,10,0.37,11,1.142,12,3.403,13,2.055,14,2.733,15,2.68,16,2.68,17,3.58,18,0.679,20,1.237,21,0.006,22,1.392,23,0.382,24,0.775,25,1.124,26,1.69,27,2.68,29,0.141,30,0.996,38,0.06,39,0.003,43,2.431,46,2.556,67,0.004,68,0.003,73,0.862,113,2.167,122,2.037,129,0.893,130,1.634,131,1.921,136,3.506,153,3.419,164,3.334,294,5.3,295,3.334,296,3.942,411,2.765,423,3.144,1024,4.761,2555,6.832,2556,7.42,2557,4.584,2558,5.136,2559,5.136,2560,5.136,2561,6.891]],["title/modules/UserModule.html",[256,1.695,385,3.316]],["body/modules/UserModule.html",[0,0.274,3,0.066,4,0.066,5,0.059,21,0.006,29,0.257,38,0.066,39,0.003,67,0.004,68,0.003,168,3.307,195,1.204,256,2.884,258,2.734,259,2.668,260,2.878,261,2.878,262,2.734,263,4.152,264,4.045,270,3.739,271,2.878,272,2.878,274,3.134,276,3.592,277,2.384,379,5.079,380,4.665,385,6.458,394,5.045,478,6.213,488,6.271,1134,4.645,2537,6.271,2546,5.045,2562,5.045,2563,5.045,2564,5.045,2565,5.651,2566,5.651,2567,4.108,2568,5.045,2569,5.651]],["title/classes/UserRepository.html",[0,0.233,2567,3.484]],["body/classes/UserRepository.html",[0,0.337,2,0.995,3,0.081,4,0.081,5,0.073,21,0.006,29,0.247,30,1.621,38,0.081,39,0.004,46,2.136,67,0.005,68,0.004,71,2.326,248,4.821,249,3.74,250,2.93,251,2.93,252,2.93,2545,5.71,2567,6.072,2570,6.201,2571,6.947]],["title/interfaces/UserResult.html",[608,1.292,2572,3.686]],["body/interfaces/UserResult.html",[3,0.079,4,0.079,5,0.07,10,0.321,21,0.006,23,0.471,29,0.185,38,0.079,39,0.004,40,2.689,41,2.066,67,0.005,68,0.004,73,1.025,119,3.104,217,2.437,608,1.815,609,2.725,809,5.843,816,5.179,2427,5.534,2572,6.304,2573,6.01,2574,5.534]],["title/injectables/UserService.html",[297,1.005,478,3.046]],["body/injectables/UserService.html",[0,0.147,3,0.035,4,0.035,5,0.032,10,0.144,11,0.778,13,2.071,18,0.676,20,1.39,21,0.006,22,1.244,23,0.393,24,0.87,25,1.211,26,1.766,29,0.239,30,0.587,33,2.134,38,0.035,39,0.002,40,0.884,42,1.861,43,2.341,45,2.092,46,2.766,49,3.3,50,2.622,57,1.729,60,1.463,61,1.676,67,0.003,68,0.002,82,0.707,119,1.394,130,1.493,195,0.644,217,1.927,222,2.055,250,2.734,251,1.275,252,1.275,277,1.275,297,0.984,298,1.069,303,1.824,318,1.628,321,2.198,327,2.74,436,4.922,478,2.982,489,3.857,492,1.729,592,5.359,593,5.359,640,4.188,642,5.784,645,4.188,800,5.224,809,1.921,816,2.325,1048,2.699,1172,2.198,1638,3.411,2105,6.45,2539,3.857,2545,2.485,2567,5.397,2568,2.699,2572,3.609,2574,2.485,2575,2.699,2576,4.692,2577,4.692,2578,4.692,2579,4.692,2580,4.692,2581,3.023,2582,3.023,2583,3.023,2584,4.692,2585,3.023,2586,4.692,2587,3.023,2588,4.692,2589,3.023,2590,4.692,2591,3.023,2592,4.692,2593,3.023,2594,4.692,2595,3.023,2596,3.023,2597,3.023,2598,3.023,2599,3.023,2600,3.023,2601,3.023,2602,3.023,2603,3.023,2604,3.023,2605,3.023,2606,3.023,2607,3.023,2608,3.023,2609,3.023,2610,3.023,2611,3.023,2612,4.692,2613,3.023,2614,4.692,2615,3.023,2616,5.75,2617,3.023,2618,4.692,2619,4.692,2620,3.023,2621,3.023,2622,3.023,2623,3.023]],["title/coverage.html",[2624,5.87]],["body/coverage.html",[0,0.468,1,1.002,5,0.013,6,2.439,7,2.439,13,0.503,21,0.006,23,0.06,34,0.721,36,0.656,39,0.001,46,0.375,50,0.493,60,1.057,66,0.504,67,0.001,68,0.001,69,0.638,70,1.088,72,0.562,74,0.621,76,1.683,102,0.549,108,1.511,110,2.949,126,1.002,127,1.088,128,1.088,136,0.514,144,0.807,166,2.614,167,0.938,169,1.088,175,0.676,177,0.844,185,0.886,200,0.638,202,1.68,204,0.746,205,0.807,207,0.844,230,1.002,231,1.088,232,0.549,245,0.886,246,1.088,247,1.088,256,0.773,262,0.59,278,0.886,282,0.886,286,1.088,288,1.002,289,1.088,290,1.088,297,1.764,299,1.088,305,0.775,306,0.807,309,0.938,319,0.807,320,0.844,322,1.68,363,0.938,364,1.088,390,1.002,391,1.002,409,1.088,417,1.002,418,1.088,419,1.088,431,0.938,432,1.088,434,0.844,436,0.775,443,0.844,444,1.088,455,0.886,459,0.938,461,0.886,469,1.088,472,1.088,478,0.775,481,0.886,516,1.002,517,1.088,518,1.795,522,1.65,529,5.276,534,0.621,536,0.721,540,0.656,551,0.721,566,1.002,567,1.088,590,0.844,591,0.844,592,0.844,593,0.844,595,0.886,597,0.886,599,0.886,601,0.886,608,2.099,610,1.088,611,2.628,612,0.886,613,1.002,614,1.002,631,0.656,632,0.886,661,0.886,662,1.088,663,2.628,671,0.807,672,0.886,678,1.088,688,1.088,689,1.795,708,1.088,709,1.088,711,0.938,715,0.886,716,1.795,717,2.628,724,0.938,727,0.844,728,1.795,732,0.721,747,1.964,749,0.844,750,2.628,751,1.795,757,0.775,760,0.844,762,2.282,791,0.844,800,0.775,801,1.088,802,1.795,805,1.002,819,0.886,820,1.795,821,1.088,834,0.938,835,1.002,836,1.088,846,0.605,847,1.031,848,0.807,849,1.088,850,0.775,853,1.088,873,0.807,893,1.337,895,1.211,904,1.002,905,1.088,906,1.088,910,1.088,947,1.002,948,1.088,949,1.088,956,1.002,957,1.088,958,1.088,962,0.938,963,1.795,964,1.088,968,0.886,973,0.844,975,0.844,987,1.795,990,1.002,991,1.088,992,1.088,996,0.886,997,1.795,998,1.088,1000,1.088,1007,0.775,1008,0.844,1028,1.002,1062,1.002,1063,1.088,1064,1.088,1070,1.002,1071,1.088,1072,1.088,1079,0.938,1080,1.088,1091,0.886,1094,0.886,1116,0.807,1117,0.807,1118,0.844,1120,0.938,1122,0.886,1124,0.886,1136,1.68,1137,1.088,1143,1.088,1148,0.938,1197,1.088,1215,1.002,1240,1.088,1243,1.002,1244,1.795,1245,1.795,1259,1.002,1260,1.795,1261,1.795,1265,1.002,1268,1.088,1283,1.002,1284,1.088,1285,0.807,1286,1.002,1304,1.795,1305,1.795,1308,0.938,1316,1.088,1318,1.088,1344,1.088,1345,1.088,1361,1.002,1362,1.088,1363,1.088,1368,0.938,1369,1.088,1374,0.844,1385,0.844,1389,1.088,1400,1.002,1455,1.088,1459,0.775,1502,1.088,1505,0.886,1506,1.088,1507,1.088,1508,1.088,1509,0.938,1510,1.088,1511,1.088,1517,0.746,1518,1.68,1519,1.088,1520,1.088,1532,0.938,1535,0.775,1571,0.938,1602,0.938,1610,0.844,1622,2.282,1623,1.795,1625,4.894,1630,0.938,1631,1.002,1632,1.088,1634,0.886,1635,2.628,1636,1.088,1638,0.886,1671,0.886,1672,1.002,1673,1.088,1685,0.938,1686,1.088,1709,0.886,1713,1.088,1717,0.938,1733,1.088,1734,1.088,1735,0.938,1736,1.088,1737,1.088,1759,1.002,1760,1.088,1761,1.088,1766,1.088,1783,1.002,1784,1.088,1785,1.088,1790,1.088,1809,1.088,1817,2.282,1818,2.282,1834,0.886,1838,0.886,1878,0.938,1879,2.78,1880,2.78,1887,0.938,1891,0.938,1909,0.807,1910,0.844,1912,0.938,1916,0.938,1919,0.938,1928,1.088,1932,0.938,1933,1.088,1934,1.088,1935,1.088,1965,1.088,1967,1.002,1970,1.088,1974,0.886,1978,1.088,1992,1.088,2004,1.088,2013,1.002,2014,1.088,2015,1.088,2020,1.088,2022,1.088,2050,0.844,2051,1.088,2052,1.088,2054,0.844,2061,0.938,2065,0.938,2082,1.088,2097,1.088,2099,1.088,2105,0.844,2112,1.088,2125,0.938,2126,1.088,2136,0.886,2144,0.886,2148,0.886,2171,1.795,2172,1.088,2175,1.088,2197,1.002,2198,1.088,2199,1.088,2205,0.938,2206,1.088,2207,1.088,2221,0.886,2223,0.886,2225,0.807,2240,1.088,2250,1.002,2251,1.088,2252,1.088,2264,0.886,2269,1.088,2270,1.088,2272,1.088,2273,1.088,2290,1.002,2293,0.938,2324,1.002,2325,1.088,2326,1.088,2330,1.002,2331,1.088,2332,1.002,2333,1.088,2334,1.088,2338,1.002,2339,1.088,2340,1.088,2344,1.002,2345,1.088,2346,1.088,2351,1.088,2353,1.088,2372,1.002,2395,1.795,2403,0.938,2404,1.795,2405,1.088,2406,1.088,2422,1.088,2427,1.795,2430,1.088,2435,1.088,2437,1.088,2443,1.088,2453,0.938,2454,1.088,2458,1.088,2490,1.088,2495,1.088,2500,2.282,2507,1.795,2510,1.088,2519,1.002,2525,1.088,2527,1.088,2537,0.938,2538,1.088,2553,1.088,2555,1.002,2556,1.088,2557,1.088,2567,0.886,2570,1.088,2572,0.938,2573,1.088,2574,1.002,2575,1.088,2624,1.088,2625,1.219,2626,1.219,2627,1.219,2628,8.835,2629,4.159,2630,5.681,2631,9.361,2632,1.219,2633,2.184,2634,8.299,2635,1.95,2636,8.689,2637,2.184,2638,7.483,2639,4.624,2640,3.614,2641,3.614,2642,2.967,2643,3.199,2644,1.002,2645,1.088,2646,1.088,2647,1.088,2648,1.088,2649,1.95,2650,1.088,2651,1.088,2652,1.088,2653,1.088,2654,1.95,2655,1.088,2656,1.088,2657,1.088,2658,1.95,2659,1.95,2660,1.088,2661,1.088,2662,1.088,2663,1.088,2664,1.95,2665,1.088,2666,1.088,2667,1.088,2668,1.088,2669,1.088,2670,1.088,2671,1.088,2672,1.219,2673,1.219,2674,1.088,2675,1.219,2676,1.219,2677,2.184,2678,1.088,2679,1.088,2680,1.088,2681,2.967,2682,1.088,2683,1.088,2684,1.95,2685,4.417,2686,1.088,2687,1.088,2688,1.088,2689,1.088,2690,1.088,2691,1.088,2692,1.219,2693,1.088,2694,1.95,2695,1.088,2696,1.088,2697,1.088,2698,1.219]],["title/dependencies.html",[259,2.726,2699,3.986]],["body/dependencies.html",[0,0.378,21,0.006,30,1.509,32,4.584,39,0.003,60,2.485,64,2.938,67,0.004,68,0.003,100,2.037,195,1.094,199,2.368,250,2.167,251,2.167,252,2.167,259,2.425,277,2.167,389,3.036,449,3.177,458,3.95,623,4.584,722,3.264,812,4.584,938,4.221,1468,4.584,1469,4.584,1570,2.938,1729,4.584,1831,6.043,1833,3.95,1884,4.221,1885,4.221,1914,4.221,1930,4.221,1946,6.152,1947,4.221,2001,4.584,2470,4.584,2518,4.584,2700,5.136,2701,7.777,2702,5.136,2703,5.136,2704,5.136,2705,6.891,2706,5.136,2707,6.891,2708,5.136,2709,5.136,2710,5.136,2711,5.136,2712,5.136,2713,5.136,2714,5.136,2715,5.136,2716,5.136,2717,5.136,2718,5.136,2719,5.136,2720,5.136,2721,5.136,2722,5.136,2723,5.136,2724,5.136,2725,5.136,2726,5.136,2727,5.136,2728,5.136,2729,5.136,2730,5.136,2731,5.136,2732,5.136,2733,5.136,2734,5.136,2735,5.136,2736,5.136,2737,5.136,2738,5.136,2739,5.136,2740,4.584,2741,5.136,2742,5.136,2743,5.136,2744,5.136,2745,5.136,2746,5.136,2747,5.136]],["title/miscellaneous/enumerations.html",[2748,2.533,2749,5.154]],["body/miscellaneous/enumerations.html",[10,0.234,21,0.006,39,0.003,46,2.054,64,3.822,66,2.76,67,0.004,68,0.003,69,3.496,94,4.857,131,3.74,141,3.01,144,3.247,171,3.154,232,3.01,425,5.139,426,5.964,531,5.491,532,5.964,536,3.949,578,5.491,579,5.964,628,5.964,634,4.622,635,5.964,739,3.822,747,3.154,809,4.246,825,5.491,831,4.032,846,4.047,847,3.851,871,5.491,895,3.705,918,4.857,1465,5.964,2748,3.118,2749,4.379,2750,4.905,2751,9.17,2752,4.379,2753,6.681,2754,6.782,2755,8.157,2756,4.905,2757,5.491,2758,6.681,2759,4.905,2760,4.905,2761,4.905,2762,6.681,2763,6.681,2764,7.597,2765,4.905,2766,6.681,2767,4.905]],["title/miscellaneous/functions.html",[2748,2.533,2768,5.154]],["body/miscellaneous/functions.html",[10,0.249,20,1.67,21,0.006,22,1.494,24,1.046,25,1.518,26,1.418,39,0.003,42,2.075,46,1.609,67,0.004,68,0.003,262,3.798,392,7.045,800,3.324,805,6.452,882,5.794,1521,7.475,1638,5.072,2293,5.366,2463,4.67,2539,4.3,2643,4.024,2644,6.452,2669,4.67,2670,6.228,2671,4.67,2685,4.3,2686,6.228,2687,6.228,2688,6.228,2689,6.228,2690,6.228,2696,4.67,2697,6.228,2748,3.324,2768,4.67,2769,8.01,2770,5.231,2771,5.231,2772,5.231,2773,4.3,2774,5.231,2775,5.231,2776,5.231,2777,5.231,2778,5.231,2779,5.231,2780,5.231,2781,5.231,2782,6.228]],["title/index.html",[10,0.19,578,3.276,2783,3.986]],["body/index.html",[15,2.498,21,0.006,39,0.004,52,6.546,67,0.005,68,0.004,259,3.034,639,5.736,826,4.942,1378,4.942,1988,6.546,2191,5.736,2418,5.736,2784,7.109,2785,8.076,2786,7.964,2787,6.425,2788,6.425,2789,6.425,2790,6.425,2791,5.736,2792,6.425,2793,6.425,2794,6.425,2795,5.736,2796,6.425,2797,6.425,2798,6.425,2799,6.425,2800,6.425,2801,8.654,2802,7.964,2803,6.425,2804,6.425,2805,6.425,2806,5.281,2807,6.425,2808,7.964,2809,6.425,2810,6.425,2811,6.425,2812,6.425,2813,6.425,2814,6.425]],["title/modules.html",[258,3.181]],["body/modules.html",[21,0.005,39,0.004,67,0.005,68,0.004,257,4.453,258,2.964,268,4.054,269,4.238,376,4.712,379,4.238,380,3.893,381,4.453,382,4.453,383,4.054,384,4.453,385,4.238,454,4.453,1598,4.453,1698,4.453,2815,9.966,2816,9.966,2817,9.966,2818,9.966]],["title/overview.html",[2819,5.87]],["body/overview.html",[2,0.391,21,0.006,39,0.002,67,0.003,68,0.002,168,1.228,200,3.898,207,3.721,256,0.964,257,5.786,258,1.319,259,1.287,260,1.388,261,1.388,262,1.319,263,1.388,264,1.353,265,2.434,266,2.434,267,2.434,268,6.104,269,6.091,270,2.203,271,1.388,272,1.388,298,0.964,305,4.733,306,4.929,376,7.133,377,2.434,378,2.434,379,6.152,380,5.702,381,5.415,382,5.928,383,5.826,384,5.166,385,5.153,436,4.733,450,2.434,451,2.434,452,2.434,453,2.434,454,5.928,455,3.91,478,4.733,587,2.434,588,2.434,589,2.434,590,5.153,591,5.153,592,5.153,593,5.153,609,1.103,612,5.415,655,2.434,656,2.434,657,2.434,668,2.434,669,2.434,670,2.434,671,4.052,672,5.415,848,4.929,1007,4.733,1008,5.153,1112,2.434,1114,2.434,1115,2.434,1116,3.559,1117,3.559,1118,3.721,1374,5.153,1381,2.434,1382,2.434,1384,2.434,1385,3.721,1459,3.891,1517,4.559,1598,4.854,1599,2.434,1600,2.434,1601,2.434,1634,5.415,1671,5.415,1698,5.786,1699,2.434,1700,2.434,1701,2.434,1905,2.434,1906,2.434,1908,2.434,1909,4.052,1910,5.153,1960,2.434,1961,2.434,1962,2.434,2050,3.721,2225,3.559,2256,2.434,2257,2.434,2258,2.434,2562,2.434,2563,2.434,2564,2.434,2819,2.434,2820,2.726,2821,2.726,2822,2.726,2823,2.726,2824,2.726]],["title/miscellaneous/typealiases.html",[2748,2.533,2825,5.773]],["body/miscellaneous/typealiases.html",[10,0.311,21,0.006,23,0.321,39,0.004,42,2.591,67,0.005,68,0.004,613,5.369,614,7.166,618,5.831,622,5.831,637,7.182,638,7.182,747,3.798,846,3.241,847,3.084,1136,5.024,1285,4.323,1286,6.613,1294,4.756,1513,6.188,1515,5.831,1524,6.613,1625,5.369,1692,7.182,2643,5.024,2748,4.151,2752,7.182,2754,5.831,2757,5.369,2773,5.369,2782,7.182,2826,6.532,2827,5.831,2828,8.045,2829,8.045,2830,6.532,2831,6.532]],["title/miscellaneous/variables.html",[2748,2.533,2806,4.746]],["body/miscellaneous/variables.html",[6,1.873,7,3.915,10,0.109,21,0.006,23,0.452,33,0.75,34,2.815,35,2.034,36,2.564,37,2.034,39,0.001,41,1.114,46,1.151,49,1.906,50,2.465,52,3.076,53,2.034,57,1.303,60,1.102,67,0.002,68,0.001,76,0.922,92,1.716,110,1.374,124,1.576,129,1.486,130,3.036,131,3.57,204,2.291,205,1.508,222,1.264,232,1.027,282,1.656,330,2.378,335,1.576,336,1.508,346,3.915,390,3.076,391,3.915,459,3.663,522,0.904,524,1.656,536,1.347,538,1.102,631,1.227,700,1.873,711,2.879,732,2.212,833,1.873,846,2.363,847,2.603,850,2.378,863,1.576,1215,3.076,1244,1.873,1245,3.076,1260,1.873,1261,3.076,1265,3.076,1330,1.873,1378,1.752,1400,3.076,1518,1.752,1523,3.341,1535,1.448,1570,1.303,1571,3.663,1578,1.752,1602,1.752,1627,1.873,1825,2.879,1829,1.752,1839,1.752,1841,1.752,1853,1.752,1879,1.752,1880,3.663,1887,2.879,1888,1.873,1889,1.873,1890,1.873,1897,1.873,1916,2.879,1942,2.034,1947,1.873,1967,3.076,1980,2.034,1988,3.076,1995,2.034,2065,2.879,2290,3.076,2372,3.076,2453,1.752,2455,2.034,2456,2.034,2519,3.076,2635,2.034,2643,1.752,2644,1.873,2645,3.341,2646,4.251,2647,4.251,2648,4.251,2649,2.034,2650,4.251,2651,2.034,2652,4.251,2653,2.034,2654,2.034,2655,4.251,2656,2.034,2657,4.251,2658,2.034,2659,4.251,2660,4.251,2661,3.341,2662,2.034,2663,4.251,2664,2.034,2665,4.251,2666,4.251,2667,2.034,2668,3.341,2674,2.034,2678,2.034,2679,3.341,2680,3.341,2682,2.034,2683,4.922,2684,2.034,2685,1.873,2691,3.341,2693,3.341,2694,2.034,2695,3.341,2740,2.034,2748,1.448,2757,1.873,2769,3.341,2773,4.532,2784,3.341,2785,2.034,2791,2.034,2795,2.034,2806,1.873,2827,2.034,2832,2.278,2833,2.278,2834,3.742,2835,3.742,2836,3.742,2837,2.278,2838,2.278,2839,2.278,2840,2.278,2841,2.278,2842,3.742,2843,3.742,2844,2.278,2845,3.742,2846,2.278,2847,3.742,2848,3.742,2849,2.278,2850,3.742,2851,2.278,2852,2.278,2853,3.742,2854,2.278,2855,6.091,2856,2.278,2857,2.278,2858,2.278,2859,2.278,2860,3.742,2861,2.278,2862,2.278,2863,2.278,2864,2.278,2865,2.278,2866,2.278,2867,2.278,2868,3.742,2869,2.278,2870,2.278,2871,2.278,2872,2.278,2873,2.278,2874,4.763,2875,2.278,2876,2.278,2877,2.278,2878,2.278,2879,2.278,2880,2.278,2881,2.278,2882,2.278,2883,2.278,2884,2.278,2885,2.278,2886,2.278,2887,2.278,2888,2.278,2889,2.278,2890,2.278,2891,2.278,2892,2.278,2893,2.278,2894,2.278,2895,2.278,2896,3.742,2897,2.278,2898,2.278,2899,3.742,2900,2.278,2901,2.278,2902,2.278,2903,2.278,2904,2.278,2905,2.278,2906,2.278,2907,2.278,2908,2.278,2909,2.278,2910,2.278,2911,2.278,2912,2.278,2913,2.278,2914,2.278,2915,2.278,2916,2.278,2917,2.278,2918,2.278,2919,2.278,2920,2.278,2921,2.278,2922,2.278,2923,2.278,2924,2.278,2925,2.278,2926,2.278,2927,2.278,2928,2.278,2929,2.278,2930,2.278,2931,2.278,2932,2.278,2933,2.278,2934,2.278]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"classes/AnswerGrade.html":{},"classes/AnswerGradeRepository.html":{},"modules/AnswerModule.html":{},"classes/AnswerRepository.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"modules/AuxiliaryModule.html":{},"interfaces/BatchUser.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"classes/CopyQuestionGroupDto.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CreateAnswerDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CsvLine.html":{},"interfaces/CsvLineRow.html":{},"injectables/CustomLogger.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementDto.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementRepository.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"interfaces/ExamAgreementUser.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"classes/ExamPersonalResult.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"controllers/ExamTargetController.html":{},"interfaces/ExamTargetManagerDto.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"classes/ExamTargetRepository.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"classes/ExamTitle1621036457247.html":{},"interfaces/ExamUser.html":{},"controllers/ExportationController.html":{},"modules/ExportationModule.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"classes/FFEntity.html":{},"interfaces/FileSendDto.html":{},"interfaces/FindExamByUserDto.html":{},"classes/FindPersonalDto.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseAuthDecodedToken.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptions.html":{},"injectables/FirebaseStorageService.html":{},"interfaces/FirebaseStorageUploadDto.html":{},"injectables/FirebaseUploader.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/Grade.html":{},"classes/GradeIndex1624560625346.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IEntity.html":{},"interfaces/IException.html":{},"modules/InfraModule.html":{},"injectables/JwtGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/LoggerModule.html":{},"classes/LoginDto.html":{},"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"classes/Period.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/PeriodRepository.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Professor.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/Question.html":{},"controllers/QuestionController.html":{},"classes/QuestionFindDto.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"modules/QuestionGroupModule.html":{},"classes/QuestionGroupRepository.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"interfaces/QuestionGroupUser.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/QuestionRepository.html":{},"injectables/QuestionService.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/SeedAuxiliary1624412129413.html":{},"interfaces/SendAgreementEmailDto.html":{},"injectables/SendEmailService.html":{},"classes/SendMailDto.html":{},"interfaces/SoftDeleteResult.html":{},"classes/Student.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"interfaces/SwaggerOptions.html":{},"injectables/TemplateService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateAnswerDto.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"classes/UpdateExamDto.html":{},"classes/UpdateQuestionDto.html":{},"classes/UpdateQuestionGroupDto.html":{},"controllers/UploadController.html":{},"classes/UploaderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserEmail1625013724392.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserResult.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":529,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionPosition1620488935141.html":{},"injectables/QuestionService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":2736,"title":{},"body":{"dependencies.html":{}}}],["0.1.20",{"_index":2747,"title":{},"body":{"dependencies.html":{}}}],["0.1.6",{"_index":2710,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":2712,"title":{},"body":{"dependencies.html":{}}}],["0.2.31",{"_index":2743,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":2711,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":2733,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":2702,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2631,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2642,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2633,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2640,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2632,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2677,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2681,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2692,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2672,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2638,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2673,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2634,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2628,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2630,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2637,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2629,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2639,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2641,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":124,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"classes/QuestionGroup1620179231630.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"miscellaneous/variables.html":{}}}],["1.10.0",{"_index":2727,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":2717,"title":{},"body":{"dependencies.html":{}}}],["1.3.6",{"_index":2732,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":2714,"title":{},"body":{"dependencies.html":{}}}],["1/4",{"_index":2676,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":2921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10h",{"_index":2910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":2821,"title":{},"body":{"overview.html":{}}}],["14",{"_index":2820,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":2746,"title":{},"body":{"dependencies.html":{}}}],["2.2.5",{"_index":2730,"title":{},"body":{"dependencies.html":{}}}],["2.22.1",{"_index":2715,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":2709,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1897,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":2858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22",{"_index":2824,"title":{},"body":{"overview.html":{}}}],["25",{"_index":2675,"title":{},"body":{"coverage.html":{}}}],["29997856155",{"_index":35,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":2738,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":2888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31",{"_index":2822,"title":{},"body":{"overview.html":{}}}],["36",{"_index":922,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["4.0.0",{"_index":2734,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":2742,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":2725,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":2728,"title":{},"body":{"dependencies.html":{}}}],["4.4.1",{"_index":2724,"title":{},"body":{"dependencies.html":{}}}],["4.7.15",{"_index":2706,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1869,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["465",{"_index":2914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4xx",{"_index":1861,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["5",{"_index":125,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["5.2.2",{"_index":2700,"title":{},"body":{"dependencies.html":{}}}],["5.2.6",{"_index":2720,"title":{},"body":{"dependencies.html":{}}}],["5.5.3",{"_index":2721,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":1865,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["5000",{"_index":2872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50172241065",{"_index":1889,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":2922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.5.1",{"_index":2707,"title":{},"body":{"dependencies.html":{}}}],["6.6.2",{"_index":2731,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":2739,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":2926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6379",{"_index":945,"title":{},"body":{"classes/ExamAgreement.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{}}}],["7.1.5",{"_index":2705,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":2704,"title":{},"body":{"dependencies.html":{}}}],["7.6.13",{"_index":2701,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":946,"title":{},"body":{"classes/ExamAgreement.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"injectables/TemplateService.html":{}}}],["87",{"_index":2823,"title":{},"body":{"overview.html":{}}}],["9",{"_index":2891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.7.0",{"_index":2722,"title":{},"body":{"dependencies.html":{}}}],["989898",{"_index":1890,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{},"miscellaneous/variables.html":{}}}],["999999",{"_index":37,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"miscellaneous/variables.html":{}}}],["_",{"_index":1330,"title":{},"body":{"injectables/ExamTargetService.html":{},"injectables/PayloadInterceptor.html":{},"miscellaneous/variables.html":{}}}],["__dirname",{"_index":2874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_generateuniquecode",{"_index":912,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["_rangeoverlapping",{"_index":2037,"title":{},"body":{"injectables/PeriodService.html":{}}}],["_targetmap",{"_index":1319,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["a.exam_agreement_id",{"_index":1427,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["a.grade_id",{"_index":1430,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["a.id",{"_index":1417,"title":{},"body":{"injectables/ExportationRepository.html":{},"injectables/PersonalQuestionGroup.html":{}}}],["a.position",{"_index":900,"title":{},"body":{"classes/Exam.html":{},"classes/QuestionGroup.html":{},"injectables/QuestionGroupService.html":{}}}],["a.question_id",{"_index":1435,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["a.score",{"_index":1419,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["ability",{"_index":618,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"miscellaneous/typealiases.html":{}}}],["ability.factory",{"_index":660,"title":{},"body":{"modules/CaslModule.html":{}}}],["ability.factory.ts",{"_index":614,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ability.factory.ts:32",{"_index":617,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["abilitybuilder",{"_index":619,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["abilityclass",{"_index":620,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["abstract",{"_index":1971,"title":{},"body":{"classes/MailerService.html":{},"classes/UploaderService.html":{}}}],["accessors",{"_index":858,"title":{},"body":{"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamTargetNode.html":{},"injectables/FirebaseAdmin.html":{},"classes/Professor.html":{},"classes/Student.html":{}}}],["accesstoken",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":2895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["action",{"_index":159,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"injectables/CaslAbilityFactory.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamTarget1622326106015.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPositionIdx1620563708532.html":{}}}],["action.enum",{"_index":630,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["action.enum.ts",{"_index":2753,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["active",{"_index":531,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/ExamRepository.html":{},"miscellaneous/enumerations.html":{}}}],["add",{"_index":153,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"classes/ExamTarget1622326106015.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/UserEmail1625013724392.html":{}}}],["addmonths",{"_index":1881,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["addtargets",{"_index":1265,"title":{},"body":{"classes/ExamTargetAdd1622378888497.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["addtargets.map((target",{"_index":1266,"title":{},"body":{"classes/ExamTargetAdd1622378888497.html":{}}}],["admin",{"_index":64,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Auth1619445806509.html":{},"injectables/FirebaseAdmin.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"interfaces/FirebaseModuleOptions.html":{},"injectables/FirebaseStorageService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["admin.constants",{"_index":1572,"title":{},"body":{"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{}}}],["admin.constants.ts",{"_index":2680,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["admin.module",{"_index":1708,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["admin.module.ts",{"_index":1603,"title":{},"body":{"modules/FirebaseAdminModule.html":{}}}],["admin.module.ts:14",{"_index":1606,"title":{},"body":{"modules/FirebaseAdminModule.html":{}}}],["admin.module.ts:27",{"_index":1611,"title":{},"body":{"modules/FirebaseAdminModule.html":{}}}],["admin.provider",{"_index":1614,"title":{},"body":{"modules/FirebaseAdminModule.html":{}}}],["admin.provider.ts",{"_index":1520,"title":{},"body":{"injectables/FirebaseAdmin.html":{},"coverage.html":{}}}],["admin.provider.ts:17",{"_index":1537,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["admin.provider.ts:20",{"_index":1549,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["admin.provider.ts:24",{"_index":1567,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["admin.provider.ts:28",{"_index":1569,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["admin.provider.ts:32",{"_index":1539,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["admin.provider.ts:36",{"_index":1542,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["admin.provider.ts:40",{"_index":1547,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["admin.provider.ts:44",{"_index":1551,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["admin.provider.ts:48",{"_index":1553,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["admin.provider.ts:52",{"_index":1555,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["admin.provider.ts:56",{"_index":1557,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["admin.provider.ts:60",{"_index":1559,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["admin.provider.ts:64",{"_index":1561,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["admin.provider.ts:68",{"_index":1563,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["admin.provider.ts:72",{"_index":1546,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["admin.provider.ts:8",{"_index":1536,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["admin/firebase",{"_index":1602,"title":{},"body":{"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["admin/providers/firebase",{"_index":1519,"title":{},"body":{"injectables/FirebaseAdmin.html":{},"coverage.html":{}}}],["adminuser.ts",{"_index":7,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminuser.ts:37",{"_index":19,"title":{},"body":{"classes/AdminUser1620299822480.html":{}}}],["adminuser.ts:8",{"_index":28,"title":{},"body":{"classes/AdminUser1620299822480.html":{}}}],["adminuser1620299822480",{"_index":1,"title":{"classes/AdminUser1620299822480.html":{}},"body":{"classes/AdminUser1620299822480.html":{},"coverage.html":{}}}],["affected",{"_index":360,"title":{},"body":{"injectables/AnswerService.html":{}}}],["affected.raw.affectedrows",{"_index":362,"title":{},"body":{"injectables/AnswerService.html":{}}}],["affectedrows",{"_index":2429,"title":{},"body":{"interfaces/SoftDeleteResult.html":{}}}],["afterload",{"_index":880,"title":{},"body":{"classes/Exam.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{}}}],["age=31536000",{"_index":1731,"title":{},"body":{"injectables/FirebaseStorageService.html":{}}}],["agreed",{"_index":1039,"title":{},"body":{"injectables/ExamAgreementService.html":{},"injectables/ExamService.html":{}}}],["agreement",{"_index":895,"title":{},"body":{"classes/Exam.html":{},"classes/ExamAgreement.html":{},"controllers/ExamAgreementController.html":{},"injectables/ExamAgreementService.html":{},"interfaces/ExamAgreementUser.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"interfaces/SendAgreementEmailDto.html":{},"injectables/SendEmailService.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["agreement.controller",{"_index":1129,"title":{},"body":{"modules/ExamModule.html":{}}}],["agreement.controller.ts",{"_index":964,"title":{},"body":{"controllers/ExamAgreementController.html":{},"coverage.html":{}}}],["agreement.controller.ts:23",{"_index":969,"title":{},"body":{"controllers/ExamAgreementController.html":{}}}],["agreement.controller.ts:32",{"_index":977,"title":{},"body":{"controllers/ExamAgreementController.html":{}}}],["agreement.dto",{"_index":725,"title":{},"body":{"classes/CreateExamAgreementDto.html":{},"controllers/ExamAgreementController.html":{},"injectables/ExamAgreementService.html":{}}}],["agreement.dto.ts",{"_index":717,"title":{},"body":{"classes/CreateExamAgreementDto.html":{},"classes/ExamAgreementDto.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"coverage.html":{}}}],["agreement.dto.ts:12",{"_index":720,"title":{},"body":{"classes/CreateExamAgreementDto.html":{}}}],["agreement.dto.ts:14",{"_index":2504,"title":{},"body":{"classes/UpdateExamAgreementQueryDto.html":{}}}],["agreement.dto.ts:16",{"_index":2505,"title":{},"body":{"classes/UpdateExamAgreementQueryDto.html":{}}}],["agreement.dto.ts:23",{"_index":2502,"title":{},"body":{"classes/UpdateExamAgreementDto.html":{}}}],["agreement.dto.ts:28",{"_index":2501,"title":{},"body":{"classes/UpdateExamAgreementDto.html":{}}}],["agreement.dto.ts:6",{"_index":989,"title":{},"body":{"classes/ExamAgreementDto.html":{}}}],["agreement.dto.ts:9",{"_index":988,"title":{},"body":{"classes/ExamAgreementDto.html":{}}}],["agreement.entity",{"_index":109,"title":{},"body":{"classes/Answer.html":{},"injectables/CaslAbilityFactory.html":{},"classes/Exam.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementRepository.html":{},"injectables/ExamAgreementService.html":{},"interfaces/SendAgreementEmailDto.html":{},"classes/User.html":{}}}],["agreement.entity.ts",{"_index":910,"title":{},"body":{"classes/ExamAgreement.html":{},"coverage.html":{}}}],["agreement.entity.ts:13",{"_index":923,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["agreement.entity.ts:18",{"_index":925,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["agreement.entity.ts:21",{"_index":914,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["agreement.entity.ts:24",{"_index":917,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["agreement.entity.ts:31",{"_index":919,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["agreement.entity.ts:34",{"_index":927,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["agreement.entity.ts:37",{"_index":916,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["agreement.entity.ts:40",{"_index":926,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["agreement.entity.ts:43",{"_index":915,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["agreement.entity.ts:46",{"_index":931,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["agreement.entity.ts:51",{"_index":929,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["agreement.exam",{"_index":896,"title":{},"body":{"classes/Exam.html":{}}}],["agreement.hasfinishedexam",{"_index":1053,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["agreement.repository",{"_index":1032,"title":{},"body":{"injectables/ExamAgreementService.html":{},"modules/ExamModule.html":{}}}],["agreement.repository.ts",{"_index":998,"title":{},"body":{"classes/ExamAgreementRepository.html":{},"coverage.html":{}}}],["agreement.service",{"_index":323,"title":{},"body":{"injectables/AnswerService.html":{},"controllers/ExamAgreementController.html":{},"modules/ExamModule.html":{}}}],["agreement.service.ts",{"_index":1000,"title":{},"body":{"injectables/ExamAgreementService.html":{},"coverage.html":{}}}],["agreement.service.ts:103",{"_index":1012,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["agreement.service.ts:108",{"_index":1021,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["agreement.service.ts:115",{"_index":1016,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["agreement.service.ts:132",{"_index":1019,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["agreement.service.ts:27",{"_index":1009,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["agreement.service.ts:38",{"_index":1013,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["agreement.service.ts:63",{"_index":1023,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["agreement.service.ts:79",{"_index":1026,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["agreement.status",{"_index":1061,"title":{},"body":{"injectables/ExamAgreementService.html":{},"classes/ExamRepository.html":{}}}],["agreement.uniquecodesendedat",{"_index":1046,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["agreement.user",{"_index":2536,"title":{},"body":{"classes/User.html":{}}}],["agreements",{"_index":854,"title":{},"body":{"classes/Exam.html":{},"injectables/ExamService.html":{}}}],["agreementsbydateinterval",{"_index":1001,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["agreementsbydateinterval(start",{"_index":1011,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["aliases",{"_index":2826,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow_anonymous",{"_index":528,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Exam1620478273991.html":{}}}],["allowanonymous",{"_index":729,"title":{},"body":{"classes/CreateExamDto.html":{},"classes/Exam.html":{}}}],["allowedorigins",{"_index":2645,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["alreadyagreed",{"_index":1036,"title":{},"body":{"injectables/ExamAgreementService.html":{},"classes/ExamPersonalResult.html":{},"injectables/ExamService.html":{}}}],["alter",{"_index":296,"title":{},"body":{"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auxiliary1620477175799.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/UserEmail1625013724392.html":{}}}],["andwhere",{"_index":1192,"title":{},"body":{"classes/ExamRepository.html":{}}}],["andwhere(':date",{"_index":1181,"title":{},"body":{"classes/ExamRepository.html":{}}}],["andwhere('exam.created_at",{"_index":1188,"title":{},"body":{"classes/ExamRepository.html":{}}}],["andwhere('user.id",{"_index":1807,"title":{},"body":{"classes/GradeRepository.html":{}}}],["anonymous",{"_index":547,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/CreateExamAgreementDto.html":{},"interfaces/CsvLineRow.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"injectables/ExportationRepository.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{}}}],["answer",{"_index":69,"title":{"classes/Answer.html":{}},"body":{"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"classes/AnswerGrade.html":{},"classes/AnswerRepository.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/ExportationRepository.html":{},"classes/Grade.html":{},"classes/Question.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["answer.controller",{"_index":275,"title":{},"body":{"modules/AnswerModule.html":{}}}],["answer.dto",{"_index":210,"title":{},"body":{"controllers/AnswerController.html":{},"injectables/AnswerService.html":{},"classes/UpdateAnswerDto.html":{}}}],["answer.dto.ts",{"_index":689,"title":{},"body":{"classes/CreateAnswerDto.html":{},"classes/UpdateAnswerDto.html":{},"coverage.html":{}}}],["answer.dto.ts:15",{"_index":694,"title":{},"body":{"classes/CreateAnswerDto.html":{}}}],["answer.dto.ts:18",{"_index":692,"title":{},"body":{"classes/CreateAnswerDto.html":{}}}],["answer.dto.ts:22",{"_index":697,"title":{},"body":{"classes/CreateAnswerDto.html":{}}}],["answer.dto.ts:26",{"_index":691,"title":{},"body":{"classes/CreateAnswerDto.html":{}}}],["answer.entity",{"_index":244,"title":{},"body":{"classes/AnswerGrade.html":{}}}],["answer.grade",{"_index":1782,"title":{},"body":{"classes/Grade.html":{}}}],["answer.question",{"_index":2124,"title":{},"body":{"classes/Question.html":{}}}],["answer.service",{"_index":208,"title":{},"body":{"controllers/AnswerController.html":{},"modules/AnswerModule.html":{}}}],["answer.ts",{"_index":128,"title":{},"body":{"classes/Answer1622421768424.html":{},"coverage.html":{}}}],["answer.ts:13",{"_index":133,"title":{},"body":{"classes/Answer1622421768424.html":{}}}],["answer.ts:4",{"_index":132,"title":{},"body":{"classes/Answer1622421768424.html":{}}}],["answer.ts:6",{"_index":134,"title":{},"body":{"classes/Answer1622421768424.html":{}}}],["answer/answer.module",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["answer/entities/answer.entity",{"_index":624,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["answer1622421768424",{"_index":126,"title":{"classes/Answer1622421768424.html":{}},"body":{"classes/Answer1622421768424.html":{},"coverage.html":{}}}],["answer:12",{"_index":240,"title":{},"body":{"classes/AnswerGrade.html":{}}}],["answer:15",{"_index":241,"title":{},"body":{"classes/AnswerGrade.html":{}}}],["answer:18",{"_index":237,"title":{},"body":{"classes/AnswerGrade.html":{}}}],["answer:21",{"_index":239,"title":{},"body":{"classes/AnswerGrade.html":{}}}],["answer:24",{"_index":236,"title":{},"body":{"classes/AnswerGrade.html":{}}}],["answer:27",{"_index":238,"title":{},"body":{"classes/AnswerGrade.html":{}}}],["answer_grade",{"_index":2760,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["answer_id",{"_index":1418,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["answercontroller",{"_index":167,"title":{"controllers/AnswerController.html":{}},"body":{"controllers/AnswerController.html":{},"modules/AnswerModule.html":{},"coverage.html":{}}}],["answerdto",{"_index":343,"title":{},"body":{"injectables/AnswerService.html":{}}}],["answerdto.type",{"_index":348,"title":{},"body":{"injectables/AnswerService.html":{}}}],["answered",{"_index":1138,"title":{},"body":{"classes/ExamPersonalResult.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{}}}],["answergrade",{"_index":144,"title":{"classes/AnswerGrade.html":{}},"body":{"classes/Answer1622421768424.html":{},"classes/AnswerGrade.html":{},"classes/AnswerGradeRepository.html":{},"classes/Grade.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["answergraderepository",{"_index":245,"title":{"classes/AnswerGradeRepository.html":{}},"body":{"classes/AnswerGradeRepository.html":{},"modules/AnswerModule.html":{},"injectables/AnswerService.html":{},"coverage.html":{}}}],["answermodule",{"_index":257,"title":{"modules/AnswerModule.html":{}},"body":{"modules/AnswerModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["answerrepository",{"_index":278,"title":{"classes/AnswerRepository.html":{}},"body":{"modules/AnswerModule.html":{},"classes/AnswerRepository.html":{},"injectables/AnswerService.html":{},"coverage.html":{}}}],["answers",{"_index":340,"title":{},"body":{"injectables/AnswerService.html":{},"classes/Grade.html":{},"classes/Question.html":{}}}],["answerscorecheck.ts",{"_index":290,"title":{},"body":{"classes/AnswerScoreCheck1624750140568.html":{},"coverage.html":{}}}],["answerscorecheck.ts:13",{"_index":292,"title":{},"body":{"classes/AnswerScoreCheck1624750140568.html":{}}}],["answerscorecheck.ts:4",{"_index":291,"title":{},"body":{"classes/AnswerScoreCheck1624750140568.html":{}}}],["answerscorecheck.ts:6",{"_index":293,"title":{},"body":{"classes/AnswerScoreCheck1624750140568.html":{}}}],["answerscorecheck1624750140568",{"_index":288,"title":{"classes/AnswerScoreCheck1624750140568.html":{}},"body":{"classes/AnswerScoreCheck1624750140568.html":{},"coverage.html":{}}}],["answerservice",{"_index":207,"title":{"injectables/AnswerService.html":{}},"body":{"controllers/AnswerController.html":{},"modules/AnswerModule.html":{},"injectables/AnswerService.html":{},"coverage.html":{},"overview.html":{}}}],["answertype",{"_index":94,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"injectables/AnswerService.html":{},"classes/CreateAnswerDto.html":{},"miscellaneous/enumerations.html":{}}}],["answertype.answer",{"_index":695,"title":{},"body":{"classes/CreateAnswerDto.html":{}}}],["answertype.answer_grade",{"_index":349,"title":{},"body":{"injectables/AnswerService.html":{},"classes/CreateAnswerDto.html":{}}}],["anônimo",{"_index":1448,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["api",{"_index":2785,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":196,"title":{},"body":{"controllers/AnswerController.html":{},"controllers/ExamAgreementController.html":{},"controllers/ExamController.html":{},"controllers/ExportationController.html":{},"controllers/QuestionGroupController.html":{},"controllers/UploadController.html":{}}}],["apiexcludeendpoint",{"_index":1276,"title":{},"body":{"controllers/ExamTargetController.html":{}}}],["apihideproperty",{"_index":936,"title":{},"body":{"classes/ExamAgreement.html":{},"classes/ExamAgreementDto.html":{}}}],["apinotfoundresponse",{"_index":2152,"title":{},"body":{"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{}}}],["apiokresponse",{"_index":197,"title":{},"body":{"controllers/AnswerController.html":{},"controllers/ExamAgreementController.html":{},"controllers/ExamController.html":{},"controllers/ExamTargetController.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{}}}],["apiproperty",{"_index":788,"title":{},"body":{"classes/CreateQuestionDto.html":{}}}],["apiproperty({type",{"_index":772,"title":{},"body":{"classes/CreateQuestionDto.html":{}}}],["apitags",{"_index":198,"title":{},"body":{"controllers/AnswerController.html":{},"controllers/AuthController.html":{},"controllers/ExamAgreementController.html":{},"controllers/ExamController.html":{},"controllers/ExamTargetController.html":{},"controllers/ExportationController.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{}}}],["apitags('answer",{"_index":214,"title":{},"body":{"controllers/AnswerController.html":{}}}],["apitags('auth",{"_index":440,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('exam",{"_index":1101,"title":{},"body":{"controllers/ExamController.html":{}}}],["apitags('examagreement",{"_index":984,"title":{},"body":{"controllers/ExamAgreementController.html":{}}}],["apitags('examtarget",{"_index":1277,"title":{},"body":{"controllers/ExamTargetController.html":{}}}],["apitags('exportation",{"_index":1377,"title":{},"body":{"controllers/ExportationController.html":{}}}],["apitags('question",{"_index":2160,"title":{},"body":{"controllers/QuestionController.html":{}}}],["apitags('questiongroup",{"_index":2230,"title":{},"body":{"controllers/QuestionGroupController.html":{}}}],["apitags('upload",{"_index":2521,"title":{},"body":{"controllers/UploadController.html":{}}}],["apitags('user",{"_index":2548,"title":{},"body":{"controllers/UserController.html":{}}}],["aplica",{"_index":1452,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["app",{"_index":1521,"title":{},"body":{"injectables/FirebaseAdmin.html":{},"miscellaneous/functions.html":{}}}],["appability",{"_index":638,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"miscellaneous/typealiases.html":{}}}],["appcheck",{"_index":1522,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["appcontroller",{"_index":363,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applyglobals",{"_index":2686,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["applyglobals(app",{"_index":2774,"title":{},"body":{"miscellaneous/functions.html":{}}}],["applyperflayer",{"_index":2687,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["applyperflayer(app",{"_index":2775,"title":{},"body":{"miscellaneous/functions.html":{}}}],["applysecuritylayer",{"_index":2688,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["applysecuritylayer(app",{"_index":2776,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appmodule",{"_index":376,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":1629,"title":{},"body":{"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseModuleOptions.html":{}}}],["argumentshost",{"_index":1826,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["arr",{"_index":2780,"title":{},"body":{"miscellaneous/functions.html":{}}}],["array",{"_index":2079,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{}}}],["array.from(map.values()).map((target",{"_index":1341,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["arrayminsize",{"_index":754,"title":{},"body":{"classes/CreateQuestion.html":{},"classes/CreateQuestionsDto.html":{}}}],["arrayminsize(1",{"_index":761,"title":{},"body":{"classes/CreateQuestion.html":{},"classes/CreateQuestionsDto.html":{}}}],["asc",{"_index":1440,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["async",{"_index":13,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"classes/Auth1619445806509.html":{},"injectables/AuthService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"controllers/ExamController.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"controllers/ExamTargetController.html":{},"injectables/ExamTargetService.html":{},"classes/ExamTitle1621036457247.html":{},"controllers/ExportationController.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"injectables/FirebaseAuthService.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptions.html":{},"injectables/FirebaseStorageService.html":{},"injectables/FirebaseUploader.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/GradeIndex1624560625346.html":{},"interfaces/IEntity.html":{},"injectables/JwtStrategy.html":{},"injectables/NodeMailerService.html":{},"classes/PeriodIndex1624547816204.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"controllers/QuestionController.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"injectables/QuestionService.html":{},"classes/SeedAuxiliary1624412129413.html":{},"injectables/SendEmailService.html":{},"controllers/UploadController.html":{},"classes/UserEmail1625013724392.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["auth",{"_index":60,"title":{"classes/Auth.html":{}},"body":{"classes/AdminUser1620299822480.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"controllers/AuthController.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"injectables/FirebaseAdmin.html":{},"interfaces/FirebaseAuthDecodedToken.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/IEntity.html":{},"injectables/JwtStrategy.html":{},"classes/SeedAuxiliary1624412129413.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["auth.constants",{"_index":1968,"title":{},"body":{"classes/LoginDto.html":{}}}],["auth.dto",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["auth.dto.ts",{"_index":709,"title":{},"body":{"classes/CreateAuthDto.html":{},"coverage.html":{}}}],["auth.password",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth.service",{"_index":437,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/FirebaseModule.html":{},"injectables/JwtStrategy.html":{}}}],["auth.service.ts",{"_index":1636,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:14",{"_index":1656,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["auth.service.ts:27",{"_index":1650,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["auth.service.ts:31",{"_index":1646,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["auth.service.ts:37",{"_index":1654,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["auth.service.ts:44",{"_index":1648,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["auth.service.ts:9",{"_index":1643,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["auth.ts",{"_index":419,"title":{},"body":{"classes/Auth1619445806509.html":{},"coverage.html":{}}}],["auth.ts:15",{"_index":421,"title":{},"body":{"classes/Auth1619445806509.html":{}}}],["auth.ts:4",{"_index":420,"title":{},"body":{"classes/Auth1619445806509.html":{}}}],["auth.ts:6",{"_index":422,"title":{},"body":{"classes/Auth1619445806509.html":{}}}],["auth/auth.module",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["auth/dtos/create",{"_index":817,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["auth/guards/jwt.guard",{"_index":2153,"title":{},"body":{"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"controllers/UserController.html":{}}}],["auth1619445806509",{"_index":417,"title":{"classes/Auth1619445806509.html":{}},"body":{"classes/Auth1619445806509.html":{},"coverage.html":{}}}],["authcontroller",{"_index":431,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authdto",{"_index":443,"title":{"classes/AuthDto.html":{}},"body":{"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["authdto.login",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["authdto:6",{"_index":713,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/LoginDto.html":{}}}],["authguard",{"_index":1929,"title":{},"body":{"injectables/JwtGuard.html":{}}}],["authguard('jwt",{"_index":1931,"title":{},"body":{"injectables/JwtGuard.html":{}}}],["authmodule",{"_index":379,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["authrepository",{"_index":461,"title":{"classes/AuthRepository.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authservice",{"_index":436,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["auto_increment",{"_index":143,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/ExamTarget1622326106015.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{}}}],["auxiliary.ts",{"_index":518,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"coverage.html":{}}}],["auxiliary.ts:29",{"_index":568,"title":{},"body":{"classes/Auxiliary1624416663574.html":{}}}],["auxiliary.ts:4",{"_index":519,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{}}}],["auxiliary.ts:6",{"_index":521,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{}}}],["auxiliary.ts:60",{"_index":520,"title":{},"body":{"classes/Auxiliary1620477175799.html":{}}}],["auxiliary/auxiliary.module",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["auxiliary1620477175799",{"_index":516,"title":{"classes/Auxiliary1620477175799.html":{}},"body":{"classes/Auxiliary1620477175799.html":{},"coverage.html":{}}}],["auxiliary1624416663574",{"_index":566,"title":{"classes/Auxiliary1624416663574.html":{}},"body":{"classes/Auxiliary1624416663574.html":{},"coverage.html":{}}}],["auxiliarymodule",{"_index":380,"title":{"modules/AuxiliaryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuxiliaryModule.html":{},"modules/ExamModule.html":{},"modules/QuestionGroupModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["avaliacao",{"_index":2766,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["await",{"_index":43,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer1622421768424.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"classes/Auth1619445806509.html":{},"injectables/AuthService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"injectables/ExamService.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"injectables/ExamTargetService.html":{},"classes/ExamTitle1621036457247.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseStorageService.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/GradeIndex1624560625346.html":{},"interfaces/IEntity.html":{},"injectables/JwtStrategy.html":{},"injectables/NodeMailerService.html":{},"classes/PeriodIndex1624547816204.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"injectables/QuestionService.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/UserEmail1625013724392.html":{},"injectables/UserService.html":{}}}],["b",{"_index":899,"title":{},"body":{"classes/Exam.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/QuestionGroup.html":{},"injectables/QuestionGroupService.html":{}}}],["b.id",{"_index":2081,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{}}}],["b.position",{"_index":901,"title":{},"body":{"classes/Exam.html":{},"classes/QuestionGroup.html":{},"injectables/QuestionGroupService.html":{}}}],["baseentity",{"_index":2491,"title":{},"body":{"classes/TimestampEntity.html":{}}}],["basename",{"_index":2471,"title":{},"body":{"injectables/TemplateService.html":{}}}],["basename(file",{"_index":2482,"title":{},"body":{"injectables/TemplateService.html":{}}}],["basepath",{"_index":2472,"title":{},"body":{"injectables/TemplateService.html":{}}}],["baserepository",{"_index":248,"title":{},"body":{"classes/AnswerGradeRepository.html":{},"classes/AnswerRepository.html":{},"classes/AuthRepository.html":{},"classes/ExamAgreementRepository.html":{},"classes/ExamRepository.html":{},"classes/ExamTargetRepository.html":{},"classes/GradeRepository.html":{},"classes/PeriodRepository.html":{},"classes/ProfessorRepository.html":{},"classes/QuestionGroupRepository.html":{},"classes/QuestionRepository.html":{},"classes/StudentRepository.html":{},"classes/UserRepository.html":{}}}],["basic",{"_index":2716,"title":{},"body":{"dependencies.html":{}}}],["batchuser",{"_index":309,"title":{"interfaces/BatchUser.html":{}},"body":{"injectables/AnswerService.html":{},"interfaces/BatchUser.html":{},"coverage.html":{}}}],["bcrypt",{"_index":31,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"injectables/AuthService.html":{},"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["bcrypt.compare(logindto.password",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.gensalt",{"_index":56,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"injectables/AuthService.html":{},"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["bcrypt.hash(createauthdto.password",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(process.env.admin_password",{"_index":58,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["bcryptjs",{"_index":32,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"dependencies.html":{}}}],["beforeinsert",{"_index":928,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["between",{"_index":123,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamRepository.html":{}}}],["between(start",{"_index":1058,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["body",{"_index":189,"title":{},"body":{"controllers/AnswerController.html":{},"controllers/AuthController.html":{},"controllers/ExamAgreementController.html":{},"controllers/ExamController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"controllers/UserController.html":{}}}],["body(new",{"_index":220,"title":{},"body":{"controllers/AnswerController.html":{}}}],["bool",{"_index":862,"title":{},"body":{"classes/Exam.html":{},"injectables/PeriodService.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{}}}],["boolean",{"_index":718,"title":{},"body":{"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"interfaces/CsvLineRow.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"interfaces/ExamAgreementUser.html":{},"classes/ExamTargetNode.html":{},"interfaces/FileSendDto.html":{},"interfaces/FirebaseAuthDecodedToken.html":{},"interfaces/FirebaseStorageUploadDto.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{}}}],["bootstrap",{"_index":262,"title":{},"body":{"modules/AnswerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuxiliaryModule.html":{},"modules/CaslModule.html":{},"modules/CoreModule.html":{},"modules/ExamModule.html":{},"modules/ExportationModule.html":{},"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{},"modules/InfraModule.html":{},"modules/LoggerModule.html":{},"modules/QuestionGroupModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["br",{"_index":1474,"title":{},"body":{"injectables/ExportationService.html":{}}}],["brazilian",{"_index":812,"title":{},"body":{"classes/CreateUserDto.html":{},"dependencies.html":{}}}],["break",{"_index":645,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"injectables/UserService.html":{}}}],["browse",{"_index":2818,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2815,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":1725,"title":{},"body":{"injectables/FirebaseStorageService.html":{},"interfaces/FirebaseStorageUploadDto.html":{}}}],["buffer",{"_index":1493,"title":{},"body":{"injectables/ExportationService.html":{},"interfaces/FileSendDto.html":{},"interfaces/FirebaseStorageUploadDto.html":{}}}],["buffer.from(await",{"_index":1482,"title":{},"body":{"injectables/ExportationService.html":{}}}],["build",{"_index":639,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"index.html":{}}}],["builder",{"_index":1480,"title":{},"body":{"injectables/ExportationService.html":{}}}],["builder.tostring",{"_index":1483,"title":{},"body":{"injectables/ExportationService.html":{}}}],["buildswaggerdoc",{"_index":2689,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["buildswaggerdoc(app",{"_index":2777,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cachecontrol",{"_index":1730,"title":{},"body":{"injectables/FirebaseStorageService.html":{}}}],["callback",{"_index":2782,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["callhandler",{"_index":1997,"title":{},"body":{"injectables/PayloadInterceptor.html":{}}}],["can(action.manage",{"_index":644,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.read",{"_index":647,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.update",{"_index":648,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["canagree",{"_index":1139,"title":{},"body":{"classes/ExamPersonalResult.html":{},"injectables/ExamService.html":{}}}],["cannot(action.delete",{"_index":649,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["cascade",{"_index":583,"title":{},"body":{"classes/Auxiliary1624416663574.html":{},"classes/ExamTarget1622326106015.html":{}}}],["case",{"_index":642,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"injectables/UserService.html":{}}}],["casl/ability",{"_index":623,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"dependencies.html":{}}}],["casl/casl.module",{"_index":460,"title":{},"body":{"modules/AuthModule.html":{}}}],["caslabilityfactory",{"_index":612,"title":{"injectables/CaslAbilityFactory.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"coverage.html":{},"overview.html":{}}}],["caslaction",{"_index":628,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"miscellaneous/enumerations.html":{}}}],["caslmodule",{"_index":454,"title":{"modules/CaslModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules.html":{},"overview.html":{}}}],["caslsubjects",{"_index":637,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"miscellaneous/typealiases.html":{}}}],["catch",{"_index":1047,"title":{},"body":{"injectables/ExamAgreementService.html":{},"injectables/FirebaseAuthService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["catch((e",{"_index":1338,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["catch(console.error",{"_index":2421,"title":{},"body":{"injectables/SendEmailService.html":{}}}],["catch(exception",{"_index":1823,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["catch(httpexception",{"_index":1840,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["cert",{"_index":1627,"title":{},"body":{"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["change",{"_index":554,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamTargetAdd1622378888497.html":{},"classes/ExamTitle1621036457247.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPositionIdx1620563708532.html":{}}}],["char",{"_index":1765,"title":{},"body":{"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{}}}],["check",{"_index":112,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerScoreCheck1624750140568.html":{}}}],["check(`\"score",{"_index":121,"title":{},"body":{"classes/Answer.html":{}}}],["childentity",{"_index":243,"title":{},"body":{"classes/AnswerGrade.html":{},"classes/Professor.html":{},"classes/Student.html":{}}}],["childs",{"_index":1287,"title":{},"body":{"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"injectables/ExamTargetTree.html":{}}}],["class",{"_index":0,"title":{"classes/AdminUser1620299822480.html":{},"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"classes/AnswerGrade.html":{},"classes/AnswerGradeRepository.html":{},"classes/AnswerRepository.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"classes/AuthDto.html":{},"classes/AuthRepository.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/CopyQuestionGroupDto.html":{},"classes/Course.html":{},"classes/CreateAnswerDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/CreateUserDto.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/ExamAgreementDto.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementRepository.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"classes/ExamPersonalResult.html":{},"classes/ExamRepository.html":{},"classes/ExamTarget.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"classes/ExamTargetNode.html":{},"classes/ExamTargetRepository.html":{},"classes/ExamTitle1621036457247.html":{},"classes/FFEntity.html":{},"classes/FindPersonalDto.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/Grade.html":{},"classes/GradeIndex1624560625346.html":{},"classes/GradeRepository.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/MailerService.html":{},"classes/Period.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/PeriodRepository.html":{},"classes/Professor.html":{},"classes/ProfessorRepository.html":{},"classes/Question.html":{},"classes/QuestionFindDto.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/QuestionGroupRepository.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/QuestionRepository.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/SendMailDto.html":{},"classes/Student.html":{},"classes/StudentRepository.html":{},"classes/Subject.html":{},"classes/TimestampEntity.html":{},"classes/UpdateAnswerDto.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"classes/UpdateExamDto.html":{},"classes/UpdateQuestionDto.html":{},"classes/UpdateQuestionGroupDto.html":{},"classes/UploaderService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserEmail1625013724392.html":{},"classes/UserRepository.html":{}},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"classes/AnswerGrade.html":{},"classes/AnswerGradeRepository.html":{},"modules/AnswerModule.html":{},"classes/AnswerRepository.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"modules/AuxiliaryModule.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"classes/CopyQuestionGroupDto.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CreateAnswerDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CustomLogger.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementDto.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementRepository.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"classes/ExamPersonalResult.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"controllers/ExamTargetController.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"classes/ExamTargetRepository.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"classes/ExamTitle1621036457247.html":{},"controllers/ExportationController.html":{},"modules/ExportationModule.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"classes/FFEntity.html":{},"classes/FindPersonalDto.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"injectables/FirebaseStorageService.html":{},"injectables/FirebaseUploader.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/Grade.html":{},"classes/GradeIndex1624560625346.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IEntity.html":{},"interfaces/IException.html":{},"modules/InfraModule.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/LoggerModule.html":{},"classes/LoginDto.html":{},"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"classes/Period.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/PeriodRepository.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Professor.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/Question.html":{},"controllers/QuestionController.html":{},"classes/QuestionFindDto.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"modules/QuestionGroupModule.html":{},"classes/QuestionGroupRepository.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/QuestionRepository.html":{},"injectables/QuestionService.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/SeedAuxiliary1624412129413.html":{},"injectables/SendEmailService.html":{},"classes/SendMailDto.html":{},"classes/Student.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"injectables/TemplateService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateAnswerDto.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"classes/UpdateExamDto.html":{},"classes/UpdateQuestionDto.html":{},"classes/UpdateQuestionGroupDto.html":{},"controllers/UploadController.html":{},"classes/UploaderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserEmail1625013724392.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"classes/AnswerGrade.html":{},"classes/AnswerGradeRepository.html":{},"classes/AnswerRepository.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"classes/AuthDto.html":{},"classes/AuthRepository.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/CopyQuestionGroupDto.html":{},"classes/Course.html":{},"classes/CreateAnswerDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/CreateUserDto.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/ExamAgreementDto.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementRepository.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"classes/ExamPersonalResult.html":{},"classes/ExamRepository.html":{},"classes/ExamTarget.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"classes/ExamTargetNode.html":{},"classes/ExamTargetRepository.html":{},"classes/ExamTitle1621036457247.html":{},"classes/FFEntity.html":{},"classes/FindPersonalDto.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/Grade.html":{},"classes/GradeIndex1624560625346.html":{},"classes/GradeRepository.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/MailerService.html":{},"classes/Period.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/PeriodRepository.html":{},"classes/Professor.html":{},"classes/ProfessorRepository.html":{},"classes/Question.html":{},"classes/QuestionFindDto.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/QuestionGroupRepository.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/QuestionRepository.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/SendMailDto.html":{},"classes/Student.html":{},"classes/StudentRepository.html":{},"classes/Subject.html":{},"classes/TimestampEntity.html":{},"classes/UpdateAnswerDto.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"classes/UpdateExamDto.html":{},"classes/UpdateQuestionDto.html":{},"classes/UpdateQuestionGroupDto.html":{},"classes/UploaderService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserEmail1625013724392.html":{},"classes/UserRepository.html":{},"overview.html":{}}}],["classvalidatorex",{"_index":1870,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["classvalidatorex.error",{"_index":1874,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["classvalidatorex.message",{"_index":1873,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["cli",{"_index":2883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloud",{"_index":1672,"title":{},"body":{"injectables/FirebaseCloudMessagingService.html":{},"modules/FirebaseModule.html":{},"coverage.html":{}}}],["cls",{"_index":251,"title":{},"body":{"classes/AnswerGradeRepository.html":{},"classes/AnswerRepository.html":{},"injectables/AnswerService.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/ExamAgreementRepository.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTargetRepository.html":{},"classes/GradeRepository.html":{},"classes/PeriodRepository.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/QuestionGroupRepository.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionRepository.html":{},"injectables/QuestionService.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["cluster_answermodule",{"_index":265,"title":{},"body":{"modules/AnswerModule.html":{},"overview.html":{}}}],["cluster_answermodule_imports",{"_index":267,"title":{},"body":{"modules/AnswerModule.html":{},"overview.html":{}}}],["cluster_answermodule_providers",{"_index":266,"title":{},"body":{"modules/AnswerModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":450,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":452,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":453,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":451,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_auxiliarymodule",{"_index":587,"title":{},"body":{"modules/AuxiliaryModule.html":{},"overview.html":{}}}],["cluster_auxiliarymodule_exports",{"_index":588,"title":{},"body":{"modules/AuxiliaryModule.html":{},"overview.html":{}}}],["cluster_auxiliarymodule_providers",{"_index":589,"title":{},"body":{"modules/AuxiliaryModule.html":{},"overview.html":{}}}],["cluster_caslmodule",{"_index":655,"title":{},"body":{"modules/CaslModule.html":{},"overview.html":{}}}],["cluster_caslmodule_exports",{"_index":657,"title":{},"body":{"modules/CaslModule.html":{},"overview.html":{}}}],["cluster_caslmodule_providers",{"_index":656,"title":{},"body":{"modules/CaslModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":668,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":670,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":669,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_exammodule",{"_index":1112,"title":{},"body":{"modules/ExamModule.html":{},"overview.html":{}}}],["cluster_exammodule_exports",{"_index":1115,"title":{},"body":{"modules/ExamModule.html":{},"overview.html":{}}}],["cluster_exammodule_imports",{"_index":1113,"title":{},"body":{"modules/ExamModule.html":{}}}],["cluster_exammodule_providers",{"_index":1114,"title":{},"body":{"modules/ExamModule.html":{},"overview.html":{}}}],["cluster_exportationmodule",{"_index":1381,"title":{},"body":{"modules/ExportationModule.html":{},"overview.html":{}}}],["cluster_exportationmodule_exports",{"_index":1384,"title":{},"body":{"modules/ExportationModule.html":{},"overview.html":{}}}],["cluster_exportationmodule_imports",{"_index":1383,"title":{},"body":{"modules/ExportationModule.html":{}}}],["cluster_exportationmodule_providers",{"_index":1382,"title":{},"body":{"modules/ExportationModule.html":{},"overview.html":{}}}],["cluster_firebaseadminmodule",{"_index":1599,"title":{},"body":{"modules/FirebaseAdminModule.html":{},"overview.html":{}}}],["cluster_firebaseadminmodule_exports",{"_index":1600,"title":{},"body":{"modules/FirebaseAdminModule.html":{},"overview.html":{}}}],["cluster_firebaseadminmodule_providers",{"_index":1601,"title":{},"body":{"modules/FirebaseAdminModule.html":{},"overview.html":{}}}],["cluster_firebasemodule",{"_index":1699,"title":{},"body":{"modules/FirebaseModule.html":{},"overview.html":{}}}],["cluster_firebasemodule_exports",{"_index":1700,"title":{},"body":{"modules/FirebaseModule.html":{},"overview.html":{}}}],["cluster_firebasemodule_providers",{"_index":1701,"title":{},"body":{"modules/FirebaseModule.html":{},"overview.html":{}}}],["cluster_inframodule",{"_index":1905,"title":{},"body":{"modules/InfraModule.html":{},"overview.html":{}}}],["cluster_inframodule_exports",{"_index":1908,"title":{},"body":{"modules/InfraModule.html":{},"overview.html":{}}}],["cluster_inframodule_imports",{"_index":1907,"title":{},"body":{"modules/InfraModule.html":{}}}],["cluster_inframodule_providers",{"_index":1906,"title":{},"body":{"modules/InfraModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":1960,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":1961,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":1962,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_questiongroupmodule",{"_index":2256,"title":{},"body":{"modules/QuestionGroupModule.html":{},"overview.html":{}}}],["cluster_questiongroupmodule_exports",{"_index":2257,"title":{},"body":{"modules/QuestionGroupModule.html":{},"overview.html":{}}}],["cluster_questiongroupmodule_imports",{"_index":2259,"title":{},"body":{"modules/QuestionGroupModule.html":{}}}],["cluster_questiongroupmodule_providers",{"_index":2258,"title":{},"body":{"modules/QuestionGroupModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2562,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":2563,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":2564,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":537,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Course.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IEntity.html":{},"interfaces/IException.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/Subject.html":{}}}],["code_id",{"_index":541,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{}}}],["collection",{"_index":1691,"title":{},"body":{"injectables/FirebaseFirestoreService.html":{}}}],["collection.type",{"_index":1694,"title":{},"body":{"injectables/FirebaseFirestoreService.html":{}}}],["collection.type.ts",{"_index":2828,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["column",{"_index":113,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auth.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Course.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"classes/ExamTarget.html":{},"classes/ExamTarget1622326106015.html":{},"classes/Grade.html":{},"classes/Period.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/Subject.html":{},"classes/User.html":{},"classes/UserEmail1625013724392.html":{}}}],["column({type",{"_index":85,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/Auth.html":{},"classes/Course.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamTarget.html":{},"classes/Grade.html":{},"classes/Period.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/User.html":{}}}],["column({unique",{"_index":920,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["command",{"_index":2813,"title":{},"body":{"index.html":{}}}],["completed",{"_index":2610,"title":{},"body":{"injectables/UserService.html":{}}}],["compose",{"_index":2802,"title":{},"body":{"index.html":{}}}],["compression",{"_index":2713,"title":{},"body":{"dependencies.html":{}}}],["computador",{"_index":2800,"title":{},"body":{"index.html":{}}}],["config",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/functions.html":{}}}],["configmodule",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/InfraModule.html":{}}}],["configmodule.forroot",{"_index":403,"title":{},"body":{"modules/AppModule.html":{}}}],["configs",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"modules/InfraModule.html":{},"injectables/JwtStrategy.html":{},"injectables/NodeMailerService.html":{}}}],["configservice.get('firebase",{"_index":1925,"title":{},"body":{"modules/InfraModule.html":{}}}],["configservice.get(databaseconfigkey",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(jwtconfigkey",{"_index":468,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get(jwtconfigkey)!.secret",{"_index":1956,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["conflictexception",{"_index":1027,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["conflictexception('already",{"_index":1038,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["connection",{"_index":1392,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["console.error(e",{"_index":2607,"title":{},"body":{"injectables/UserService.html":{}}}],["console.error(exception",{"_index":1868,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["console.log('create",{"_index":2608,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":33,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseStorageService.html":{},"classes/GradeRepository.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IEntity.html":{},"interfaces/IException.html":{},"injectables/JwtStrategy.html":{},"injectables/NodeMailerService.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"injectables/ProfessorService.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"classes/SeedAuxiliary1624412129413.html":{},"injectables/SendEmailService.html":{},"injectables/StudentService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":154,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamTarget1622326106015.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPositionIdx1620563708532.html":{}}}],["constructor",{"_index":303,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/ExamAgreementService.html":{},"injectables/ExamService.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"injectables/FirebaseAdmin.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"injectables/FirebaseStorageService.html":{},"injectables/FirebaseUploader.html":{},"injectables/GradeService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/NodeMailerService.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"injectables/ProfessorService.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"injectables/SendEmailService.html":{},"injectables/StudentService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["constructor(@inject(firebase_options",{"_index":1573,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["constructor(@injectconnection",{"_index":1403,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["constructor(answerrepository",{"_index":304,"title":{},"body":{"injectables/AnswerService.html":{}}}],["constructor(authrepository",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(authservice",{"_index":1937,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(configservice",{"_index":1820,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["constructor(connection",{"_index":1391,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["constructor(firebaseadmin",{"_index":1642,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"injectables/FirebaseStorageService.html":{}}}],["constructor(graderepository",{"_index":1810,"title":{},"body":{"injectables/GradeService.html":{}}}],["constructor(mailerservice",{"_index":2407,"title":{},"body":{"injectables/SendEmailService.html":{}}}],["constructor(options",{"_index":1534,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["constructor(periodrepository",{"_index":2025,"title":{},"body":{"injectables/PeriodService.html":{}}}],["constructor(private",{"_index":216,"title":{},"body":{"controllers/AnswerController.html":{},"controllers/AuthController.html":{},"controllers/ExamAgreementController.html":{},"controllers/ExamController.html":{},"controllers/ExamTargetController.html":{},"controllers/ExportationController.html":{},"injectables/FirebaseUploader.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{}}}],["constructor(repository",{"_index":1006,"title":{},"body":{"injectables/ExamAgreementService.html":{},"injectables/ExamService.html":{},"injectables/ExamTargetService.html":{},"injectables/ExportationService.html":{},"injectables/PersonalQuestionGroup.html":{},"injectables/ProfessorService.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"injectables/StudentService.html":{}}}],["constructor(storageservice",{"_index":1738,"title":{},"body":{"injectables/FirebaseUploader.html":{}}}],["constructor(targetnodefactory",{"_index":1348,"title":{},"body":{"injectables/ExamTargetTree.html":{}}}],["constructor(transporter",{"_index":1979,"title":{},"body":{"injectables/NodeMailerService.html":{}}}],["constructor(userrepository",{"_index":2581,"title":{},"body":{"injectables/UserService.html":{}}}],["contenttype",{"_index":1723,"title":{},"body":{"injectables/FirebaseStorageService.html":{},"interfaces/FirebaseStorageUploadDto.html":{},"injectables/FirebaseUploader.html":{}}}],["controller",{"_index":166,"title":{"controllers/AnswerController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ExamAgreementController.html":{},"controllers/ExamController.html":{},"controllers/ExamTargetController.html":{},"controllers/ExportationController.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AnswerController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ExamAgreementController.html":{},"controllers/ExamController.html":{},"controllers/ExamTargetController.html":{},"controllers/ExportationController.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('answer",{"_index":213,"title":{},"body":{"controllers/AnswerController.html":{}}}],["controller('auth",{"_index":439,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('exam",{"_index":983,"title":{},"body":{"controllers/ExamAgreementController.html":{},"controllers/ExamController.html":{},"controllers/ExamTargetController.html":{}}}],["controller('export",{"_index":1376,"title":{},"body":{"controllers/ExportationController.html":{}}}],["controller('question",{"_index":2159,"title":{},"body":{"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{}}}],["controller('upload",{"_index":2520,"title":{},"body":{"controllers/UploadController.html":{}}}],["controller('user",{"_index":2547,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":168,"title":{},"body":{"controllers/AnswerController.html":{},"modules/AnswerModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ExamAgreementController.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"controllers/ExamTargetController.html":{},"controllers/ExportationController.html":{},"modules/ExportationModule.html":{},"modules/InfraModule.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"modules/QuestionGroupModule.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["controllers/app.controller",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers/auth.controller",{"_index":464,"title":{},"body":{"modules/AuthModule.html":{}}}],["controllers/exam",{"_index":1127,"title":{},"body":{"modules/ExamModule.html":{}}}],["controllers/exam.controller",{"_index":1121,"title":{},"body":{"modules/ExamModule.html":{}}}],["controllers/question",{"_index":2261,"title":{},"body":{"modules/QuestionGroupModule.html":{}}}],["controllers/question.controller",{"_index":2263,"title":{},"body":{"modules/QuestionGroupModule.html":{}}}],["controllers/upload.controller",{"_index":1915,"title":{},"body":{"modules/InfraModule.html":{}}}],["controllers/user.controller",{"_index":2566,"title":{},"body":{"modules/UserModule.html":{}}}],["copy",{"_index":2208,"title":{},"body":{"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{}}}],["copy(copyquestiongroupdto",{"_index":2209,"title":{},"body":{"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{}}}],["copying",{"_index":2807,"title":{},"body":{"index.html":{}}}],["copyquestiongroupdto",{"_index":661,"title":{"classes/CopyQuestionGroupDto.html":{}},"body":{"classes/CopyQuestionGroupDto.html":{},"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{},"coverage.html":{}}}],["copytogroup",{"_index":2354,"title":{},"body":{"injectables/QuestionService.html":{}}}],["copytogroup(group",{"_index":2359,"title":{},"body":{"injectables/QuestionService.html":{}}}],["core/core.module",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["core/decorators/is",{"_index":814,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["core/entities/ff.entity",{"_index":117,"title":{},"body":{"classes/Answer.html":{},"classes/Course.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/Grade.html":{},"classes/Subject.html":{},"classes/User.html":{}}}],["coremodule",{"_index":381,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["cors",{"_index":2859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["corsconfig",{"_index":2646,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["corsconfigkey",{"_index":2647,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["corsoptions",{"_index":2856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["count",{"_index":1896,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["course",{"_index":536,"title":{"classes/Course.html":{}},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Course.html":{},"classes/ExamTargetAdd1622378888497.html":{},"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/Subject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["course.entity",{"_index":2450,"title":{},"body":{"classes/Subject.html":{}}}],["course.id",{"_index":1899,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["course_id",{"_index":542,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["course`(`id",{"_index":562,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{}}}],["courseid",{"_index":2444,"title":{},"body":{"classes/Subject.html":{}}}],["coverage",{"_index":2624,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cp",{"_index":2809,"title":{},"body":{"index.html":{}}}],["cpf",{"_index":34,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Auth1619445806509.html":{},"classes/CreateUserDto.html":{},"interfaces/IEntity.html":{},"classes/Professor.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/Student.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["create",{"_index":171,"title":{},"body":{"controllers/AnswerController.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionsDto.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/ExamTarget1622326106015.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/UpdateAnswerDto.html":{},"classes/UpdateExamDto.html":{},"classes/UpdateQuestionDto.html":{},"classes/UpdateQuestionGroupDto.html":{},"miscellaneous/enumerations.html":{}}}],["create(@body",{"_index":1102,"title":{},"body":{"controllers/ExamController.html":{}}}],["create(createexamdto",{"_index":1082,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["create(createquestiongroupdto",{"_index":2212,"title":{},"body":{"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{}}}],["create(examid",{"_index":174,"title":{},"body":{"controllers/AnswerController.html":{}}}],["createagreement",{"_index":965,"title":{},"body":{"controllers/ExamAgreementController.html":{},"injectables/ExamAgreementService.html":{}}}],["createagreement(createagreementdto",{"_index":967,"title":{},"body":{"controllers/ExamAgreementController.html":{},"injectables/ExamAgreementService.html":{}}}],["createagreementdto",{"_index":970,"title":{},"body":{"controllers/ExamAgreementController.html":{},"injectables/ExamAgreementService.html":{}}}],["createanswerdto",{"_index":177,"title":{"classes/CreateAnswerDto.html":{}},"body":{"controllers/AnswerController.html":{},"injectables/AnswerService.html":{},"classes/CreateAnswerDto.html":{},"classes/UpdateAnswerDto.html":{},"coverage.html":{}}}],["createanswerdtos",{"_index":176,"title":{},"body":{"controllers/AnswerController.html":{},"injectables/AnswerService.html":{}}}],["createanswerdtos.map((dto",{"_index":332,"title":{},"body":{"injectables/AnswerService.html":{}}}],["createanswerdtos.map(async",{"_index":342,"title":{},"body":{"injectables/AnswerService.html":{}}}],["createauth",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["createauth(createauthdto",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["createauthdto",{"_index":481,"title":{"classes/CreateAuthDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["createauthdto.login",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["createbatch",{"_index":300,"title":{},"body":{"injectables/AnswerService.html":{}}}],["createbatch(createanswerdtos",{"_index":308,"title":{},"body":{"injectables/AnswerService.html":{}}}],["createcsv",{"_index":1456,"title":{},"body":{"injectables/ExportationService.html":{}}}],["createcsv(csvlines",{"_index":1461,"title":{},"body":{"injectables/ExportationService.html":{}}}],["created_at",{"_index":137,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/ExamTarget1622326106015.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{}}}],["createdat",{"_index":79,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/Auth.html":{},"classes/Course.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamTarget.html":{},"classes/FFEntity.html":{},"classes/Grade.html":{},"classes/Period.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/TimestampEntity.html":{},"classes/User.html":{}}}],["createdatecolumn",{"_index":101,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/Auth.html":{},"classes/Course.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamTarget.html":{},"classes/FFEntity.html":{},"classes/Grade.html":{},"classes/Period.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/TimestampEntity.html":{},"classes/User.html":{}}}],["createdto",{"_index":347,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/FirebaseAuthService.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["createexamagreementdto",{"_index":715,"title":{"classes/CreateExamAgreementDto.html":{}},"body":{"classes/CreateExamAgreementDto.html":{},"controllers/ExamAgreementController.html":{},"injectables/ExamAgreementService.html":{},"coverage.html":{}}}],["createexamdto",{"_index":727,"title":{"classes/CreateExamDto.html":{}},"body":{"classes/CreateExamDto.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/UpdateExamDto.html":{},"coverage.html":{}}}],["createforuser",{"_index":615,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["createforuser(user",{"_index":616,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["createparamdecorator",{"_index":2900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquestion",{"_index":749,"title":{"classes/CreateQuestion.html":{}},"body":{"classes/CreateQuestion.html":{},"classes/CreateQuestionsDto.html":{},"controllers/QuestionController.html":{},"injectables/QuestionService.html":{},"coverage.html":{}}}],["createquestion(createquestiondto",{"_index":2130,"title":{},"body":{"controllers/QuestionController.html":{},"injectables/QuestionService.html":{}}}],["createquestiondto",{"_index":757,"title":{"classes/CreateQuestionDto.html":{}},"body":{"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionsDto.html":{},"controllers/QuestionController.html":{},"injectables/QuestionService.html":{},"classes/UpdateQuestionDto.html":{},"coverage.html":{}}}],["createquestiongroupdto",{"_index":791,"title":{"classes/CreateQuestionGroupDto.html":{}},"body":{"classes/CreateQuestionGroupDto.html":{},"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{},"classes/UpdateQuestionGroupDto.html":{},"coverage.html":{}}}],["createquestiongroupdto.examid",{"_index":2301,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["createquestions",{"_index":2127,"title":{},"body":{"controllers/QuestionController.html":{},"injectables/QuestionService.html":{}}}],["createquestions(groupid",{"_index":2132,"title":{},"body":{"controllers/QuestionController.html":{},"injectables/QuestionService.html":{}}}],["createquestionsdto",{"_index":760,"title":{"classes/CreateQuestionsDto.html":{}},"body":{"classes/CreateQuestion.html":{},"classes/CreateQuestionsDto.html":{},"controllers/QuestionController.html":{},"injectables/QuestionService.html":{},"coverage.html":{}}}],["createquestionsdto.questions.map((dto",{"_index":2378,"title":{},"body":{"injectables/QuestionService.html":{}}}],["createstudent",{"_index":2100,"title":{},"body":{"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["createstudent(createdto",{"_index":2102,"title":{},"body":{"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["createtransport",{"_index":1913,"title":{},"body":{"modules/InfraModule.html":{}}}],["createtransport(configservice.get('nodemailer",{"_index":1927,"title":{},"body":{"modules/InfraModule.html":{}}}],["createuser",{"_index":1638,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createuser(@body",{"_index":2549,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(createdto",{"_index":1644,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["createuser(createuserdto",{"_index":2539,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["createuserbytype",{"_index":2576,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserbytype(createuserdto",{"_index":2584,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto",{"_index":800,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createuserdto.enrollment",{"_index":2604,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.password",{"_index":2605,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.type",{"_index":2611,"title":{},"body":{"injectables/UserService.html":{}}}],["credential",{"_index":1580,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["crypto",{"_index":1747,"title":{},"body":{"injectables/FirebaseUploader.html":{}}}],["csv",{"_index":1469,"title":{},"body":{"injectables/ExportationService.html":{},"dependencies.html":{}}}],["csvline",{"_index":819,"title":{"interfaces/CsvLine.html":{}},"body":{"interfaces/CsvLine.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"coverage.html":{}}}],["csvline.anonymous",{"_index":1447,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["csvline.group_title",{"_index":1442,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["csvline.is_personal",{"_index":1444,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["csvline.observation",{"_index":1453,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["csvline.question_statement",{"_index":1446,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["csvline.score",{"_index":1451,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["csvline.subject_title",{"_index":1443,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["csvline.unique_code",{"_index":1454,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["csvline.user_enrollment",{"_index":1449,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["csvlinerow",{"_index":834,"title":{"interfaces/CsvLineRow.html":{}},"body":{"interfaces/CsvLineRow.html":{},"injectables/ExportationRepository.html":{},"coverage.html":{}}}],["csvlines",{"_index":1405,"title":{},"body":{"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{}}}],["csvlines.length",{"_index":1485,"title":{},"body":{"injectables/ExportationService.html":{}}}],["csvlines.map((csvline",{"_index":1441,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["ctx",{"_index":1841,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"miscellaneous/variables.html":{}}}],["ctx.getrequest",{"_index":1844,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["ctx.getresponse",{"_index":1843,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":2902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current_timestamp(6",{"_index":139,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/ExamTarget1622326106015.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{}}}],["customlogger",{"_index":848,"title":{"injectables/CustomLogger.html":{}},"body":{"injectables/CustomLogger.html":{},"injectables/ExamAgreementService.html":{},"modules/LoggerModule.html":{},"injectables/NodeMailerService.html":{},"coverage.html":{},"overview.html":{}}}],["código",{"_index":822,"title":{},"body":{"interfaces/CsvLine.html":{},"injectables/ExportationRepository.html":{},"injectables/SendEmailService.html":{}}}],["data",{"_index":1490,"title":{},"body":{"injectables/ExportationService.html":{},"injectables/FirebaseStorageService.html":{},"interfaces/FirebaseStorageUploadDto.html":{},"injectables/FirebaseUploader.html":{},"injectables/PayloadInterceptor.html":{}}}],["data.length",{"_index":1498,"title":{},"body":{"injectables/ExportationService.html":{}}}],["database",{"_index":1523,"title":{},"body":{"injectables/FirebaseAdmin.html":{},"miscellaneous/variables.html":{}}}],["database(url",{"_index":1541,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["database/migrations/*.{js,ts",{"_index":2877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseconfig",{"_index":2650,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["databaseconfigkey",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databaseurl",{"_index":1576,"title":{},"body":{"injectables/FirebaseAdmin.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseModuleOptions.html":{}}}],["date",{"_index":100,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/Auth.html":{},"classes/Course.html":{},"classes/CreateExamDto.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamRepository.html":{},"classes/ExamTarget.html":{},"injectables/ExportationService.html":{},"classes/FFEntity.html":{},"classes/Grade.html":{},"interfaces/IEntity.html":{},"classes/Period.html":{},"injectables/PeriodService.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/TimestampEntity.html":{},"classes/User.html":{},"dependencies.html":{}}}],["date().toisostring",{"_index":1848,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["datetime",{"_index":526,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"classes/Period.html":{}}}],["datetime(6",{"_index":138,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/ExamTarget1622326106015.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{}}}],["de",{"_index":826,"title":{},"body":{"interfaces/CsvLine.html":{},"injectables/ExportationRepository.html":{},"injectables/SendEmailService.html":{},"index.html":{}}}],["declarations",{"_index":261,"title":{},"body":{"modules/AnswerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuxiliaryModule.html":{},"modules/CaslModule.html":{},"modules/CoreModule.html":{},"modules/ExamModule.html":{},"modules/ExportationModule.html":{},"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{},"modules/InfraModule.html":{},"modules/LoggerModule.html":{},"modules/QuestionGroupModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decoded",{"_index":1631,"title":{},"body":{"interfaces/FirebaseAuthDecodedToken.html":{},"injectables/FirebaseAuthService.html":{},"coverage.html":{}}}],["decoded.email",{"_index":1664,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["decoded.email_verified",{"_index":1665,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["decoded.uid",{"_index":1663,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["decorators",{"_index":82,"title":{},"body":{"classes/Answer.html":{},"controllers/AnswerController.html":{},"classes/AnswerGrade.html":{},"injectables/AnswerService.html":{},"controllers/AppController.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/CopyQuestionGroupDto.html":{},"classes/Course.html":{},"classes/CreateAnswerDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/CreateUserDto.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementDto.html":{},"injectables/ExamAgreementService.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/ExamTarget.html":{},"controllers/ExamTargetController.html":{},"controllers/ExportationController.html":{},"classes/FFEntity.html":{},"classes/Grade.html":{},"classes/LoginDto.html":{},"classes/Period.html":{},"classes/Professor.html":{},"injectables/ProfessorService.html":{},"classes/Question.html":{},"controllers/QuestionController.html":{},"classes/QuestionFindDto.html":{},"classes/QuestionGroup.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"classes/TimestampEntity.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"controllers/UploadController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{}}}],["decoratos/get",{"_index":2544,"title":{},"body":{"controllers/UserController.html":{}}}],["default",{"_index":130,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateAnswerDto.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"injectables/ExamService.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"classes/ExamTitle1621036457247.html":{},"injectables/FirebaseUploader.html":{},"classes/GradeIndex1624560625346.html":{},"classes/HttpExceptionFilter.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/Student.html":{},"classes/User.html":{},"classes/UserEmail1625013724392.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["default_port",{"_index":2691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultagreementstatus",{"_index":1193,"title":{},"body":{"classes/ExamRepository.html":{}}}],["defaultname",{"_index":1887,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"classes/AnswerGrade.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"controllers/AppController.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CopyQuestionGroupDto.html":{},"classes/Course.html":{},"classes/CreateAnswerDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/CreateUserDto.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementDto.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"interfaces/ExamAgreementUser.html":{},"controllers/ExamController.html":{},"classes/ExamPersonalResult.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"controllers/ExamTargetController.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"classes/ExamTitle1621036457247.html":{},"controllers/ExportationController.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"classes/FFEntity.html":{},"classes/FindPersonalDto.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"injectables/FirebaseStorageService.html":{},"injectables/FirebaseUploader.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/Grade.html":{},"classes/GradeIndex1624560625346.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"classes/Period.html":{},"classes/PeriodIndex1624547816204.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Professor.html":{},"injectables/ProfessorService.html":{},"classes/Question.html":{},"controllers/QuestionController.html":{},"classes/QuestionFindDto.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"injectables/QuestionService.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/SeedAuxiliary1624412129413.html":{},"injectables/SendEmailService.html":{},"classes/SendMailDto.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"injectables/TemplateService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"controllers/UploadController.html":{},"classes/UploaderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserEmail1625013724392.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":66,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"injectables/AnswerService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/ExamAgreement1622332886234.html":{},"injectables/ExamAgreementService.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"injectables/FirebaseAdmin.html":{},"classes/PeriodIndex1624547816204.html":{},"controllers/QuestionController.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"injectables/QuestionService.html":{},"interfaces/SoftDeleteResult.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["delete(':id",{"_index":182,"title":{},"body":{"controllers/AnswerController.html":{},"controllers/ExamController.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{}}}],["delete(':id')@apiokresponse()@apinotfoundresponse",{"_index":2141,"title":{},"body":{"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{}}}],["deleted_at",{"_index":142,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/ExamTarget1622326106015.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{}}}],["deletedat",{"_index":80,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/Auth.html":{},"classes/Course.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamTarget.html":{},"classes/FFEntity.html":{},"classes/Grade.html":{},"classes/Period.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/TimestampEntity.html":{},"classes/User.html":{}}}],["deletedatecolumn",{"_index":104,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/Auth.html":{},"classes/Course.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamTarget.html":{},"classes/FFEntity.html":{},"classes/Grade.html":{},"classes/Period.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/TimestampEntity.html":{},"classes/User.html":{}}}],["deleteuser",{"_index":1639,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["deleteuser(uid",{"_index":1647,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["dependencies",{"_index":259,"title":{"dependencies.html":{}},"body":{"modules/AnswerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuxiliaryModule.html":{},"modules/CaslModule.html":{},"modules/CoreModule.html":{},"modules/ExamModule.html":{},"modules/ExportationModule.html":{},"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{},"modules/InfraModule.html":{},"modules/LoggerModule.html":{},"modules/QuestionGroupModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":524,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/CreateExamDto.html":{},"classes/Exam.html":{},"interfaces/SwaggerOptions.html":{},"miscellaneous/variables.html":{}}}],["detectsubjecttype",{"_index":652,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["development",{"_index":2795,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dfs",{"_index":1288,"title":{},"body":{"classes/ExamTargetNode.html":{}}}],["dfs(type",{"_index":1292,"title":{},"body":{"classes/ExamTargetNode.html":{}}}],["disciplina",{"_index":824,"title":{},"body":{"interfaces/CsvLine.html":{},"injectables/ExportationRepository.html":{}}}],["distinct",{"_index":1150,"title":{},"body":{"classes/ExamRepository.html":{},"injectables/ExportationRepository.html":{}}}],["distinct(true",{"_index":1176,"title":{},"body":{"classes/ExamRepository.html":{}}}],["docker",{"_index":2801,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":2625,"title":{},"body":{"coverage.html":{}}}],["dont",{"_index":1860,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["down",{"_index":14,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer1622421768424.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"classes/ExamTitle1621036457247.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/GradeIndex1624560625346.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/UserEmail1625013724392.html":{}}}],["down(queryrunner",{"_index":16,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer1622421768424.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"classes/ExamTitle1621036457247.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/GradeIndex1624560625346.html":{},"interfaces/IEntity.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/UserEmail1625013724392.html":{}}}],["drop",{"_index":164,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"classes/ExamTarget1622326106015.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/UserEmail1625013724392.html":{}}}],["dsn",{"_index":2930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto",{"_index":1208,"title":{},"body":{"injectables/ExamService.html":{},"injectables/QuestionService.html":{},"injectables/SendEmailService.html":{}}}],["dto.agreement",{"_index":2415,"title":{},"body":{"injectables/SendEmailService.html":{}}}],["dto.questionid",{"_index":333,"title":{},"body":{"injectables/AnswerService.html":{}}}],["dto.user.email",{"_index":2420,"title":{},"body":{"injectables/SendEmailService.html":{}}}],["dto/create",{"_index":209,"title":{},"body":{"controllers/AnswerController.html":{},"injectables/AnswerService.html":{}}}],["dto/update",{"_index":211,"title":{},"body":{"controllers/AnswerController.html":{},"injectables/AnswerService.html":{}}}],["dtos/auth.dto",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["dtos/copy",{"_index":2229,"title":{},"body":{"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{}}}],["dtos/create",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ExamAgreementController.html":{},"injectables/ExamAgreementService.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dtos/file",{"_index":1749,"title":{},"body":{"injectables/FirebaseUploader.html":{},"classes/UploaderService.html":{}}}],["dtos/find",{"_index":1171,"title":{},"body":{"classes/ExamRepository.html":{},"injectables/QuestionGroupService.html":{}}}],["dtos/firebase",{"_index":1719,"title":{},"body":{"injectables/FirebaseStorageService.html":{}}}],["dtos/login.dto",{"_index":438,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dtos/question",{"_index":2062,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{},"controllers/QuestionController.html":{},"injectables/QuestionService.html":{}}}],["dtos/reorder",{"_index":2155,"title":{},"body":{"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{}}}],["dtos/send",{"_index":1976,"title":{},"body":{"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"injectables/SendEmailService.html":{}}}],["dtos/update",{"_index":979,"title":{},"body":{"controllers/ExamAgreementController.html":{},"injectables/ExamAgreementService.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{}}}],["dtos/user.dto",{"_index":2599,"title":{},"body":{"injectables/UserService.html":{}}}],["duration",{"_index":2038,"title":{},"body":{"injectables/PeriodService.html":{}}}],["dynamicmodule",{"_index":1607,"title":{},"body":{"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{}}}],["e",{"_index":1048,"title":{},"body":{"injectables/ExamAgreementService.html":{},"injectables/UserService.html":{}}}],["ea",{"_index":1423,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["ea.anonymous",{"_index":1408,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["ea.deleted_at",{"_index":1438,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["ea.exam_id",{"_index":1406,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["ea.id",{"_index":1407,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["ea.observation",{"_index":1409,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["ea.user_id",{"_index":1426,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["ea.uuid",{"_index":1410,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["each",{"_index":741,"title":{},"body":{"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionsDto.html":{},"classes/ReorderQuestionGroupDto.html":{}}}],["el.id",{"_index":1187,"title":{},"body":{"classes/ExamRepository.html":{}}}],["ela",{"_index":782,"title":{},"body":{"classes/CreateQuestionDto.html":{}}}],["em",{"_index":2191,"title":{},"body":{"classes/QuestionGroup.html":{},"index.html":{}}}],["email",{"_index":1024,"title":{},"body":{"injectables/ExamAgreementService.html":{},"interfaces/ExamAgreementUser.html":{},"interfaces/FirebaseAuthDecodedToken.html":{},"injectables/FirebaseAuthService.html":{},"classes/Professor.html":{},"interfaces/SendAgreementEmailDto.html":{},"classes/Student.html":{},"classes/User.html":{},"classes/UserEmail1625013724392.html":{}}}],["email.dto",{"_index":2411,"title":{},"body":{"injectables/SendEmailService.html":{}}}],["email.dto.ts",{"_index":2405,"title":{},"body":{"interfaces/SendAgreementEmailDto.html":{},"coverage.html":{}}}],["email.service",{"_index":1029,"title":{},"body":{"injectables/ExamAgreementService.html":{},"modules/InfraModule.html":{}}}],["email.service.ts",{"_index":2406,"title":{},"body":{"injectables/SendEmailService.html":{},"coverage.html":{}}}],["email.service.ts:13",{"_index":2410,"title":{},"body":{"injectables/SendEmailService.html":{}}}],["email.service.ts:7",{"_index":2408,"title":{},"body":{"injectables/SendEmailService.html":{}}}],["emailverified",{"_index":1633,"title":{},"body":{"interfaces/FirebaseAuthDecodedToken.html":{},"injectables/FirebaseAuthService.html":{}}}],["emit",{"_index":1858,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["encoding",{"_index":1499,"title":{},"body":{"injectables/ExportationService.html":{},"interfaces/FileSendDto.html":{}}}],["end",{"_index":860,"title":{},"body":{"classes/Exam.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamRepository.html":{},"injectables/PeriodService.html":{}}}],["enda",{"_index":2040,"title":{},"body":{"injectables/PeriodService.html":{}}}],["endb",{"_index":2042,"title":{},"body":{"injectables/PeriodService.html":{}}}],["ended_at",{"_index":527,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"interfaces/IEntity.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["endedat",{"_index":730,"title":{},"body":{"classes/CreateExamDto.html":{},"classes/Exam.html":{},"classes/Period.html":{},"injectables/PeriodService.html":{}}}],["endofmonth",{"_index":1882,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["endofmonth(addmonths(new",{"_index":1893,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["engine=innodb",{"_index":151,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/ExamTarget1622326106015.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{}}}],["enrollment",{"_index":36,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Auth1619445806509.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/IEntity.html":{},"injectables/JwtStrategy.html":{},"classes/Professor.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/Student.html":{},"classes/User.html":{},"classes/UserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["enrollment.decorator",{"_index":815,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["enrollment.decorator.ts",{"_index":2670,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["enrollmentlength",{"_index":2668,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["entities",{"_index":2873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities/answer",{"_index":253,"title":{},"body":{"classes/AnswerGradeRepository.html":{}}}],["entities/answer.entity",{"_index":212,"title":{},"body":{"controllers/AnswerController.html":{},"classes/AnswerRepository.html":{},"injectables/AnswerService.html":{}}}],["entities/auth.entity",{"_index":470,"title":{},"body":{"classes/AuthRepository.html":{},"injectables/AuthService.html":{}}}],["entities/exam",{"_index":980,"title":{},"body":{"controllers/ExamAgreementController.html":{},"classes/ExamAgreementRepository.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamRepository.html":{},"classes/ExamTargetRepository.html":{},"injectables/ExamTargetService.html":{}}}],["entities/exam.entity",{"_index":1098,"title":{},"body":{"controllers/ExamController.html":{},"classes/ExamPersonalResult.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"interfaces/FindExamByUserDto.html":{}}}],["entities/grade.entity",{"_index":1794,"title":{},"body":{"classes/GradeRepository.html":{},"injectables/GradeService.html":{}}}],["entities/period.entity",{"_index":1795,"title":{},"body":{"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"classes/PeriodRepository.html":{},"injectables/PeriodService.html":{}}}],["entities/professor.entity",{"_index":1796,"title":{},"body":{"classes/GradeRepository.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{}}}],["entities/question",{"_index":2064,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupRepository.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{}}}],["entities/question.entity",{"_index":2156,"title":{},"body":{"controllers/QuestionController.html":{},"classes/QuestionRepository.html":{},"injectables/QuestionService.html":{}}}],["entities/student.entity",{"_index":1797,"title":{},"body":{"classes/GradeRepository.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{}}}],["entities/user.entity",{"_index":2545,"title":{},"body":{"controllers/UserController.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":114,"title":{},"body":{"classes/Answer.html":{},"classes/Auth.html":{},"classes/Course.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamTarget.html":{},"classes/Grade.html":{},"classes/Period.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/Subject.html":{},"classes/User.html":{}}}],["entity('answer",{"_index":120,"title":{},"body":{"classes/Answer.html":{}}}],["entity('auth",{"_index":416,"title":{},"body":{"classes/Auth.html":{}}}],["entity('course",{"_index":686,"title":{},"body":{"classes/Course.html":{}}}],["entity('exam",{"_index":892,"title":{},"body":{"classes/Exam.html":{}}}],["entity('exam_agreement",{"_index":939,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["entity('exam_target",{"_index":1242,"title":{},"body":{"classes/ExamTarget.html":{}}}],["entity('grade",{"_index":1781,"title":{},"body":{"classes/Grade.html":{}}}],["entity('period",{"_index":2011,"title":{},"body":{"classes/Period.html":{}}}],["entity('subject",{"_index":2451,"title":{},"body":{"classes/Subject.html":{}}}],["entity('user",{"_index":2534,"title":{},"body":{"classes/User.html":{}}}],["entity.{js,ts",{"_index":2875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entitylike",{"_index":1218,"title":{},"body":{"injectables/ExamService.html":{}}}],["entityrepository",{"_index":249,"title":{},"body":{"classes/AnswerGradeRepository.html":{},"classes/AnswerRepository.html":{},"classes/AuthRepository.html":{},"classes/ExamAgreementRepository.html":{},"classes/ExamRepository.html":{},"classes/ExamTargetRepository.html":{},"classes/GradeRepository.html":{},"classes/PeriodRepository.html":{},"classes/ProfessorRepository.html":{},"classes/QuestionGroupRepository.html":{},"classes/QuestionRepository.html":{},"classes/StudentRepository.html":{},"classes/UserRepository.html":{}}}],["entityrepository(answer",{"_index":287,"title":{},"body":{"classes/AnswerRepository.html":{}}}],["entityrepository(answergrade",{"_index":255,"title":{},"body":{"classes/AnswerGradeRepository.html":{}}}],["entityrepository(auth",{"_index":471,"title":{},"body":{"classes/AuthRepository.html":{}}}],["entityrepository(exam",{"_index":1173,"title":{},"body":{"classes/ExamRepository.html":{}}}],["entityrepository(examagreement",{"_index":999,"title":{},"body":{"classes/ExamAgreementRepository.html":{}}}],["entityrepository(examtarget",{"_index":1317,"title":{},"body":{"classes/ExamTargetRepository.html":{}}}],["entityrepository(grade",{"_index":1799,"title":{},"body":{"classes/GradeRepository.html":{}}}],["entityrepository(period",{"_index":2021,"title":{},"body":{"classes/PeriodRepository.html":{}}}],["entityrepository(professor",{"_index":2098,"title":{},"body":{"classes/ProfessorRepository.html":{}}}],["entityrepository(question",{"_index":2352,"title":{},"body":{"classes/QuestionRepository.html":{}}}],["entityrepository(questiongroup",{"_index":2271,"title":{},"body":{"classes/QuestionGroupRepository.html":{}}}],["entityrepository(student",{"_index":2436,"title":{},"body":{"classes/StudentRepository.html":{}}}],["entityrepository(user",{"_index":2571,"title":{},"body":{"classes/UserRepository.html":{}}}],["enum",{"_index":95,"title":{},"body":{"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"classes/AnswerGrade.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamTarget.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"classes/Professor.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/Student.html":{},"classes/User.html":{}}}],["enum/user",{"_index":816,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"interfaces/UserResult.html":{},"injectables/UserService.html":{}}}],["enumerations",{"_index":2749,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/answer",{"_index":118,"title":{},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/CreateAnswerDto.html":{}}}],["enums/casl",{"_index":629,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["enums/exam",{"_index":746,"title":{},"body":{"classes/CreateExamDto.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget.html":{},"controllers/ExamTargetController.html":{},"interfaces/ExamTargetManagerDto.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"interfaces/FindExamByUserDto.html":{}}}],["enums/exportation",{"_index":1470,"title":{},"body":{"injectables/ExportationService.html":{}}}],["env",{"_index":52,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["env.example",{"_index":2808,"title":{},"body":{"index.html":{}}}],["envelope",{"_index":1986,"title":{},"body":{"injectables/NodeMailerService.html":{}}}],["environment",{"_index":2805,"title":{},"body":{"index.html":{}}}],["err",{"_index":1666,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["error",{"_index":1839,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"miscellaneous/variables.html":{}}}],["error('admin_password",{"_index":51,"title":{},"body":{"classes/AdminUser1620299822480.html":{}}}],["error('method",{"_index":1582,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["error('needs",{"_index":2897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["essa",{"_index":779,"title":{},"body":{"classes/CreateQuestionDto.html":{}}}],["essas",{"_index":2189,"title":{},"body":{"classes/QuestionGroup.html":{}}}],["esses",{"_index":2798,"title":{},"body":{"index.html":{}}}],["estudante",{"_index":2934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["et",{"_index":1154,"title":{},"body":{"classes/ExamRepository.html":{}}}],["et.exam_id",{"_index":1156,"title":{},"body":{"classes/ExamRepository.html":{}}}],["et.exam_target_id",{"_index":1159,"title":{},"body":{"classes/ExamRepository.html":{}}}],["ex",{"_index":1847,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["ex.body",{"_index":1875,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["ex.message",{"_index":1872,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["ex.name",{"_index":1856,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["ex.stack",{"_index":1854,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["exam",{"_index":522,"title":{"classes/Exam.html":{}},"body":{"classes/Auxiliary1620477175799.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateExamAgreementDto.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"controllers/ExamAgreementController.html":{},"injectables/ExamAgreementService.html":{},"controllers/ExamController.html":{},"classes/ExamPersonalResult.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"controllers/ExamTargetController.html":{},"classes/ExamTitle1621036457247.html":{},"interfaces/FindExamByUserDto.html":{},"classes/Period.html":{},"classes/PeriodIndex1624547816204.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"injectables/QuestionGroupService.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exam.constants",{"_index":1216,"title":{},"body":{"injectables/ExamService.html":{}}}],["exam.created_at",{"_index":1164,"title":{},"body":{"classes/ExamRepository.html":{}}}],["exam.deleted_at",{"_index":1165,"title":{},"body":{"classes/ExamRepository.html":{}}}],["exam.dto",{"_index":1097,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/UpdateExamDto.html":{}}}],["exam.dto.ts",{"_index":728,"title":{},"body":{"classes/CreateExamDto.html":{},"classes/UpdateExamDto.html":{},"coverage.html":{}}}],["exam.dto.ts:16",{"_index":743,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["exam.dto.ts:20",{"_index":735,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["exam.dto.ts:24",{"_index":738,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["exam.dto.ts:28",{"_index":737,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["exam.dto.ts:32",{"_index":734,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["exam.dto.ts:37",{"_index":742,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["exam.endedat",{"_index":1183,"title":{},"body":{"classes/ExamRepository.html":{}}}],["exam.entity",{"_index":933,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["exam.id",{"_index":1155,"title":{},"body":{"classes/ExamRepository.html":{}}}],["exam.period",{"_index":1226,"title":{},"body":{"injectables/ExamService.html":{},"classes/Period.html":{},"injectables/PersonalQuestionGroup.html":{}}}],["exam.service",{"_index":1033,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["exam.startedat",{"_index":1182,"title":{},"body":{"classes/ExamRepository.html":{}}}],["exam.status",{"_index":1163,"title":{},"body":{"classes/ExamRepository.html":{}}}],["exam.targets",{"_index":1222,"title":{},"body":{"injectables/ExamService.html":{}}}],["exam.ts",{"_index":906,"title":{},"body":{"classes/Exam1620478273991.html":{},"coverage.html":{}}}],["exam.ts:10",{"_index":908,"title":{},"body":{"classes/Exam1620478273991.html":{}}}],["exam.ts:4",{"_index":907,"title":{},"body":{"classes/Exam1620478273991.html":{}}}],["exam.ts:6",{"_index":909,"title":{},"body":{"classes/Exam1620478273991.html":{}}}],["exam/entities/exam",{"_index":626,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["exam/entities/exam.entity",{"_index":625,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["exam/exam.module",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"modules/QuestionGroupModule.html":{}}}],["exam1620478273991",{"_index":904,"title":{"classes/Exam1620478273991.html":{}},"body":{"classes/Exam1620478273991.html":{},"coverage.html":{}}}],["exam_agreement",{"_index":545,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"injectables/ExportationRepository.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{}}}],["exam_agreement_id",{"_index":145,"title":{},"body":{"classes/Answer1622421768424.html":{},"injectables/ExportationRepository.html":{}}}],["exam_agreement`(`id",{"_index":158,"title":{},"body":{"classes/Answer1622421768424.html":{}}}],["exam_id",{"_index":552,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamTarget1622326106015.html":{},"injectables/ExportationRepository.html":{},"classes/GradeIndex1624560625346.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{}}}],["exam_not_found",{"_index":1215,"title":{},"body":{"injectables/ExamService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exam_period",{"_index":1195,"title":{},"body":{"classes/ExamRepository.html":{}}}],["exam_target",{"_index":1158,"title":{},"body":{"classes/ExamRepository.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{}}}],["exam_target_id",{"_index":1253,"title":{},"body":{"classes/ExamTarget1622326106015.html":{}}}],["exam_target`(`id",{"_index":1258,"title":{},"body":{"classes/ExamTarget1622326106015.html":{}}}],["exam_targets_exam_target",{"_index":1153,"title":{},"body":{"classes/ExamRepository.html":{},"classes/ExamTarget1622326106015.html":{}}}],["exam`(`id",{"_index":558,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamTarget1622326106015.html":{}}}],["examagreement",{"_index":74,"title":{"classes/ExamAgreement.html":{}},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"injectables/AnswerService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementRepository.html":{},"injectables/ExamAgreementService.html":{},"classes/Professor.html":{},"interfaces/SendAgreementEmailDto.html":{},"classes/Student.html":{},"classes/User.html":{},"coverage.html":{}}}],["examagreement.ts",{"_index":949,"title":{},"body":{"classes/ExamAgreement1622332886234.html":{},"coverage.html":{}}}],["examagreement.ts:21",{"_index":951,"title":{},"body":{"classes/ExamAgreement1622332886234.html":{}}}],["examagreement.ts:4",{"_index":950,"title":{},"body":{"classes/ExamAgreement1622332886234.html":{}}}],["examagreement.ts:6",{"_index":952,"title":{},"body":{"classes/ExamAgreement1622332886234.html":{}}}],["examagreement1622332886234",{"_index":947,"title":{"classes/ExamAgreement1622332886234.html":{}},"body":{"classes/ExamAgreement1622332886234.html":{},"coverage.html":{}}}],["examagreementanonymousdefault.ts",{"_index":958,"title":{},"body":{"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"coverage.html":{}}}],["examagreementanonymousdefault.ts:13",{"_index":960,"title":{},"body":{"classes/ExamAgreementAnonymousDefault1622334780336.html":{}}}],["examagreementanonymousdefault.ts:5",{"_index":959,"title":{},"body":{"classes/ExamAgreementAnonymousDefault1622334780336.html":{}}}],["examagreementanonymousdefault.ts:7",{"_index":961,"title":{},"body":{"classes/ExamAgreementAnonymousDefault1622334780336.html":{}}}],["examagreementanonymousdefault1622334780336",{"_index":956,"title":{"classes/ExamAgreementAnonymousDefault1622334780336.html":{}},"body":{"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"coverage.html":{}}}],["examagreementcontroller",{"_index":962,"title":{"controllers/ExamAgreementController.html":{}},"body":{"controllers/ExamAgreementController.html":{},"modules/ExamModule.html":{},"coverage.html":{}}}],["examagreementdto",{"_index":724,"title":{"classes/ExamAgreementDto.html":{}},"body":{"classes/CreateExamAgreementDto.html":{},"classes/ExamAgreementDto.html":{},"coverage.html":{}}}],["examagreementid",{"_index":75,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{}}}],["examagreementnotfinished",{"_index":651,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["examagreementobservation.ts",{"_index":992,"title":{},"body":{"classes/ExamAgreementObservation1622417032753.html":{},"coverage.html":{}}}],["examagreementobservation.ts:13",{"_index":994,"title":{},"body":{"classes/ExamAgreementObservation1622417032753.html":{}}}],["examagreementobservation.ts:5",{"_index":993,"title":{},"body":{"classes/ExamAgreementObservation1622417032753.html":{}}}],["examagreementobservation.ts:7",{"_index":995,"title":{},"body":{"classes/ExamAgreementObservation1622417032753.html":{}}}],["examagreementobservation1622417032753",{"_index":990,"title":{"classes/ExamAgreementObservation1622417032753.html":{}},"body":{"classes/ExamAgreementObservation1622417032753.html":{},"coverage.html":{}}}],["examagreementrepository",{"_index":996,"title":{"classes/ExamAgreementRepository.html":{}},"body":{"classes/ExamAgreementRepository.html":{},"injectables/ExamAgreementService.html":{},"modules/ExamModule.html":{},"coverage.html":{}}}],["examagreements",{"_index":2084,"title":{},"body":{"classes/Professor.html":{},"classes/Student.html":{},"classes/User.html":{}}}],["examagreementservice",{"_index":306,"title":{"injectables/ExamAgreementService.html":{}},"body":{"injectables/AnswerService.html":{},"controllers/ExamAgreementController.html":{},"injectables/ExamAgreementService.html":{},"modules/ExamModule.html":{},"coverage.html":{},"overview.html":{}}}],["examagreementstatus",{"_index":918,"title":{},"body":{"classes/ExamAgreement.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"miscellaneous/enumerations.html":{}}}],["examagreementstatus.finished",{"_index":942,"title":{},"body":{"classes/ExamAgreement.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{}}}],["examagreementstatus.started",{"_index":940,"title":{},"body":{"classes/ExamAgreement.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{}}}],["examagreementuniquecode.ts",{"_index":1064,"title":{},"body":{"classes/ExamAgreementUniqueCode1625001091462.html":{},"coverage.html":{}}}],["examagreementuniquecode.ts:20",{"_index":1067,"title":{},"body":{"classes/ExamAgreementUniqueCode1625001091462.html":{}}}],["examagreementuniquecode.ts:6",{"_index":1066,"title":{},"body":{"classes/ExamAgreementUniqueCode1625001091462.html":{}}}],["examagreementuniquecode.ts:8",{"_index":1068,"title":{},"body":{"classes/ExamAgreementUniqueCode1625001091462.html":{}}}],["examagreementuniquecode1625001091462",{"_index":1062,"title":{"classes/ExamAgreementUniqueCode1625001091462.html":{}},"body":{"classes/ExamAgreementUniqueCode1625001091462.html":{},"coverage.html":{}}}],["examagreementuniquecodesendedat.ts",{"_index":1072,"title":{},"body":{"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"coverage.html":{}}}],["examagreementuniquecodesendedat.ts:14",{"_index":1074,"title":{},"body":{"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{}}}],["examagreementuniquecodesendedat.ts:6",{"_index":1073,"title":{},"body":{"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{}}}],["examagreementuniquecodesendedat.ts:8",{"_index":1075,"title":{},"body":{"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{}}}],["examagreementuniquecodesendedat1625002603968",{"_index":1070,"title":{"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{}},"body":{"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"coverage.html":{}}}],["examagreementuser",{"_index":968,"title":{"interfaces/ExamAgreementUser.html":{}},"body":{"controllers/ExamAgreementController.html":{},"injectables/ExamAgreementService.html":{},"interfaces/ExamAgreementUser.html":{},"coverage.html":{}}}],["examcontroller",{"_index":1079,"title":{"controllers/ExamController.html":{}},"body":{"controllers/ExamController.html":{},"modules/ExamModule.html":{},"coverage.html":{}}}],["examid",{"_index":180,"title":{},"body":{"controllers/AnswerController.html":{},"interfaces/BatchUser.html":{},"classes/CopyQuestionGroupDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreementDto.html":{},"injectables/ExamAgreementService.html":{},"controllers/ExportationController.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"classes/FindPersonalDto.html":{},"classes/QuestionGroup.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"injectables/QuestionGroupService.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{}}}],["exammodule",{"_index":268,"title":{"modules/ExamModule.html":{}},"body":{"modules/AnswerModule.html":{},"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/QuestionGroupModule.html":{},"modules.html":{},"overview.html":{}}}],["exampersonalresult",{"_index":1091,"title":{"classes/ExamPersonalResult.html":{}},"body":{"controllers/ExamController.html":{},"classes/ExamPersonalResult.html":{},"injectables/ExamService.html":{},"coverage.html":{}}}],["example",{"_index":1278,"title":{},"body":{"controllers/ExamTargetController.html":{}}}],["examrepository",{"_index":1122,"title":{"classes/ExamRepository.html":{}},"body":{"modules/ExamModule.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"coverage.html":{}}}],["exams",{"_index":2005,"title":{},"body":{"classes/Period.html":{}}}],["examservice",{"_index":1007,"title":{"injectables/ExamService.html":{}},"body":{"injectables/ExamAgreementService.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"injectables/QuestionGroupService.html":{},"coverage.html":{},"overview.html":{}}}],["examservice.relations",{"_index":1229,"title":{},"body":{"injectables/ExamService.html":{}}}],["examstatus",{"_index":871,"title":{},"body":{"classes/Exam.html":{},"classes/ExamRepository.html":{},"miscellaneous/enumerations.html":{}}}],["examstatus.active",{"_index":1180,"title":{},"body":{"classes/ExamRepository.html":{}}}],["examtarget",{"_index":873,"title":{"classes/ExamTarget.html":{}},"body":{"classes/Exam.html":{},"classes/ExamRepository.html":{},"classes/ExamTarget.html":{},"classes/ExamTargetRepository.html":{},"injectables/ExamTargetService.html":{},"coverage.html":{}}}],["examtarget.ts",{"_index":1245,"title":{},"body":{"classes/ExamTarget1622326106015.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["examtarget.ts:30",{"_index":1247,"title":{},"body":{"classes/ExamTarget1622326106015.html":{}}}],["examtarget.ts:6",{"_index":1246,"title":{},"body":{"classes/ExamTarget1622326106015.html":{}}}],["examtarget.ts:8",{"_index":1248,"title":{},"body":{"classes/ExamTarget1622326106015.html":{}}}],["examtarget1622326106015",{"_index":1243,"title":{"classes/ExamTarget1622326106015.html":{}},"body":{"classes/ExamTarget1622326106015.html":{},"coverage.html":{}}}],["examtargetadd.ts",{"_index":1261,"title":{},"body":{"classes/ExamTargetAdd1622378888497.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["examtargetadd.ts:21",{"_index":1263,"title":{},"body":{"classes/ExamTargetAdd1622378888497.html":{}}}],["examtargetadd.ts:6",{"_index":1262,"title":{},"body":{"classes/ExamTargetAdd1622378888497.html":{}}}],["examtargetadd.ts:8",{"_index":1264,"title":{},"body":{"classes/ExamTargetAdd1622378888497.html":{}}}],["examtargetadd1622378888497",{"_index":1259,"title":{"classes/ExamTargetAdd1622378888497.html":{}},"body":{"classes/ExamTargetAdd1622378888497.html":{},"coverage.html":{}}}],["examtargetcontroller",{"_index":1120,"title":{"controllers/ExamTargetController.html":{}},"body":{"modules/ExamModule.html":{},"controllers/ExamTargetController.html":{},"coverage.html":{}}}],["examtargetmanagerdto",{"_index":1283,"title":{"interfaces/ExamTargetManagerDto.html":{}},"body":{"interfaces/ExamTargetManagerDto.html":{},"coverage.html":{}}}],["examtargetnode",{"_index":1285,"title":{"classes/ExamTargetNode.html":{}},"body":{"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"injectables/ExamTargetTree.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["examtargetnodefactory",{"_index":1116,"title":{"injectables/ExamTargetNodeFactory.html":{}},"body":{"modules/ExamModule.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"injectables/ExamTargetTree.html":{},"coverage.html":{},"overview.html":{}}}],["examtargetnodeschema",{"_index":1308,"title":{"interfaces/ExamTargetNodeSchema.html":{}},"body":{"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"coverage.html":{}}}],["examtargetrepository",{"_index":1124,"title":{"classes/ExamTargetRepository.html":{}},"body":{"modules/ExamModule.html":{},"classes/ExamTargetRepository.html":{},"injectables/ExamTargetService.html":{},"coverage.html":{}}}],["examtargetservice",{"_index":1117,"title":{"injectables/ExamTargetService.html":{}},"body":{"modules/ExamModule.html":{},"injectables/ExamService.html":{},"controllers/ExamTargetController.html":{},"injectables/ExamTargetService.html":{},"coverage.html":{},"overview.html":{}}}],["examtargettree",{"_index":1118,"title":{"injectables/ExamTargetTree.html":{}},"body":{"modules/ExamModule.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"coverage.html":{},"overview.html":{}}}],["examtargettype",{"_index":739,"title":{},"body":{"classes/CreateExamDto.html":{},"classes/ExamTarget.html":{},"controllers/ExamTargetController.html":{},"interfaces/ExamTargetManagerDto.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"interfaces/FindExamByUserDto.html":{},"miscellaneous/enumerations.html":{}}}],["examtargettype.course",{"_index":1355,"title":{},"body":{"injectables/ExamTargetTree.html":{}}}],["examtargettype.grade",{"_index":1356,"title":{},"body":{"injectables/ExamTargetTree.html":{}}}],["examtargettype.professor",{"_index":1357,"title":{},"body":{"injectables/ExamTargetTree.html":{}}}],["examtargettype.student",{"_index":1358,"title":{},"body":{"injectables/ExamTargetTree.html":{}}}],["examtitle.ts",{"_index":1363,"title":{},"body":{"classes/ExamTitle1621036457247.html":{},"coverage.html":{}}}],["examtitle.ts:10",{"_index":1365,"title":{},"body":{"classes/ExamTitle1621036457247.html":{}}}],["examtitle.ts:4",{"_index":1364,"title":{},"body":{"classes/ExamTitle1621036457247.html":{}}}],["examtitle.ts:6",{"_index":1366,"title":{},"body":{"classes/ExamTitle1621036457247.html":{}}}],["examtitle1621036457247",{"_index":1361,"title":{"classes/ExamTitle1621036457247.html":{}},"body":{"classes/ExamTitle1621036457247.html":{},"coverage.html":{}}}],["examuser",{"_index":175,"title":{"interfaces/ExamUser.html":{}},"body":{"controllers/AnswerController.html":{},"controllers/ExamAgreementController.html":{},"injectables/ExamAgreementService.html":{},"controllers/ExamController.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"controllers/ExamTargetController.html":{},"interfaces/ExamUser.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"coverage.html":{}}}],["exception",{"_index":1828,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter",{"_index":676,"title":{},"body":{"modules/CoreModule.html":{}}}],["exception.filter.ts",{"_index":1818,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"coverage.html":{}}}],["exception.filter.ts:31",{"_index":1821,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts:34",{"_index":1827,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getresponse",{"_index":1871,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["exception.getstatus",{"_index":1845,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["exception.initmessage",{"_index":1846,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["exception.message",{"_index":1850,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["exception.name",{"_index":1857,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["exception.stack",{"_index":1855,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["exceptionfilter",{"_index":1819,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["exceptions",{"_index":1859,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["exclude",{"_index":934,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["executioncontext",{"_index":1995,"title":{},"body":{"injectables/PayloadInterceptor.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":2909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":38,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"classes/AnswerGrade.html":{},"classes/AnswerGradeRepository.html":{},"modules/AnswerModule.html":{},"classes/AnswerRepository.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"modules/AuxiliaryModule.html":{},"interfaces/BatchUser.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"classes/CopyQuestionGroupDto.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CreateAnswerDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CsvLine.html":{},"interfaces/CsvLineRow.html":{},"injectables/CustomLogger.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementDto.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementRepository.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"interfaces/ExamAgreementUser.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"classes/ExamPersonalResult.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"controllers/ExamTargetController.html":{},"interfaces/ExamTargetManagerDto.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"classes/ExamTargetRepository.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"classes/ExamTitle1621036457247.html":{},"interfaces/ExamUser.html":{},"controllers/ExportationController.html":{},"modules/ExportationModule.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"classes/FFEntity.html":{},"interfaces/FileSendDto.html":{},"interfaces/FindExamByUserDto.html":{},"classes/FindPersonalDto.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseAuthDecodedToken.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptions.html":{},"injectables/FirebaseStorageService.html":{},"interfaces/FirebaseStorageUploadDto.html":{},"injectables/FirebaseUploader.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/Grade.html":{},"classes/GradeIndex1624560625346.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IEntity.html":{},"interfaces/IException.html":{},"modules/InfraModule.html":{},"injectables/JwtGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/LoggerModule.html":{},"classes/LoginDto.html":{},"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"classes/Period.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/PeriodRepository.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Professor.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/Question.html":{},"controllers/QuestionController.html":{},"classes/QuestionFindDto.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"modules/QuestionGroupModule.html":{},"classes/QuestionGroupRepository.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"interfaces/QuestionGroupUser.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/QuestionRepository.html":{},"injectables/QuestionService.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/SeedAuxiliary1624412129413.html":{},"interfaces/SendAgreementEmailDto.html":{},"injectables/SendEmailService.html":{},"classes/SendMailDto.html":{},"interfaces/SoftDeleteResult.html":{},"classes/Student.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"interfaces/SwaggerOptions.html":{},"injectables/TemplateService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateAnswerDto.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"classes/UpdateExamDto.html":{},"classes/UpdateQuestionDto.html":{},"classes/UpdateQuestionGroupDto.html":{},"controllers/UploadController.html":{},"classes/UploaderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserEmail1625013724392.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserResult.html":{},"injectables/UserService.html":{}}}],["exportation",{"_index":1478,"title":{},"body":{"injectables/ExportationService.html":{}}}],["exportation.controller",{"_index":1387,"title":{},"body":{"modules/ExportationModule.html":{}}}],["exportation.repository",{"_index":1388,"title":{},"body":{"modules/ExportationModule.html":{},"injectables/ExportationService.html":{}}}],["exportation.service",{"_index":1375,"title":{},"body":{"controllers/ExportationController.html":{},"modules/ExportationModule.html":{}}}],["exportation/exportation.module",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["exportationcontroller",{"_index":1368,"title":{"controllers/ExportationController.html":{}},"body":{"controllers/ExportationController.html":{},"modules/ExportationModule.html":{},"coverage.html":{}}}],["exportationmodule",{"_index":382,"title":{"modules/ExportationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExportationModule.html":{},"modules.html":{},"overview.html":{}}}],["exportationrepository",{"_index":1385,"title":{"injectables/ExportationRepository.html":{}},"body":{"modules/ExportationModule.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"coverage.html":{},"overview.html":{}}}],["exportationservice",{"_index":1374,"title":{"injectables/ExportationService.html":{}},"body":{"controllers/ExportationController.html":{},"modules/ExportationModule.html":{},"injectables/ExportationService.html":{},"coverage.html":{},"overview.html":{}}}],["exportationtype",{"_index":1465,"title":{},"body":{"injectables/ExportationService.html":{},"miscellaneous/enumerations.html":{}}}],["exportationtype.avaliacao",{"_index":1489,"title":{},"body":{"injectables/ExportationService.html":{}}}],["exportationtype}_${examid}_${fileprefix}_${filedate}.csv",{"_index":1479,"title":{},"body":{"injectables/ExportationService.html":{}}}],["exports",{"_index":264,"title":{},"body":{"modules/AnswerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuxiliaryModule.html":{},"modules/CaslModule.html":{},"modules/CoreModule.html":{},"modules/ExamModule.html":{},"modules/ExportationModule.html":{},"injectables/ExportationService.html":{},"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{},"modules/InfraModule.html":{},"modules/LoggerModule.html":{},"modules/QuestionGroupModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["exporttocsv",{"_index":1370,"title":{},"body":{"controllers/ExportationController.html":{},"injectables/ExportationService.html":{}}}],["exporttocsv(@param('examid",{"_index":1379,"title":{},"body":{"controllers/ExportationController.html":{}}}],["exporttocsv(examid",{"_index":1371,"title":{},"body":{"controllers/ExportationController.html":{},"injectables/ExportationService.html":{}}}],["expose",{"_index":935,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["express",{"_index":1831,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"controllers/UploadController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":2512,"title":{},"body":{"controllers/UploadController.html":{}}}],["extends",{"_index":71,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/AnswerGradeRepository.html":{},"classes/AnswerRepository.html":{},"classes/Auth.html":{},"classes/AuthRepository.html":{},"classes/Course.html":{},"classes/CreateAuthDto.html":{},"classes/CreateExamAgreementDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CustomLogger.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreementRepository.html":{},"classes/ExamRepository.html":{},"classes/ExamTarget.html":{},"classes/ExamTargetRepository.html":{},"classes/FFEntity.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseModuleOptions.html":{},"classes/Grade.html":{},"classes/GradeRepository.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Period.html":{},"classes/PeriodRepository.html":{},"classes/Professor.html":{},"classes/ProfessorRepository.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupRepository.html":{},"classes/QuestionRepository.html":{},"classes/Student.html":{},"classes/StudentRepository.html":{},"classes/Subject.html":{},"classes/TimestampEntity.html":{},"classes/UpdateAnswerDto.html":{},"classes/UpdateExamDto.html":{},"classes/UpdateQuestionDto.html":{},"classes/UpdateQuestionGroupDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{}}}],["extractjwt",{"_index":1944,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1953,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractsubjecttype",{"_index":621,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["extre",{"_index":2475,"title":{},"body":{"injectables/TemplateService.html":{}}}],["factories/casl",{"_index":659,"title":{},"body":{"modules/CaslModule.html":{}}}],["factories/exam",{"_index":1132,"title":{},"body":{"modules/ExamModule.html":{},"injectables/ExamTargetTree.html":{}}}],["faker",{"_index":1885,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{},"dependencies.html":{}}}],["faker.random.alpha",{"_index":1895,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["faker.random.alphanumeric(20",{"_index":1894,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["false",{"_index":863,"title":{},"body":{"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"injectables/QuestionGroupService.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":2784,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["fcm",{"_index":1674,"title":{},"body":{"injectables/FirebaseCloudMessagingService.html":{}}}],["ff",{"_index":2791,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["ff.uneb.br",{"_index":2908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffentity",{"_index":72,"title":{"classes/FFEntity.html":{}},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/Auth.html":{},"classes/Course.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamTarget.html":{},"classes/FFEntity.html":{},"classes/Grade.html":{},"classes/Period.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/User.html":{},"coverage.html":{}}}],["ffentity:10",{"_index":877,"title":{},"body":{"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamTarget.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/User.html":{}}}],["ffentity:13",{"_index":879,"title":{},"body":{"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamTarget.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/User.html":{}}}],["ffentity:16",{"_index":878,"title":{},"body":{"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamTarget.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/User.html":{}}}],["ffentity:6",{"_index":99,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/Auth.html":{},"classes/Course.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamTarget.html":{},"classes/Grade.html":{},"classes/Period.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"classes/AnswerGrade.html":{},"classes/AnswerGradeRepository.html":{},"modules/AnswerModule.html":{},"classes/AnswerRepository.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"modules/AuxiliaryModule.html":{},"interfaces/BatchUser.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"classes/CopyQuestionGroupDto.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CreateAnswerDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CsvLine.html":{},"interfaces/CsvLineRow.html":{},"injectables/CustomLogger.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementDto.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementRepository.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"interfaces/ExamAgreementUser.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"classes/ExamPersonalResult.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"controllers/ExamTargetController.html":{},"interfaces/ExamTargetManagerDto.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"classes/ExamTargetRepository.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"classes/ExamTitle1621036457247.html":{},"interfaces/ExamUser.html":{},"controllers/ExportationController.html":{},"modules/ExportationModule.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"classes/FFEntity.html":{},"interfaces/FileSendDto.html":{},"interfaces/FindExamByUserDto.html":{},"classes/FindPersonalDto.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseAuthDecodedToken.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptions.html":{},"injectables/FirebaseStorageService.html":{},"interfaces/FirebaseStorageUploadDto.html":{},"injectables/FirebaseUploader.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/Grade.html":{},"classes/GradeIndex1624560625346.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IEntity.html":{},"interfaces/IException.html":{},"modules/InfraModule.html":{},"injectables/JwtGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/LoggerModule.html":{},"classes/LoginDto.html":{},"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"classes/Period.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/PeriodRepository.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Professor.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/Question.html":{},"controllers/QuestionController.html":{},"classes/QuestionFindDto.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"modules/QuestionGroupModule.html":{},"classes/QuestionGroupRepository.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"interfaces/QuestionGroupUser.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/QuestionRepository.html":{},"injectables/QuestionService.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/SeedAuxiliary1624412129413.html":{},"interfaces/SendAgreementEmailDto.html":{},"injectables/SendEmailService.html":{},"classes/SendMailDto.html":{},"interfaces/SoftDeleteResult.html":{},"classes/Student.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"interfaces/SwaggerOptions.html":{},"injectables/TemplateService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateAnswerDto.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"classes/UpdateExamDto.html":{},"classes/UpdateQuestionDto.html":{},"classes/UpdateQuestionGroupDto.html":{},"controllers/UploadController.html":{},"classes/UploaderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserEmail1625013724392.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserResult.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["file.match(extre",{"_index":2480,"title":{},"body":{"injectables/TemplateService.html":{}}}],["file.publicurl",{"_index":1732,"title":{},"body":{"injectables/FirebaseStorageService.html":{}}}],["file.save(data",{"_index":1727,"title":{},"body":{"injectables/FirebaseStorageService.html":{}}}],["filedate",{"_index":1472,"title":{},"body":{"injectables/ExportationService.html":{}}}],["filedto",{"_index":1743,"title":{},"body":{"injectables/FirebaseUploader.html":{},"classes/UploaderService.html":{}}}],["filedto.buffer",{"_index":1757,"title":{},"body":{"injectables/FirebaseUploader.html":{}}}],["filedto.mimetype",{"_index":1758,"title":{},"body":{"injectables/FirebaseUploader.html":{}}}],["filedto.norandomname",{"_index":1752,"title":{},"body":{"injectables/FirebaseUploader.html":{}}}],["fileinterceptor",{"_index":2517,"title":{},"body":{"controllers/UploadController.html":{}}}],["filename",{"_index":1487,"title":{},"body":{"injectables/ExportationService.html":{}}}],["fileprefix",{"_index":1476,"title":{},"body":{"injectables/ExportationService.html":{}}}],["filesenddto",{"_index":1505,"title":{"interfaces/FileSendDto.html":{}},"body":{"interfaces/FileSendDto.html":{},"injectables/FirebaseUploader.html":{},"classes/UploaderService.html":{},"coverage.html":{}}}],["filter((file",{"_index":2479,"title":{},"body":{"injectables/TemplateService.html":{}}}],["filters/http",{"_index":675,"title":{},"body":{"modules/CoreModule.html":{}}}],["find",{"_index":2128,"title":{},"body":{"controllers/QuestionController.html":{},"injectables/QuestionService.html":{}}}],["find(@query",{"_index":2165,"title":{},"body":{"controllers/QuestionController.html":{}}}],["find(finddto",{"_index":2135,"title":{},"body":{"controllers/QuestionController.html":{},"injectables/QuestionService.html":{}}}],["find.dto",{"_index":2154,"title":{},"body":{"controllers/QuestionController.html":{},"injectables/QuestionService.html":{}}}],["find.dto.ts",{"_index":2172,"title":{},"body":{"classes/QuestionFindDto.html":{},"coverage.html":{}}}],["find.dto.ts:6",{"_index":2174,"title":{},"body":{"classes/QuestionFindDto.html":{}}}],["find.type",{"_index":1516,"title":{},"body":{"classes/FindPersonalDto.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{}}}],["find.type.ts",{"_index":2829,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["findall",{"_index":301,"title":{},"body":{"injectables/AnswerService.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"injectables/GradeService.html":{},"injectables/PeriodService.html":{},"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{}}}],["findauth",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["findauth(authdto",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["findbyids",{"_index":2355,"title":{},"body":{"injectables/QuestionService.html":{}}}],["findbyids(ids",{"_index":2364,"title":{},"body":{"injectables/QuestionService.html":{}}}],["findbytargets",{"_index":1144,"title":{},"body":{"classes/ExamRepository.html":{}}}],["findbytargets(undefined",{"_index":1147,"title":{},"body":{"classes/ExamRepository.html":{}}}],["findbyuser",{"_index":1145,"title":{},"body":{"classes/ExamRepository.html":{}}}],["findbyuser(user",{"_index":1166,"title":{},"body":{"classes/ExamRepository.html":{}}}],["findbyuserandperiod",{"_index":1791,"title":{},"body":{"classes/GradeRepository.html":{},"injectables/GradeService.html":{}}}],["findbyuserandperiod(user",{"_index":1792,"title":{},"body":{"classes/GradeRepository.html":{},"injectables/GradeService.html":{}}}],["finddto",{"_index":1017,"title":{},"body":{"injectables/ExamAgreementService.html":{},"controllers/QuestionController.html":{},"injectables/QuestionService.html":{}}}],["finddto.groupid",{"_index":2381,"title":{},"body":{"injectables/QuestionService.html":{}}}],["findexambyuserdto",{"_index":1148,"title":{"interfaces/FindExamByUserDto.html":{}},"body":{"classes/ExamRepository.html":{},"interfaces/FindExamByUserDto.html":{},"coverage.html":{}}}],["findone",{"_index":302,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/ExamAgreementService.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"injectables/ProfessorService.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"injectables/StudentService.html":{}}}],["findone(@param('id",{"_index":1108,"title":{},"body":{"controllers/ExamController.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{}}}],["findone(finddto",{"_index":1014,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["findone(id",{"_index":312,"title":{},"body":{"injectables/AnswerService.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{}}}],["findone(userdto",{"_index":2104,"title":{},"body":{"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["findpersonal",{"_index":1081,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{},"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{}}}],["findpersonal(@getuser",{"_index":1106,"title":{},"body":{"controllers/ExamController.html":{}}}],["findpersonal(examid",{"_index":2216,"title":{},"body":{"controllers/QuestionGroupController.html":{}}}],["findpersonal(undefined",{"_index":2281,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["findpersonal(user",{"_index":1089,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["findpersonaldto",{"_index":1509,"title":{"classes/FindPersonalDto.html":{}},"body":{"classes/FindPersonalDto.html":{},"injectables/QuestionGroupService.html":{},"coverage.html":{}}}],["findspecializeduser",{"_index":2577,"title":{},"body":{"injectables/UserService.html":{}}}],["findspecializeduser(userdto",{"_index":2586,"title":{},"body":{"injectables/UserService.html":{}}}],["finduser",{"_index":2578,"title":{},"body":{"injectables/UserService.html":{}}}],["finduser(userdto",{"_index":2588,"title":{},"body":{"injectables/UserService.html":{}}}],["finished",{"_index":579,"title":{},"body":{"classes/Auxiliary1624416663574.html":{},"miscellaneous/enumerations.html":{}}}],["finishexam",{"_index":1002,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["finishexam(agreement",{"_index":1018,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["firebase",{"_index":1570,"title":{},"body":{"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptions.html":{},"injectables/FirebaseStorageService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["firebase.app.app",{"_index":1565,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["firebase.appcheck.appcheck",{"_index":1538,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["firebase.appoptions",{"_index":1585,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["firebase.auth.auth",{"_index":1540,"title":{},"body":{"injectables/FirebaseAdmin.html":{},"injectables/FirebaseAuthService.html":{}}}],["firebase.auth.createrequest",{"_index":1645,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["firebase.auth.updaterequest",{"_index":1653,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["firebase.credential.cert(options.cert",{"_index":1581,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["firebase.database.database",{"_index":1545,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["firebase.firestore.collectionreference",{"_index":2831,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["firebase.firestore.firestore",{"_index":1548,"title":{},"body":{"injectables/FirebaseAdmin.html":{},"injectables/FirebaseFirestoreService.html":{}}}],["firebase.initializeapp",{"_index":1575,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["firebase.installations.installations",{"_index":1550,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["firebase.instanceid.instanceid",{"_index":1552,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["firebase.machinelearning.machinelearning",{"_index":1554,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["firebase.messaging.messaging",{"_index":1556,"title":{},"body":{"injectables/FirebaseAdmin.html":{},"injectables/FirebaseCloudMessagingService.html":{}}}],["firebase.messaging.messagingoptions",{"_index":1680,"title":{},"body":{"injectables/FirebaseCloudMessagingService.html":{}}}],["firebase.messaging.messagingpayload",{"_index":1679,"title":{},"body":{"injectables/FirebaseCloudMessagingService.html":{}}}],["firebase.projectmanagement.projectmanagement",{"_index":1558,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["firebase.remoteconfig.remoteconfig",{"_index":1560,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["firebase.securityrules.securityrules",{"_index":1562,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["firebase.serviceaccount",{"_index":1628,"title":{},"body":{"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseModuleOptions.html":{}}}],["firebase.storage.storage",{"_index":1564,"title":{},"body":{"injectables/FirebaseAdmin.html":{},"injectables/FirebaseStorageService.html":{}}}],["firebase_admin",{"_index":2683,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["firebase_bucket",{"_index":2898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebase_options",{"_index":1571,"title":{},"body":{"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["firebaseadmin",{"_index":1517,"title":{"injectables/FirebaseAdmin.html":{}},"body":{"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"injectables/FirebaseStorageService.html":{},"coverage.html":{},"overview.html":{}}}],["firebaseadmin.auth",{"_index":1661,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["firebaseadmin.firestore",{"_index":1696,"title":{},"body":{"injectables/FirebaseFirestoreService.html":{}}}],["firebaseadmin.messaging",{"_index":1683,"title":{},"body":{"injectables/FirebaseCloudMessagingService.html":{}}}],["firebaseadmin.storage",{"_index":1722,"title":{},"body":{"injectables/FirebaseStorageService.html":{}}}],["firebaseadminmodule",{"_index":1598,"title":{"modules/FirebaseAdminModule.html":{}},"body":{"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{},"modules.html":{},"overview.html":{}}}],["firebaseadminmodule.forroot(options",{"_index":1711,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["firebaseadminmodule.forrootasync(options",{"_index":1712,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["firebaseasyncmoduleoptions",{"_index":1610,"title":{"interfaces/FirebaseAsyncModuleOptions.html":{}},"body":{"modules/FirebaseAdminModule.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptions.html":{},"coverage.html":{}}}],["firebaseauth",{"_index":1637,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["firebaseauthdecodedtoken",{"_index":1630,"title":{"interfaces/FirebaseAuthDecodedToken.html":{}},"body":{"interfaces/FirebaseAuthDecodedToken.html":{},"injectables/FirebaseAuthService.html":{},"coverage.html":{}}}],["firebaseauthservice",{"_index":1634,"title":{"injectables/FirebaseAuthService.html":{}},"body":{"injectables/FirebaseAuthService.html":{},"modules/FirebaseModule.html":{},"coverage.html":{},"overview.html":{}}}],["firebasecloudmessagingservice",{"_index":1671,"title":{"injectables/FirebaseCloudMessagingService.html":{}},"body":{"injectables/FirebaseCloudMessagingService.html":{},"modules/FirebaseModule.html":{},"coverage.html":{},"overview.html":{}}}],["firebaseconfig",{"_index":2652,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["firebasefirestorecollection",{"_index":1692,"title":{},"body":{"injectables/FirebaseFirestoreService.html":{},"miscellaneous/typealiases.html":{}}}],["firebasefirestoreservice",{"_index":1685,"title":{"injectables/FirebaseFirestoreService.html":{}},"body":{"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"coverage.html":{}}}],["firebasemodule",{"_index":1698,"title":{"modules/FirebaseModule.html":{}},"body":{"modules/FirebaseModule.html":{},"modules/InfraModule.html":{},"modules.html":{},"overview.html":{}}}],["firebasemodule.forrootasync",{"_index":1924,"title":{},"body":{"modules/InfraModule.html":{}}}],["firebasemoduleoptions",{"_index":1535,"title":{"interfaces/FirebaseModuleOptions.html":{}},"body":{"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["firebasestorageservice",{"_index":1709,"title":{"injectables/FirebaseStorageService.html":{}},"body":{"modules/FirebaseModule.html":{},"injectables/FirebaseStorageService.html":{},"injectables/FirebaseUploader.html":{},"coverage.html":{}}}],["firebasestorageuploaddto",{"_index":1717,"title":{"interfaces/FirebaseStorageUploadDto.html":{}},"body":{"injectables/FirebaseStorageService.html":{},"interfaces/FirebaseStorageUploadDto.html":{},"coverage.html":{}}}],["firebaseuploader",{"_index":1735,"title":{"injectables/FirebaseUploader.html":{}},"body":{"injectables/FirebaseUploader.html":{},"modules/InfraModule.html":{},"coverage.html":{}}}],["firestore",{"_index":1524,"title":{},"body":{"injectables/FirebaseAdmin.html":{},"injectables/FirebaseFirestoreService.html":{},"miscellaneous/typealiases.html":{}}}],["firestore.service.ts",{"_index":1686,"title":{},"body":{"injectables/FirebaseFirestoreService.html":{},"coverage.html":{}}}],["firestore.service.ts:14",{"_index":1690,"title":{},"body":{"injectables/FirebaseFirestoreService.html":{}}}],["firestore.service.ts:8",{"_index":1688,"title":{},"body":{"injectables/FirebaseFirestoreService.html":{}}}],["first",{"_index":1213,"title":{},"body":{"injectables/ExamService.html":{}}}],["first(exam.agreements)?.status",{"_index":1235,"title":{},"body":{"injectables/ExamService.html":{}}}],["fk_1d110bd5138b275a2ea2944e290",{"_index":557,"title":{},"body":{"classes/Auxiliary1620477175799.html":{}}}],["fk_20bfb4e7c97aa20956be86c6beb",{"_index":954,"title":{},"body":{"classes/ExamAgreement1622332886234.html":{}}}],["fk_26862c959c4ecfc8f1b4a1a055c",{"_index":586,"title":{},"body":{"classes/Auxiliary1624416663574.html":{}}}],["fk_3b2789ae1c494ff1bf8dd4d4607",{"_index":553,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPositionIdx1620563708532.html":{}}}],["fk_4a22969058fa5105ad6bee583f1",{"_index":1256,"title":{},"body":{"classes/ExamTarget1622326106015.html":{}}}],["fk_7540599d89cb2b6e17cc56d5170",{"_index":585,"title":{},"body":{"classes/Auxiliary1624416663574.html":{}}}],["fk_7bdc7fbb138980e5471e2a19366",{"_index":955,"title":{},"body":{"classes/ExamAgreement1622332886234.html":{}}}],["fk_814144bcce3b80921f41f15b823",{"_index":155,"title":{},"body":{"classes/Answer1622421768424.html":{}}}],["fk_971014f1fb44be716098484bb5a",{"_index":162,"title":{},"body":{"classes/Answer1622421768424.html":{}}}],["fk_af1604ea5493f65a6c8d70d98ed",{"_index":1257,"title":{},"body":{"classes/ExamTarget1622326106015.html":{}}}],["fk_b472107b61171823120f069fd50",{"_index":563,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{}}}],["fk_b9db72ddc93f196bf9d79132171",{"_index":561,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{}}}],["fk_ba483ad17eb41fb181aa3a77d4f",{"_index":559,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/PeriodIndex1624547816204.html":{}}}],["fk_ba86f32978b67a878005c5af78a",{"_index":580,"title":{},"body":{"classes/Auxiliary1624416663574.html":{}}}],["fk_c3d19a89541e4f0813f2fe09194",{"_index":160,"title":{},"body":{"classes/Answer1622421768424.html":{}}}],["fk_d35fb46683694975ba85bcd804e",{"_index":565,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{}}}],["fk_df58a2a413f5647f6411002cb28",{"_index":584,"title":{},"body":{"classes/Auxiliary1624416663574.html":{}}}],["fk_f2d35d0b9823628374f51931ddd",{"_index":581,"title":{},"body":{"classes/Auxiliary1624416663574.html":{}}}],["flags",{"_index":2190,"title":{},"body":{"classes/QuestionGroup.html":{}}}],["fns",{"_index":1884,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{},"dependencies.html":{}}}],["following",{"_index":2812,"title":{},"body":{"index.html":{}}}],["foreign",{"_index":156,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamTarget1622326106015.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPositionIdx1620563708532.html":{}}}],["form",{"_index":1988,"title":{},"body":{"injectables/NodeMailerService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fornecida",{"_index":781,"title":{},"body":{"classes/CreateQuestionDto.html":{}}}],["forroot",{"_index":1604,"title":{},"body":{"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{}}}],["forroot(options",{"_index":1605,"title":{},"body":{"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{}}}],["forrootasync",{"_index":1608,"title":{},"body":{"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{}}}],["forrootasync(options",{"_index":1609,"title":{},"body":{"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{}}}],["forwardref",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExamAgreementService.html":{},"injectables/QuestionService.html":{},"modules/UserModule.html":{}}}],["found",{"_index":346,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/PeriodService.html":{},"miscellaneous/variables.html":{}}}],["fs",{"_index":2468,"title":{},"body":{"injectables/TemplateService.html":{}}}],["fullfil",{"_index":2803,"title":{},"body":{"index.html":{}}}],["function",{"_index":1625,"title":{},"body":{"interfaces/FirebaseAsyncModuleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":2768,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":1428,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["g.id",{"_index":1429,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["g.subject_id",{"_index":1433,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["generate",{"_index":1306,"title":{},"body":{"injectables/ExamTargetNodeFactory.html":{}}}],["generate(schema",{"_index":1307,"title":{},"body":{"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{}}}],["gerado",{"_index":1888,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{},"miscellaneous/variables.html":{}}}],["get(':id",{"_index":1087,"title":{},"body":{"controllers/ExamController.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{}}}],["get(':id')@apiokresponse({type",{"_index":2138,"title":{},"body":{"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{}}}],["get('health",{"_index":367,"title":{},"body":{"controllers/AppController.html":{}}}],["get('me",{"_index":1105,"title":{},"body":{"controllers/ExamController.html":{}}}],["get('me')@apiokresponse({type",{"_index":1090,"title":{},"body":{"controllers/ExamController.html":{}}}],["get('me/:examid",{"_index":2233,"title":{},"body":{"controllers/QuestionGroupController.html":{}}}],["get('me/:examid')@apiokresponse({type",{"_index":2217,"title":{},"body":{"controllers/QuestionGroupController.html":{}}}],["get('user",{"_index":1281,"title":{},"body":{"controllers/ExamTargetController.html":{}}}],["get('user')@apiexcludeendpoint",{"_index":1272,"title":{},"body":{"controllers/ExamTargetController.html":{}}}],["get()@apiokresponse({type",{"_index":1085,"title":{},"body":{"controllers/ExamController.html":{},"controllers/ExamTargetController.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{}}}],["get()@useguards(jwtguard",{"_index":2542,"title":{},"body":{"controllers/UserController.html":{}}}],["get(name",{"_index":2461,"title":{},"body":{"injectables/TemplateService.html":{}}}],["getbyuser",{"_index":1003,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["getbyuser(user",{"_index":1020,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["getcollection",{"_index":1687,"title":{},"body":{"injectables/FirebaseFirestoreService.html":{}}}],["getcollection(collection",{"_index":1689,"title":{},"body":{"injectables/FirebaseFirestoreService.html":{}}}],["getcsvlines",{"_index":1390,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["getcsvlines(examid",{"_index":1394,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["getend",{"_index":885,"title":{},"body":{"classes/Exam.html":{}}}],["getfilename",{"_index":1457,"title":{},"body":{"injectables/ExportationService.html":{}}}],["getfilename(examid",{"_index":1464,"title":{},"body":{"injectables/ExportationService.html":{}}}],["getforuser",{"_index":1269,"title":{},"body":{"controllers/ExamTargetController.html":{}}}],["getforuser(@getuser",{"_index":1282,"title":{},"body":{"controllers/ExamTargetController.html":{}}}],["getforuser(user",{"_index":1271,"title":{},"body":{"controllers/ExamTargetController.html":{}}}],["getgrades",{"_index":2094,"title":{},"body":{"classes/Professor.html":{},"classes/Student.html":{}}}],["gethasfinishedexam",{"_index":930,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["getisleaf",{"_index":1295,"title":{},"body":{"classes/ExamTargetNode.html":{}}}],["getlastperiod",{"_index":2023,"title":{},"body":{"injectables/PeriodService.html":{}}}],["getname",{"_index":1566,"title":{},"body":{"injectables/FirebaseAdmin.html":{},"injectables/FirebaseUploader.html":{}}}],["getname(filedto",{"_index":1741,"title":{},"body":{"injectables/FirebaseUploader.html":{}}}],["getnextposition",{"_index":2356,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getnextposition(groupid",{"_index":2367,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getoptions",{"_index":1568,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["getperiodbyinterval",{"_index":2024,"title":{},"body":{"injectables/PeriodService.html":{}}}],["getperiodbyinterval(undefined",{"_index":2029,"title":{},"body":{"injectables/PeriodService.html":{}}}],["getpersonal",{"_index":2053,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{}}}],["getpersonal(user",{"_index":2056,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{}}}],["getstart",{"_index":883,"title":{},"body":{"classes/Exam.html":{}}}],["gettargetmap",{"_index":1320,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["gettargets",{"_index":1270,"title":{},"body":{"controllers/ExamTargetController.html":{},"injectables/ExamTargetService.html":{}}}],["gettargetsforuser",{"_index":1321,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["gettargetsforuser(target",{"_index":1327,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["getting",{"_index":2783,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":204,"title":{},"body":{"controllers/AnswerController.html":{},"controllers/ExamAgreementController.html":{},"controllers/ExamController.html":{},"controllers/ExamTargetController.html":{},"injectables/FirebaseAuthService.html":{},"controllers/QuestionGroupController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuser(@getuser",{"_index":2551,"title":{},"body":{"controllers/UserController.html":{}}}],["getuser(uid",{"_index":1649,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["getuser(user",{"_index":2541,"title":{},"body":{"controllers/UserController.html":{}}}],["given",{"_index":2047,"title":{},"body":{"injectables/PeriodService.html":{}}}],["global",{"_index":674,"title":{},"body":{"modules/CoreModule.html":{},"modules/FirebaseModule.html":{},"modules/LoggerModule.html":{}}}],["gracefuluniquecodeonexamagreement.ts",{"_index":1761,"title":{},"body":{"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"coverage.html":{}}}],["gracefuluniquecodeonexamagreement.ts:12",{"_index":1762,"title":{},"body":{"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{}}}],["gracefuluniquecodeonexamagreement.ts:6",{"_index":1763,"title":{},"body":{"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{}}}],["gracefuluniquecodeonexamagreement1625001091462",{"_index":1065,"title":{},"body":{"classes/ExamAgreementUniqueCode1625001091462.html":{}}}],["gracefuluniquecodeonexamagreement1625001565001",{"_index":1759,"title":{"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{}},"body":{"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"coverage.html":{}}}],["grade",{"_index":232,"title":{"classes/Grade.html":{}},"body":{"classes/AnswerGrade.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"injectables/CaslAbilityFactory.html":{},"classes/ExamTargetAdd1622378888497.html":{},"injectables/ExportationRepository.html":{},"classes/Grade.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"interfaces/IEntity.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Professor.html":{},"classes/QuestionGroupGrade.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/Student.html":{},"classes/Subject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["grade.dto",{"_index":2063,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{}}}],["grade.dto.ts",{"_index":2240,"title":{},"body":{"classes/QuestionGroupGrade.html":{},"coverage.html":{}}}],["grade.dto.ts:5",{"_index":2241,"title":{},"body":{"classes/QuestionGroupGrade.html":{}}}],["grade.entity",{"_index":254,"title":{},"body":{"classes/AnswerGradeRepository.html":{},"classes/Grade.html":{},"classes/Professor.html":{},"classes/Student.html":{},"classes/Subject.html":{}}}],["grade.entity.ts",{"_index":231,"title":{},"body":{"classes/AnswerGrade.html":{},"coverage.html":{}}}],["grade.entity.ts:11",{"_index":235,"title":{},"body":{"classes/AnswerGrade.html":{}}}],["grade.entity.ts:8",{"_index":234,"title":{},"body":{"classes/AnswerGrade.html":{}}}],["grade.id",{"_index":1903,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["grade.repository",{"_index":281,"title":{},"body":{"modules/AnswerModule.html":{},"injectables/AnswerService.html":{}}}],["grade.repository.ts",{"_index":247,"title":{},"body":{"classes/AnswerGradeRepository.html":{},"coverage.html":{}}}],["grade.subject",{"_index":2452,"title":{},"body":{"classes/Subject.html":{}}}],["grade_id",{"_index":147,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/Auxiliary1624416663574.html":{},"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["grade`(`id",{"_index":163,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/Auxiliary1624416663574.html":{}}}],["gradeid",{"_index":233,"title":{},"body":{"classes/AnswerGrade.html":{},"classes/CreateAnswerDto.html":{}}}],["gradeindex.ts",{"_index":1785,"title":{},"body":{"classes/GradeIndex1624560625346.html":{},"coverage.html":{}}}],["gradeindex.ts:10",{"_index":1787,"title":{},"body":{"classes/GradeIndex1624560625346.html":{}}}],["gradeindex.ts:4",{"_index":1786,"title":{},"body":{"classes/GradeIndex1624560625346.html":{}}}],["gradeindex.ts:6",{"_index":1788,"title":{},"body":{"classes/GradeIndex1624560625346.html":{}}}],["gradeindex1624560625346",{"_index":1783,"title":{"classes/GradeIndex1624560625346.html":{}},"body":{"classes/GradeIndex1624560625346.html":{},"coverage.html":{}}}],["graderepository",{"_index":595,"title":{"classes/GradeRepository.html":{}},"body":{"modules/AuxiliaryModule.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"coverage.html":{}}}],["grades",{"_index":2070,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{},"classes/Professor.html":{},"classes/Student.html":{},"classes/Subject.html":{}}}],["grades.length",{"_index":2072,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{}}}],["grades.map((grade",{"_index":2075,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{}}}],["gradeservice",{"_index":590,"title":{"injectables/GradeService.html":{}},"body":{"modules/AuxiliaryModule.html":{},"injectables/GradeService.html":{},"injectables/PersonalQuestionGroup.html":{},"coverage.html":{},"overview.html":{}}}],["group",{"_index":893,"title":{},"body":{"classes/Exam.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Question.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"injectables/QuestionGroupService.html":{},"interfaces/QuestionGroupUser.html":{},"injectables/QuestionService.html":{},"coverage.html":{}}}],["group.constants",{"_index":2291,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["group.constants.ts",{"_index":2693,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group.controller",{"_index":2262,"title":{},"body":{"modules/QuestionGroupModule.html":{}}}],["group.controller.ts",{"_index":2207,"title":{},"body":{"controllers/QuestionGroupController.html":{},"coverage.html":{}}}],["group.controller.ts:39",{"_index":2213,"title":{},"body":{"controllers/QuestionGroupController.html":{}}}],["group.controller.ts:47",{"_index":2214,"title":{},"body":{"controllers/QuestionGroupController.html":{}}}],["group.controller.ts:53",{"_index":2218,"title":{},"body":{"controllers/QuestionGroupController.html":{}}}],["group.controller.ts:63",{"_index":2215,"title":{},"body":{"controllers/QuestionGroupController.html":{}}}],["group.controller.ts:70",{"_index":2224,"title":{},"body":{"controllers/QuestionGroupController.html":{}}}],["group.controller.ts:80",{"_index":2211,"title":{},"body":{"controllers/QuestionGroupController.html":{}}}],["group.controller.ts:88",{"_index":2222,"title":{},"body":{"controllers/QuestionGroupController.html":{}}}],["group.controller.ts:97",{"_index":2219,"title":{},"body":{"controllers/QuestionGroupController.html":{}}}],["group.dto",{"_index":2228,"title":{},"body":{"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{},"classes/UpdateQuestionGroupDto.html":{}}}],["group.dto.ts",{"_index":663,"title":{},"body":{"classes/CopyQuestionGroupDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/UpdateQuestionGroupDto.html":{},"coverage.html":{}}}],["group.dto.ts:12",{"_index":795,"title":{},"body":{"classes/CreateQuestionGroupDto.html":{}}}],["group.dto.ts:16",{"_index":792,"title":{},"body":{"classes/CreateQuestionGroupDto.html":{}}}],["group.dto.ts:20",{"_index":794,"title":{},"body":{"classes/CreateQuestionGroupDto.html":{}}}],["group.dto.ts:24",{"_index":793,"title":{},"body":{"classes/CreateQuestionGroupDto.html":{}}}],["group.dto.ts:5",{"_index":667,"title":{},"body":{"classes/CopyQuestionGroupDto.html":{},"classes/ReorderQuestionGroupDto.html":{}}}],["group.dto.ts:8",{"_index":666,"title":{},"body":{"classes/CopyQuestionGroupDto.html":{}}}],["group.dto.ts:9",{"_index":2400,"title":{},"body":{"classes/ReorderQuestionGroupDto.html":{}}}],["group.entity",{"_index":633,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/Exam.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Question.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupRepository.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{}}}],["group.entity.ts",{"_index":2175,"title":{},"body":{"classes/QuestionGroup.html":{},"coverage.html":{}}}],["group.entity.ts:17",{"_index":2183,"title":{},"body":{"classes/QuestionGroup.html":{}}}],["group.entity.ts:21",{"_index":2176,"title":{},"body":{"classes/QuestionGroup.html":{}}}],["group.entity.ts:24",{"_index":2179,"title":{},"body":{"classes/QuestionGroup.html":{}}}],["group.entity.ts:28",{"_index":2181,"title":{},"body":{"classes/QuestionGroup.html":{}}}],["group.entity.ts:31",{"_index":2178,"title":{},"body":{"classes/QuestionGroup.html":{}}}],["group.entity.ts:34",{"_index":2182,"title":{},"body":{"classes/QuestionGroup.html":{}}}],["group.entity.ts:37",{"_index":2177,"title":{},"body":{"classes/QuestionGroup.html":{}}}],["group.entity.ts:40",{"_index":2184,"title":{},"body":{"classes/QuestionGroup.html":{}}}],["group.exam",{"_index":894,"title":{},"body":{"classes/Exam.html":{}}}],["group.module",{"_index":283,"title":{},"body":{"modules/AnswerModule.html":{},"modules/AppModule.html":{}}}],["group.module.ts",{"_index":2260,"title":{},"body":{"modules/QuestionGroupModule.html":{}}}],["group.position",{"_index":2318,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["group.provider",{"_index":2267,"title":{},"body":{"modules/QuestionGroupModule.html":{},"injectables/QuestionGroupService.html":{}}}],["group.provider.ts",{"_index":2052,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{},"coverage.html":{}}}],["group.provider.ts:13",{"_index":2055,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{}}}],["group.provider.ts:20",{"_index":2057,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{}}}],["group.questions",{"_index":2310,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["group.repository",{"_index":2068,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{},"modules/QuestionGroupModule.html":{},"injectables/QuestionGroupService.html":{}}}],["group.repository.ts",{"_index":2270,"title":{},"body":{"classes/QuestionGroupRepository.html":{},"coverage.html":{}}}],["group.service",{"_index":2227,"title":{},"body":{"controllers/QuestionGroupController.html":{},"modules/QuestionGroupModule.html":{},"injectables/QuestionService.html":{}}}],["group.service.ts",{"_index":2273,"title":{},"body":{"injectables/QuestionGroupService.html":{},"coverage.html":{}}}],["group.service.ts:100",{"_index":2277,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["group.service.ts:124",{"_index":2285,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["group.service.ts:147",{"_index":2282,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["group.service.ts:167",{"_index":2283,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["group.service.ts:24",{"_index":2276,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["group.service.ts:33",{"_index":2287,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["group.service.ts:44",{"_index":2278,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["group.service.ts:57",{"_index":2279,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["group.service.ts:61",{"_index":2280,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["group.service.ts:75",{"_index":2288,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["group/controllers/question",{"_index":2206,"title":{},"body":{"controllers/QuestionGroupController.html":{},"coverage.html":{}}}],["group/controllers/question.controller.ts",{"_index":2126,"title":{},"body":{"controllers/QuestionController.html":{},"coverage.html":{}}}],["group/controllers/question.controller.ts:33",{"_index":2131,"title":{},"body":{"controllers/QuestionController.html":{}}}],["group/controllers/question.controller.ts:41",{"_index":2134,"title":{},"body":{"controllers/QuestionController.html":{}}}],["group/controllers/question.controller.ts:50",{"_index":2137,"title":{},"body":{"controllers/QuestionController.html":{}}}],["group/controllers/question.controller.ts:57",{"_index":2140,"title":{},"body":{"controllers/QuestionController.html":{}}}],["group/controllers/question.controller.ts:64",{"_index":2150,"title":{},"body":{"controllers/QuestionController.html":{}}}],["group/controllers/question.controller.ts:73",{"_index":2146,"title":{},"body":{"controllers/QuestionController.html":{}}}],["group/controllers/question.controller.ts:82",{"_index":2142,"title":{},"body":{"controllers/QuestionController.html":{}}}],["group/dtos/copy",{"_index":662,"title":{},"body":{"classes/CopyQuestionGroupDto.html":{},"coverage.html":{}}}],["group/dtos/create",{"_index":750,"title":{},"body":{"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"coverage.html":{}}}],["group/dtos/find",{"_index":1510,"title":{},"body":{"classes/FindPersonalDto.html":{},"coverage.html":{}}}],["group/dtos/question",{"_index":2171,"title":{},"body":{"classes/QuestionFindDto.html":{},"classes/QuestionGroupGrade.html":{},"coverage.html":{}}}],["group/dtos/reorder",{"_index":2395,"title":{},"body":{"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"coverage.html":{}}}],["group/dtos/update",{"_index":2507,"title":{},"body":{"classes/UpdateQuestionDto.html":{},"classes/UpdateQuestionGroupDto.html":{},"coverage.html":{}}}],["group/entities/question",{"_index":632,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/Exam.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"coverage.html":{}}}],["group/entities/question.entity",{"_index":111,"title":{},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{}}}],["group/entities/question.entity.ts",{"_index":2112,"title":{},"body":{"classes/Question.html":{},"coverage.html":{}}}],["group/entities/question.entity.ts:12",{"_index":2117,"title":{},"body":{"classes/Question.html":{}}}],["group/entities/question.entity.ts:15",{"_index":2116,"title":{},"body":{"classes/Question.html":{}}}],["group/entities/question.entity.ts:18",{"_index":2120,"title":{},"body":{"classes/Question.html":{}}}],["group/entities/question.entity.ts:21",{"_index":2115,"title":{},"body":{"classes/Question.html":{}}}],["group/entities/question.entity.ts:25",{"_index":2119,"title":{},"body":{"classes/Question.html":{}}}],["group/entities/question.entity.ts:28",{"_index":2114,"title":{},"body":{"classes/Question.html":{}}}],["group/entities/question.entity.ts:31",{"_index":2113,"title":{},"body":{"classes/Question.html":{}}}],["group/entities/question.entity.ts:9",{"_index":2121,"title":{},"body":{"classes/Question.html":{}}}],["group/interfaces/question",{"_index":2331,"title":{},"body":{"interfaces/QuestionGroupUser.html":{},"coverage.html":{}}}],["group/providers/personal",{"_index":2051,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{},"coverage.html":{}}}],["group/question",{"_index":282,"title":{},"body":{"modules/AnswerModule.html":{},"modules/AppModule.html":{},"modules/QuestionGroupModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["group/question.constants.ts",{"_index":2694,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group/repositories/question",{"_index":2269,"title":{},"body":{"classes/QuestionGroupRepository.html":{},"coverage.html":{}}}],["group/repositories/question.repository.ts",{"_index":2351,"title":{},"body":{"classes/QuestionRepository.html":{},"coverage.html":{}}}],["group/services/question",{"_index":2272,"title":{},"body":{"injectables/QuestionGroupService.html":{},"coverage.html":{}}}],["group/services/question.service",{"_index":324,"title":{},"body":{"injectables/AnswerService.html":{}}}],["group/services/question.service.ts",{"_index":2353,"title":{},"body":{"injectables/QuestionService.html":{},"coverage.html":{}}}],["group/services/question.service.ts:102",{"_index":2360,"title":{},"body":{"injectables/QuestionService.html":{}}}],["group/services/question.service.ts:114",{"_index":2370,"title":{},"body":{"injectables/QuestionService.html":{}}}],["group/services/question.service.ts:135",{"_index":2369,"title":{},"body":{"injectables/QuestionService.html":{}}}],["group/services/question.service.ts:24",{"_index":2358,"title":{},"body":{"injectables/QuestionService.html":{}}}],["group/services/question.service.ts:32",{"_index":2368,"title":{},"body":{"injectables/QuestionService.html":{}}}],["group/services/question.service.ts:39",{"_index":2361,"title":{},"body":{"injectables/QuestionService.html":{}}}],["group/services/question.service.ts:51",{"_index":2362,"title":{},"body":{"injectables/QuestionService.html":{}}}],["group/services/question.service.ts:64",{"_index":2363,"title":{},"body":{"injectables/QuestionService.html":{}}}],["group/services/question.service.ts:75",{"_index":2365,"title":{},"body":{"injectables/QuestionService.html":{}}}],["group/services/question.service.ts:79",{"_index":2366,"title":{},"body":{"injectables/QuestionService.html":{}}}],["group/services/question.service.ts:89",{"_index":2371,"title":{},"body":{"injectables/QuestionService.html":{}}}],["group_id",{"_index":555,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"interfaces/CsvLineRow.html":{},"injectables/ExportationRepository.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPositionIdx1620563708532.html":{}}}],["group_title",{"_index":837,"title":{},"body":{"interfaces/CsvLineRow.html":{},"injectables/ExportationRepository.html":{}}}],["groupby",{"_index":1212,"title":{},"body":{"injectables/ExamService.html":{}}}],["groupby(agreed",{"_index":1234,"title":{},"body":{"injectables/ExamService.html":{}}}],["groupgrade",{"_index":2076,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{}}}],["groupgrade.grade",{"_index":2078,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{}}}],["groupgrades",{"_index":2073,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{}}}],["groupid",{"_index":664,"title":{},"body":{"classes/CopyQuestionGroupDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/Question.html":{},"controllers/QuestionController.html":{},"classes/QuestionFindDto.html":{},"injectables/QuestionService.html":{},"classes/ReorderQuestionDto.html":{}}}],["groupidpositionmap",{"_index":2315,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["groupidpositionmap.get(group.id",{"_index":2319,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["groupids",{"_index":2313,"title":{},"body":{"injectables/QuestionGroupService.html":{},"classes/ReorderQuestionGroupDto.html":{}}}],["groupids.map((id",{"_index":2316,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["groups",{"_index":855,"title":{},"body":{"classes/Exam.html":{},"injectables/ExamService.html":{},"injectables/QuestionGroupService.html":{}}}],["groups.map(async",{"_index":2317,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["groupservice",{"_index":2357,"title":{},"body":{"injectables/QuestionService.html":{}}}],["grupo",{"_index":825,"title":{},"body":{"interfaces/CsvLine.html":{},"injectables/ExportationRepository.html":{},"miscellaneous/enumerations.html":{}}}],["grupopessoal",{"_index":2767,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["guards/jwt.guard",{"_index":463,"title":{},"body":{"modules/AuthModule.html":{}}}],["gzip",{"_index":1728,"title":{},"body":{"injectables/FirebaseStorageService.html":{}}}],["hasfinishedexam",{"_index":913,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["hasgrade",{"_index":1077,"title":{},"body":{"interfaces/ExamAgreementUser.html":{}}}],["healthy",{"_index":372,"title":{},"body":{"controllers/AppController.html":{}}}],["helmet",{"_index":2723,"title":{},"body":{"dependencies.html":{}}}],["hooked",{"_index":252,"title":{},"body":{"classes/AnswerGradeRepository.html":{},"classes/AnswerRepository.html":{},"injectables/AnswerService.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/ExamAgreementRepository.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTargetRepository.html":{},"classes/GradeRepository.html":{},"classes/PeriodRepository.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/QuestionGroupRepository.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionRepository.html":{},"injectables/QuestionService.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["host",{"_index":1825,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":1842,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["html",{"_index":2413,"title":{},"body":{"injectables/SendEmailService.html":{},"classes/SendMailDto.html":{}}}],["http:\\/\\/localhost:(3000|5000",{"_index":2854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpcode",{"_index":371,"title":{},"body":{"controllers/AppController.html":{}}}],["httpcode(200",{"_index":374,"title":{},"body":{"controllers/AppController.html":{}}}],["httpexception",{"_index":1824,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["httpexceptionfilter",{"_index":671,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"modules/CoreModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"coverage.html":{},"overview.html":{}}}],["https:\\/\\/(.*\\.|)herokuapp.com",{"_index":2853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iclassvalidatorexception",{"_index":1838,"title":{"interfaces/IClassValidatorException.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"coverage.html":{}}}],["id",{"_index":40,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"classes/AnswerGrade.html":{},"injectables/AnswerService.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"injectables/CaslAbilityFactory.html":{},"classes/Course.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionsDto.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"interfaces/ExamAgreementUser.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/ExamTarget.html":{},"classes/ExamTarget1622326106015.html":{},"interfaces/ExamUser.html":{},"classes/FFEntity.html":{},"classes/Grade.html":{},"interfaces/IEntity.html":{},"classes/Period.html":{},"classes/Professor.html":{},"classes/Question.html":{},"controllers/QuestionController.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"injectables/QuestionGroupService.html":{},"interfaces/QuestionGroupUser.html":{},"injectables/QuestionService.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/User.html":{},"interfaces/UserResult.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":2626,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1162,"title":{},"body":{"classes/ExamRepository.html":{},"injectables/QuestionService.html":{}}}],["idx_040052dd4f7f2aa588ac15c22e",{"_index":1069,"title":{},"body":{"classes/ExamAgreementUniqueCode1625001091462.html":{}}}],["idx_26862c959c4ecfc8f1b4a1a055",{"_index":577,"title":{},"body":{"classes/Auxiliary1624416663574.html":{}}}],["idx_2b38bb607ef3e86920e9bd0163",{"_index":549,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{}}}],["idx_31ef2b4d30675d0c15056b7f6e",{"_index":429,"title":{},"body":{"classes/Auth1619445806509.html":{},"classes/QuestionGroupTarget1621992475274.html":{}}}],["idx_4a22969058fa5105ad6bee583f",{"_index":1254,"title":{},"body":{"classes/ExamTarget1622326106015.html":{}}}],["idx_5cf4963ae12285cda6432d5a3a",{"_index":539,"title":{},"body":{"classes/Auxiliary1620477175799.html":{}}}],["idx_7540599d89cb2b6e17cc56d517",{"_index":576,"title":{},"body":{"classes/Auxiliary1624416663574.html":{}}}],["idx_914f18c8fbe52b10a6b276bc0c",{"_index":427,"title":{},"body":{"classes/Auth1619445806509.html":{}}}],["idx_92374adc6b583e8cf659977e48",{"_index":543,"title":{},"body":{"classes/Auxiliary1620477175799.html":{}}}],["idx_952e252e7470ff78b18a9ec786",{"_index":424,"title":{},"body":{"classes/Auth1619445806509.html":{}}}],["idx_988f784cc581e38b7ed4943006",{"_index":1250,"title":{},"body":{"classes/ExamTarget1622326106015.html":{}}}],["idx_a6235b5ef0939d8deaad755fc8",{"_index":428,"title":{},"body":{"classes/Auth1619445806509.html":{}}}],["idx_af1604ea5493f65a6c8d70d98e",{"_index":1255,"title":{},"body":{"classes/ExamTarget1622326106015.html":{}}}],["idx_df58a2a413f5647f6411002cb2",{"_index":574,"title":{},"body":{"classes/Auxiliary1624416663574.html":{}}}],["idx_e12875dfb3b1d92d7d7c5377e2",{"_index":2561,"title":{},"body":{"classes/UserEmail1625013724392.html":{}}}],["idx_ec3a69def9f89a993b8f75ee4d",{"_index":148,"title":{},"body":{"classes/Answer1622421768424.html":{}}}],["idx_f2d35d0b9823628374f51931dd",{"_index":573,"title":{},"body":{"classes/Auxiliary1624416663574.html":{}}}],["ientity",{"_index":1878,"title":{"interfaces/IEntity.html":{}},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{},"coverage.html":{}}}],["iexception",{"_index":1834,"title":{"interfaces/IException.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"coverage.html":{}}}],["ignoreexams",{"_index":1174,"title":{},"body":{"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"interfaces/FindExamByUserDto.html":{}}}],["ignoreexams.length",{"_index":1184,"title":{},"body":{"classes/ExamRepository.html":{}}}],["ignoreexams.map((el",{"_index":1186,"title":{},"body":{"classes/ExamRepository.html":{}}}],["ignoreexpiration",{"_index":1954,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image_alt",{"_index":2204,"title":{},"body":{"classes/QuestionGroup1620179231630.html":{},"classes/QuestionImage1620477869366.html":{}}}],["image_url",{"_index":2203,"title":{},"body":{"classes/QuestionGroup1620179231630.html":{},"classes/QuestionImage1620477869366.html":{}}}],["imagealt",{"_index":763,"title":{},"body":{"classes/CreateQuestionDto.html":{},"classes/Question.html":{}}}],["imageurl",{"_index":764,"title":{},"body":{"classes/CreateQuestionDto.html":{},"classes/Question.html":{}}}],["implemented",{"_index":1583,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer1622421768424.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"classes/ExamTitle1621036457247.html":{},"injectables/FirebaseAdmin.html":{},"injectables/FirebaseUploader.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/GradeIndex1624560625346.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IEntity.html":{},"interfaces/IException.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/UserEmail1625013724392.html":{}}}],["import",{"_index":29,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"classes/AnswerGrade.html":{},"classes/AnswerGradeRepository.html":{},"modules/AnswerModule.html":{},"classes/AnswerRepository.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"modules/AuxiliaryModule.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"classes/CopyQuestionGroupDto.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CreateAnswerDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/CreateUserDto.html":{},"injectables/CustomLogger.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementDto.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementRepository.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"classes/ExamPersonalResult.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"controllers/ExamTargetController.html":{},"interfaces/ExamTargetManagerDto.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"classes/ExamTargetRepository.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"classes/ExamTitle1621036457247.html":{},"interfaces/ExamUser.html":{},"controllers/ExportationController.html":{},"modules/ExportationModule.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"classes/FFEntity.html":{},"interfaces/FindExamByUserDto.html":{},"classes/FindPersonalDto.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptions.html":{},"injectables/FirebaseStorageService.html":{},"injectables/FirebaseUploader.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/Grade.html":{},"classes/GradeIndex1624560625346.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IEntity.html":{},"interfaces/IException.html":{},"modules/InfraModule.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/LoggerModule.html":{},"classes/LoginDto.html":{},"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"classes/Period.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/PeriodRepository.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Professor.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/Question.html":{},"controllers/QuestionController.html":{},"classes/QuestionFindDto.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"modules/QuestionGroupModule.html":{},"classes/QuestionGroupRepository.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/QuestionRepository.html":{},"injectables/QuestionService.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/SeedAuxiliary1624412129413.html":{},"interfaces/SendAgreementEmailDto.html":{},"injectables/SendEmailService.html":{},"classes/Student.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"injectables/TemplateService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateAnswerDto.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"classes/UpdateExamDto.html":{},"classes/UpdateQuestionDto.html":{},"classes/UpdateQuestionGroupDto.html":{},"controllers/UploadController.html":{},"classes/UploaderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserEmail1625013724392.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserResult.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":274,"title":{},"body":{"modules/AnswerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuxiliaryModule.html":{},"modules/CoreModule.html":{},"modules/ExamModule.html":{},"modules/ExportationModule.html":{},"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{},"modules/InfraModule.html":{},"modules/QuestionGroupModule.html":{},"modules/UserModule.html":{}}}],["in(groupids",{"_index":2314,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["in(questionids",{"_index":2390,"title":{},"body":{"injectables/QuestionService.html":{}}}],["inactive",{"_index":532,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"miscellaneous/enumerations.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"classes/AnswerGrade.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"controllers/AppController.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"interfaces/BatchUser.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CopyQuestionGroupDto.html":{},"classes/Course.html":{},"classes/CreateAnswerDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CsvLine.html":{},"interfaces/CsvLineRow.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementDto.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"interfaces/ExamAgreementUser.html":{},"controllers/ExamController.html":{},"classes/ExamPersonalResult.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"controllers/ExamTargetController.html":{},"interfaces/ExamTargetManagerDto.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"classes/ExamTitle1621036457247.html":{},"interfaces/ExamUser.html":{},"controllers/ExportationController.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"classes/FFEntity.html":{},"interfaces/FileSendDto.html":{},"interfaces/FindExamByUserDto.html":{},"classes/FindPersonalDto.html":{},"injectables/FirebaseAdmin.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseAuthDecodedToken.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"interfaces/FirebaseModuleOptions.html":{},"injectables/FirebaseStorageService.html":{},"interfaces/FirebaseStorageUploadDto.html":{},"injectables/FirebaseUploader.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/Grade.html":{},"classes/GradeIndex1624560625346.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IEntity.html":{},"interfaces/IException.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"classes/Period.html":{},"classes/PeriodIndex1624547816204.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Professor.html":{},"injectables/ProfessorService.html":{},"classes/Question.html":{},"controllers/QuestionController.html":{},"classes/QuestionFindDto.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"interfaces/QuestionGroupUser.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"injectables/QuestionService.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/SeedAuxiliary1624412129413.html":{},"interfaces/SendAgreementEmailDto.html":{},"injectables/SendEmailService.html":{},"classes/SendMailDto.html":{},"interfaces/SoftDeleteResult.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"interfaces/SwaggerOptions.html":{},"injectables/TemplateService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"controllers/UploadController.html":{},"classes/UploaderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserEmail1625013724392.html":{},"interfaces/UserResult.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index('ix_period_started_at_ended_at",{"_index":2012,"title":{},"body":{"classes/Period.html":{}}}],["index('ix_question_group_class_examid",{"_index":2186,"title":{},"body":{"classes/QuestionGroup.html":{}}}],["index('ix_question_group_position",{"_index":2193,"title":{},"body":{"classes/QuestionGroup.html":{}}}],["index('ix_question_group_position')@column({type",{"_index":2180,"title":{},"body":{"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{}}}],["index('ix_question_position",{"_index":2123,"title":{},"body":{"classes/Question.html":{}}}],["index('ix_question_position')@column({type",{"_index":2118,"title":{},"body":{"classes/Question.html":{}}}],["infersubjects",{"_index":622,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"classes/AnswerGrade.html":{},"classes/AnswerGradeRepository.html":{},"modules/AnswerModule.html":{},"classes/AnswerRepository.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"modules/AuxiliaryModule.html":{},"interfaces/BatchUser.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"classes/CopyQuestionGroupDto.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CreateAnswerDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CsvLine.html":{},"interfaces/CsvLineRow.html":{},"injectables/CustomLogger.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementDto.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementRepository.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"interfaces/ExamAgreementUser.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"classes/ExamPersonalResult.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"controllers/ExamTargetController.html":{},"interfaces/ExamTargetManagerDto.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"classes/ExamTargetRepository.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"classes/ExamTitle1621036457247.html":{},"interfaces/ExamUser.html":{},"controllers/ExportationController.html":{},"modules/ExportationModule.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"classes/FFEntity.html":{},"interfaces/FileSendDto.html":{},"interfaces/FindExamByUserDto.html":{},"classes/FindPersonalDto.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseAuthDecodedToken.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptions.html":{},"injectables/FirebaseStorageService.html":{},"interfaces/FirebaseStorageUploadDto.html":{},"injectables/FirebaseUploader.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/Grade.html":{},"classes/GradeIndex1624560625346.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IEntity.html":{},"interfaces/IException.html":{},"modules/InfraModule.html":{},"injectables/JwtGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/LoggerModule.html":{},"classes/LoginDto.html":{},"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"classes/Period.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/PeriodRepository.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Professor.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/Question.html":{},"controllers/QuestionController.html":{},"classes/QuestionFindDto.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"modules/QuestionGroupModule.html":{},"classes/QuestionGroupRepository.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"interfaces/QuestionGroupUser.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/QuestionRepository.html":{},"injectables/QuestionService.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/SeedAuxiliary1624412129413.html":{},"interfaces/SendAgreementEmailDto.html":{},"injectables/SendEmailService.html":{},"classes/SendMailDto.html":{},"interfaces/SoftDeleteResult.html":{},"classes/Student.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"interfaces/SwaggerOptions.html":{},"injectables/TemplateService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateAnswerDto.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"classes/UpdateExamDto.html":{},"classes/UpdateQuestionDto.html":{},"classes/UpdateQuestionGroupDto.html":{},"controllers/UploadController.html":{},"classes/UploaderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserEmail1625013724392.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserResult.html":{},"injectables/UserService.html":{}}}],["infra.constants",{"_index":1917,"title":{},"body":{"modules/InfraModule.html":{},"injectables/NodeMailerService.html":{},"controllers/UploadController.html":{}}}],["infra/infra.module",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["inframodule",{"_index":383,"title":{"modules/InfraModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExamModule.html":{},"modules/ExportationModule.html":{},"modules/InfraModule.html":{},"modules.html":{},"overview.html":{}}}],["inherited",{"_index":98,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/Auth.html":{},"classes/Course.html":{},"classes/CreateAuthDto.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamTarget.html":{},"classes/FFEntity.html":{},"classes/Grade.html":{},"classes/LoginDto.html":{},"classes/Period.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/User.html":{}}}],["initialize",{"_index":2810,"title":{},"body":{"index.html":{}}}],["inject",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/ExamAgreementService.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseModuleOptions.html":{},"modules/InfraModule.html":{},"injectables/NodeMailerService.html":{},"injectables/QuestionService.html":{}}}],["inject(forwardref",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExamAgreementService.html":{},"injectables/QuestionService.html":{}}}],["inject(nodemailer_transporter",{"_index":1984,"title":{},"body":{"injectables/NodeMailerService.html":{}}}],["injectable",{"_index":297,"title":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/CustomLogger.html":{},"injectables/ExamAgreementService.html":{},"injectables/ExamService.html":{},"injectables/ExamTargetNodeFactory.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"injectables/FirebaseAdmin.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"injectables/FirebaseStorageService.html":{},"injectables/FirebaseUploader.html":{},"injectables/GradeService.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"injectables/ProfessorService.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"injectables/SendEmailService.html":{},"injectables/StudentService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/CustomLogger.html":{},"injectables/ExamAgreementService.html":{},"injectables/ExamService.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"injectables/FirebaseAdmin.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"injectables/FirebaseStorageService.html":{},"injectables/FirebaseUploader.html":{},"injectables/GradeService.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"injectables/ProfessorService.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"injectables/SendEmailService.html":{},"injectables/StudentService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":298,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/CustomLogger.html":{},"injectables/ExamAgreementService.html":{},"injectables/ExamService.html":{},"injectables/ExamTargetNodeFactory.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"injectables/FirebaseAdmin.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"injectables/FirebaseStorageService.html":{},"injectables/FirebaseUploader.html":{},"injectables/GradeService.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"injectables/ProfessorService.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"injectables/SendEmailService.html":{},"injectables/StudentService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectconnection",{"_index":1398,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["injectrepository",{"_index":318,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/ExamAgreementService.html":{},"injectables/ExamService.html":{},"injectables/ExamTargetService.html":{},"injectables/GradeService.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"injectables/ProfessorService.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"injectables/StudentService.html":{},"injectables/UserService.html":{}}}],["injectrepository(answergraderepository",{"_index":328,"title":{},"body":{"injectables/AnswerService.html":{}}}],["injectrepository(answerrepository",{"_index":326,"title":{},"body":{"injectables/AnswerService.html":{}}}],["injectrepository(authrepository",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectrepository(examagreementrepository",{"_index":1034,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["injectrepository(examrepository",{"_index":1217,"title":{},"body":{"injectables/ExamService.html":{}}}],["injectrepository(examtargetrepository",{"_index":1332,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["injectrepository(graderepository",{"_index":1814,"title":{},"body":{"injectables/GradeService.html":{}}}],["injectrepository(periodrepository",{"_index":2035,"title":{},"body":{"injectables/PeriodService.html":{}}}],["injectrepository(professorrepository",{"_index":2109,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["injectrepository(questiongrouprepository",{"_index":2069,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{},"injectables/QuestionGroupService.html":{}}}],["injectrepository(questionrepository",{"_index":2373,"title":{},"body":{"injectables/QuestionService.html":{}}}],["injectrepository(studentrepository",{"_index":2441,"title":{},"body":{"injectables/StudentService.html":{}}}],["injectrepository(userrepository",{"_index":2601,"title":{},"body":{"injectables/UserService.html":{}}}],["inner",{"_index":1157,"title":{},"body":{"classes/ExamRepository.html":{},"injectables/ExportationRepository.html":{}}}],["innerjoinandselect('exam.agreements",{"_index":1190,"title":{},"body":{"classes/ExamRepository.html":{}}}],["innerjoinandselect('exam.period",{"_index":1194,"title":{},"body":{"classes/ExamRepository.html":{}}}],["innerjoinandselect('grade.subject",{"_index":1804,"title":{},"body":{"classes/GradeRepository.html":{}}}],["insert",{"_index":59,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["instalação",{"_index":2792,"title":{},"body":{"index.html":{}}}],["installations",{"_index":1525,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["instanceid",{"_index":1526,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["instanceof",{"_index":1801,"title":{},"body":{"classes/GradeRepository.html":{},"injectables/QuestionGroupService.html":{}}}],["int",{"_index":86,"title":{},"body":{"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"classes/AnswerGrade.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamTarget1622326106015.html":{},"classes/Grade.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/Subject.html":{}}}],["intercept",{"_index":1993,"title":{},"body":{"injectables/PayloadInterceptor.html":{}}}],["intercept(_",{"_index":1994,"title":{},"body":{"injectables/PayloadInterceptor.html":{}}}],["interceptors/payload.interceptor",{"_index":677,"title":{},"body":{"modules/CoreModule.html":{}}}],["interface",{"_index":608,"title":{"interfaces/BatchUser.html":{},"interfaces/CsvLine.html":{},"interfaces/CsvLineRow.html":{},"interfaces/ExamAgreementUser.html":{},"interfaces/ExamTargetManagerDto.html":{},"interfaces/ExamTargetNodeSchema.html":{},"interfaces/ExamUser.html":{},"interfaces/FileSendDto.html":{},"interfaces/FindExamByUserDto.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseAuthDecodedToken.html":{},"interfaces/FirebaseModuleOptions.html":{},"interfaces/FirebaseStorageUploadDto.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IEntity.html":{},"interfaces/IException.html":{},"interfaces/JwtPayload.html":{},"interfaces/QuestionGroupUser.html":{},"interfaces/SendAgreementEmailDto.html":{},"interfaces/SoftDeleteResult.html":{},"interfaces/SwaggerOptions.html":{},"interfaces/UserResult.html":{}},"body":{"interfaces/BatchUser.html":{},"interfaces/CsvLine.html":{},"interfaces/CsvLineRow.html":{},"interfaces/ExamAgreementUser.html":{},"interfaces/ExamTargetManagerDto.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"interfaces/ExamUser.html":{},"interfaces/FileSendDto.html":{},"interfaces/FindExamByUserDto.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseAuthDecodedToken.html":{},"interfaces/FirebaseModuleOptions.html":{},"interfaces/FirebaseStorageUploadDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IEntity.html":{},"interfaces/IException.html":{},"interfaces/JwtPayload.html":{},"interfaces/QuestionGroupUser.html":{},"classes/SeedAuxiliary1624412129413.html":{},"interfaces/SendAgreementEmailDto.html":{},"interfaces/SoftDeleteResult.html":{},"interfaces/SwaggerOptions.html":{},"interfaces/UserResult.html":{},"coverage.html":{}}}],["interfaces",{"_index":609,"title":{},"body":{"interfaces/BatchUser.html":{},"interfaces/CsvLine.html":{},"interfaces/CsvLineRow.html":{},"interfaces/ExamAgreementUser.html":{},"interfaces/ExamTargetManagerDto.html":{},"interfaces/ExamTargetNodeSchema.html":{},"interfaces/ExamUser.html":{},"interfaces/FileSendDto.html":{},"interfaces/FindExamByUserDto.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseAuthDecodedToken.html":{},"interfaces/FirebaseModuleOptions.html":{},"interfaces/FirebaseStorageUploadDto.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IEntity.html":{},"interfaces/IException.html":{},"interfaces/JwtPayload.html":{},"interfaces/QuestionGroupUser.html":{},"interfaces/SendAgreementEmailDto.html":{},"interfaces/SoftDeleteResult.html":{},"interfaces/SwaggerOptions.html":{},"interfaces/UserResult.html":{},"overview.html":{}}}],["interfaces/batch",{"_index":325,"title":{},"body":{"injectables/AnswerService.html":{}}}],["interfaces/csv",{"_index":1396,"title":{},"body":{"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{}}}],["interfaces/exam",{"_index":981,"title":{},"body":{"controllers/ExamAgreementController.html":{},"injectables/ExamAgreementService.html":{},"controllers/ExamController.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"controllers/ExamTargetController.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{}}}],["interfaces/firebase",{"_index":1658,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"modules/FirebaseModule.html":{}}}],["interfaces/jwt",{"_index":1948,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces/user",{"_index":2600,"title":{},"body":{"injectables/UserService.html":{}}}],["internalservererrorexception",{"_index":2465,"title":{},"body":{"injectables/TemplateService.html":{}}}],["internalservererrorexception('template",{"_index":2487,"title":{},"body":{"injectables/TemplateService.html":{}}}],["interval",{"_index":2030,"title":{},"body":{"injectables/PeriodService.html":{}}}],["is_class",{"_index":838,"title":{},"body":{"interfaces/CsvLineRow.html":{},"injectables/ExportationRepository.html":{}}}],["is_personal",{"_index":839,"title":{},"body":{"interfaces/CsvLineRow.html":{},"injectables/ExportationRepository.html":{}}}],["isarray",{"_index":744,"title":{},"body":{"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionsDto.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{}}}],["isarray()@ispositive({each",{"_index":2397,"title":{},"body":{"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{}}}],["isarray()@validatenested({each",{"_index":796,"title":{},"body":{"classes/CreateQuestionsDto.html":{}}}],["isboolean",{"_index":723,"title":{},"body":{"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{}}}],["iscpf",{"_index":803,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isdate",{"_index":745,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["isdate()@type(undefined",{"_index":736,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["isdefined",{"_index":755,"title":{},"body":{"classes/CreateQuestion.html":{},"classes/CreateQuestionsDto.html":{}}}],["isenrollment",{"_index":805,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isenum",{"_index":698,"title":{},"body":{"classes/CreateAnswerDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateUserDto.html":{}}}],["isenum(answertype",{"_index":705,"title":{},"body":{"classes/CreateAnswerDto.html":{}}}],["isenum(examtargettype",{"_index":748,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["isenum(userrole",{"_index":807,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum(usertype",{"_index":810,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isleaf",{"_index":1289,"title":{},"body":{"classes/ExamTargetNode.html":{}}}],["isnotempty",{"_index":447,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"classes/UserDto.html":{}}}],["isoptional",{"_index":699,"title":{},"body":{"classes/CreateAnswerDto.html":{},"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/QuestionFindDto.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{}}}],["isoptional()@isarray()@isenum(examtargettype",{"_index":740,"title":{},"body":{"classes/CreateExamDto.html":{}}}],["isoptional()@isboolean",{"_index":733,"title":{},"body":{"classes/CreateExamDto.html":{},"classes/CreateQuestionGroupDto.html":{}}}],["isoptional()@isboolean()@type(undefined",{"_index":719,"title":{},"body":{"classes/CreateExamAgreementDto.html":{},"classes/UpdateExamAgreementDto.html":{}}}],["isoptional()@isenum(answertype",{"_index":696,"title":{},"body":{"classes/CreateAnswerDto.html":{}}}],["isoptional()@ispositive",{"_index":752,"title":{},"body":{"classes/CreateQuestion.html":{},"classes/CreateQuestionGroupDto.html":{}}}],["isoptional()@isstring()@isnotempty",{"_index":768,"title":{},"body":{"classes/CreateQuestionDto.html":{},"classes/UpdateExamAgreementDto.html":{}}}],["isoptional()@isurl",{"_index":770,"title":{},"body":{"classes/CreateQuestionDto.html":{}}}],["isoptional()@min(1)@max(5",{"_index":693,"title":{},"body":{"classes/CreateAnswerDto.html":{}}}],["ispositive",{"_index":665,"title":{},"body":{"classes/CopyQuestionGroupDto.html":{},"classes/CreateAnswerDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/ExamAgreementDto.html":{},"classes/QuestionFindDto.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{}}}],["ispositive()@isoptional",{"_index":2173,"title":{},"body":{"classes/QuestionFindDto.html":{}}}],["ispositive()@type(undefined",{"_index":2503,"title":{},"body":{"classes/UpdateExamAgreementQueryDto.html":{}}}],["ispositive()@validateif(undefined",{"_index":690,"title":{},"body":{"classes/CreateAnswerDto.html":{}}}],["ispositive({each",{"_index":2399,"title":{},"body":{"classes/ReorderQuestionDto.html":{}}}],["isprod",{"_index":2648,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":448,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/LoginDto.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"classes/UserDto.html":{}}}],["isstring()@isnotempty",{"_index":445,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/LoginDto.html":{},"classes/UserDto.html":{}}}],["isstring()@length(password_min",{"_index":710,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/LoginDto.html":{}}}],["issuer",{"_index":2907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isurl",{"_index":789,"title":{},"body":{"classes/CreateQuestionDto.html":{}}}],["item",{"_index":653,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["item.constructor",{"_index":654,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["items",{"_index":221,"title":{},"body":{"controllers/AnswerController.html":{}}}],["ix_period_started_at_ended_at",{"_index":2019,"title":{},"body":{"classes/PeriodIndex1624547816204.html":{}}}],["ix_question_group_class_examid",{"_index":1789,"title":{},"body":{"classes/GradeIndex1624560625346.html":{}}}],["ix_question_group_position",{"_index":571,"title":{},"body":{"classes/Auxiliary1624416663574.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/QuestionPositionIdx1620563708532.html":{}}}],["ix_question_group_target",{"_index":1249,"title":{},"body":{"classes/ExamTarget1622326106015.html":{},"classes/QuestionGroupTarget1621992475274.html":{}}}],["ix_question_position",{"_index":2350,"title":{},"body":{"classes/QuestionPositionIdx1620563708532.html":{}}}],["join",{"_index":1152,"title":{},"body":{"classes/ExamRepository.html":{},"classes/ExamTargetAdd1622378888497.html":{},"injectables/ExportationRepository.html":{},"injectables/TemplateService.html":{}}}],["join(__dirname",{"_index":2473,"title":{},"body":{"injectables/TemplateService.html":{}}}],["jointable",{"_index":888,"title":{},"body":{"classes/Exam.html":{},"classes/Grade.html":{}}}],["json",{"_index":2894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.parse(process.env.firebase_admin",{"_index":2899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["juntar",{"_index":2188,"title":{},"body":{"classes/QuestionGroup.html":{}}}],["jwt",{"_index":1947,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwtconfig",{"_index":2655,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconfigkey",{"_index":459,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":1952,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtguard",{"_index":200,"title":{"injectables/JwtGuard.html":{}},"body":{"controllers/AnswerController.html":{},"modules/AuthModule.html":{},"controllers/ExamAgreementController.html":{},"controllers/ExamController.html":{},"controllers/ExamTargetController.html":{},"controllers/ExportationController.html":{},"injectables/JwtGuard.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["jwtmodule",{"_index":457,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":467,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmoduleoptions",{"_index":1942,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":1932,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtservice",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":455,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":150,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamTarget1622326106015.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPositionIdx1620563708532.html":{}}}],["last",{"_index":2293,"title":{},"body":{"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["last(arr",{"_index":2779,"title":{},"body":{"miscellaneous/functions.html":{}}}],["last(questiongroup.exam.groups)?.position",{"_index":2299,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["last(questions)?.position",{"_index":2375,"title":{},"body":{"injectables/QuestionService.html":{}}}],["lazy",{"_index":2086,"title":{},"body":{"classes/Professor.html":{},"classes/Student.html":{}}}],["left",{"_index":1151,"title":{},"body":{"classes/ExamRepository.html":{},"injectables/ExportationRepository.html":{}}}],["leftjoin",{"_index":1178,"title":{},"body":{"classes/ExamRepository.html":{}}}],["leftjoin('exam_targets_exam_target",{"_index":1177,"title":{},"body":{"classes/ExamRepository.html":{}}}],["leftjoinandselect('exam.targets",{"_index":1196,"title":{},"body":{"classes/ExamRepository.html":{}}}],["legend",{"_index":260,"title":{},"body":{"modules/AnswerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuxiliaryModule.html":{},"modules/CaslModule.html":{},"modules/CoreModule.html":{},"modules/ExamModule.html":{},"modules/ExportationModule.html":{},"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{},"modules/InfraModule.html":{},"modules/LoggerModule.html":{},"modules/QuestionGroupModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":921,"title":{},"body":{"classes/ExamAgreement.html":{},"classes/LoginDto.html":{}}}],["length(password_min",{"_index":1969,"title":{},"body":{"classes/LoginDto.html":{}}}],["lessthan",{"_index":2032,"title":{},"body":{"injectables/PeriodService.html":{}}}],["lessthan(end",{"_index":2048,"title":{},"body":{"injectables/PeriodService.html":{}}}],["lessthanorequal",{"_index":2033,"title":{},"body":{"injectables/PeriodService.html":{}}}],["lessthanorequal(new",{"_index":2045,"title":{},"body":{"injectables/PeriodService.html":{}}}],["limit",{"_index":2719,"title":{},"body":{"dependencies.html":{}}}],["limit.config.ts",{"_index":2659,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":835,"title":{},"body":{"interfaces/CsvLineRow.html":{},"injectables/ExportationRepository.html":{},"coverage.html":{}}}],["line.interface",{"_index":1397,"title":{},"body":{"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{}}}],["line.interface.ts",{"_index":821,"title":{},"body":{"interfaces/CsvLine.html":{},"coverage.html":{}}}],["literal",{"_index":1015,"title":{},"body":{"injectables/ExamAgreementService.html":{},"interfaces/SendAgreementEmailDto.html":{},"interfaces/SoftDeleteResult.html":{}}}],["load",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["loadrelations",{"_index":1146,"title":{},"body":{"classes/ExamRepository.html":{}}}],["loadrelations(query",{"_index":1168,"title":{},"body":{"classes/ExamRepository.html":{}}}],["loadtargetmap",{"_index":1322,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["localmente",{"_index":2794,"title":{},"body":{"index.html":{}}}],["lodash",{"_index":938,"title":{},"body":{"classes/ExamAgreement.html":{},"injectables/ExamService.html":{},"dependencies.html":{}}}],["logger",{"_index":850,"title":{},"body":{"injectables/CustomLogger.html":{},"injectables/ExamAgreementService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"injectables/NodeMailerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger('bootstrap",{"_index":2889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger('httpexceptionfilter",{"_index":1822,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["logger.service",{"_index":1964,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule",{"_index":384,"title":{"modules/LoggerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["logging",{"_index":2881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":61,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"interfaces/IEntity.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/SeedAuxiliary1624412129413.html":{},"injectables/UserService.html":{}}}],["login(@body",{"_index":441,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":433,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login.dto",{"_index":714,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["logindto",{"_index":434,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logindto.login",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto:8",{"_index":712,"title":{},"body":{"classes/CreateAuthDto.html":{}}}],["lpad(convert(round(rand",{"_index":1764,"title":{},"body":{"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{}}}],["lógica",{"_index":2788,"title":{},"body":{"index.html":{}}}],["machinelearning",{"_index":1527,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["mail.dto",{"_index":1977,"title":{},"body":{"classes/MailerService.html":{},"injectables/NodeMailerService.html":{}}}],["mail.dto.ts",{"_index":2422,"title":{},"body":{"classes/SendMailDto.html":{},"coverage.html":{}}}],["mail.dto.ts:2",{"_index":2423,"title":{},"body":{"classes/SendMailDto.html":{}}}],["mail.dto.ts:3",{"_index":2425,"title":{},"body":{"classes/SendMailDto.html":{}}}],["mail.dto.ts:4",{"_index":2426,"title":{},"body":{"classes/SendMailDto.html":{}}}],["mail.dto.ts:5",{"_index":2424,"title":{},"body":{"classes/SendMailDto.html":{}}}],["mailer.service",{"_index":1983,"title":{},"body":{"injectables/NodeMailerService.html":{},"injectables/SendEmailService.html":{}}}],["mailerservice",{"_index":1909,"title":{"classes/MailerService.html":{}},"body":{"modules/InfraModule.html":{},"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"injectables/SendEmailService.html":{},"coverage.html":{},"overview.html":{}}}],["manage",{"_index":2762,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manager",{"_index":425,"title":{},"body":{"classes/Auth1619445806509.html":{},"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{},"miscellaneous/enumerations.html":{}}}],["manager.dto.ts",{"_index":1284,"title":{},"body":{"interfaces/ExamTargetManagerDto.html":{},"coverage.html":{}}}],["manytomany",{"_index":889,"title":{},"body":{"classes/Exam.html":{},"classes/Grade.html":{},"classes/Professor.html":{},"classes/Student.html":{}}}],["manytomany(undefined",{"_index":2085,"title":{},"body":{"classes/Professor.html":{},"classes/Student.html":{}}}],["manytomany(undefined)@jointable",{"_index":874,"title":{},"body":{"classes/Exam.html":{}}}],["manytomany(undefined)@jointable({name",{"_index":1773,"title":{},"body":{"classes/Grade.html":{}}}],["manytoone",{"_index":115,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/Grade.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/Subject.html":{}}}],["manytoone(undefined",{"_index":83,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/Grade.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/Subject.html":{}}}],["map",{"_index":336,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/ExamTargetService.html":{},"injectables/PayloadInterceptor.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"injectables/TemplateService.html":{},"miscellaneous/variables.html":{}}}],["map((_",{"_index":1267,"title":{},"body":{"classes/ExamTargetAdd1622378888497.html":{}}}],["map((file",{"_index":2481,"title":{},"body":{"injectables/TemplateService.html":{}}}],["maps/user",{"_index":1401,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["match",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":67,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"classes/AnswerGrade.html":{},"classes/AnswerGradeRepository.html":{},"modules/AnswerModule.html":{},"classes/AnswerRepository.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"modules/AuxiliaryModule.html":{},"interfaces/BatchUser.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"classes/CopyQuestionGroupDto.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CreateAnswerDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CsvLine.html":{},"interfaces/CsvLineRow.html":{},"injectables/CustomLogger.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementDto.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementRepository.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"interfaces/ExamAgreementUser.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"classes/ExamPersonalResult.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"controllers/ExamTargetController.html":{},"interfaces/ExamTargetManagerDto.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"classes/ExamTargetRepository.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"classes/ExamTitle1621036457247.html":{},"interfaces/ExamUser.html":{},"controllers/ExportationController.html":{},"modules/ExportationModule.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"classes/FFEntity.html":{},"interfaces/FileSendDto.html":{},"interfaces/FindExamByUserDto.html":{},"classes/FindPersonalDto.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseAuthDecodedToken.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptions.html":{},"injectables/FirebaseStorageService.html":{},"interfaces/FirebaseStorageUploadDto.html":{},"injectables/FirebaseUploader.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/Grade.html":{},"classes/GradeIndex1624560625346.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IEntity.html":{},"interfaces/IException.html":{},"modules/InfraModule.html":{},"injectables/JwtGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/LoggerModule.html":{},"classes/LoginDto.html":{},"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"classes/Period.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/PeriodRepository.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Professor.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/Question.html":{},"controllers/QuestionController.html":{},"classes/QuestionFindDto.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"modules/QuestionGroupModule.html":{},"classes/QuestionGroupRepository.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"interfaces/QuestionGroupUser.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/QuestionRepository.html":{},"injectables/QuestionService.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/SeedAuxiliary1624412129413.html":{},"interfaces/SendAgreementEmailDto.html":{},"injectables/SendEmailService.html":{},"classes/SendMailDto.html":{},"interfaces/SoftDeleteResult.html":{},"classes/Student.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"interfaces/SwaggerOptions.html":{},"injectables/TemplateService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateAnswerDto.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"classes/UpdateExamDto.html":{},"classes/UpdateQuestionDto.html":{},"classes/UpdateQuestionGroupDto.html":{},"controllers/UploadController.html":{},"classes/UploaderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserEmail1625013724392.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserResult.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matrícula",{"_index":828,"title":{},"body":{"interfaces/CsvLine.html":{},"injectables/ExportationRepository.html":{}}}],["max",{"_index":700,"title":{},"body":{"classes/CreateAnswerDto.html":{},"injectables/FirebaseStorageService.html":{},"miscellaneous/variables.html":{}}}],["max(5",{"_index":704,"title":{},"body":{"classes/CreateAnswerDto.html":{}}}],["maxqueryexecutiontime",{"_index":2870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":1678,"title":{},"body":{"injectables/FirebaseCloudMessagingService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["messaging",{"_index":1528,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["messaging.service",{"_index":1706,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["messaging.service.ts",{"_index":1673,"title":{},"body":{"injectables/FirebaseCloudMessagingService.html":{},"coverage.html":{}}}],["messaging.service.ts:12",{"_index":1681,"title":{},"body":{"injectables/FirebaseCloudMessagingService.html":{}}}],["messaging.service.ts:7",{"_index":1676,"title":{},"body":{"injectables/FirebaseCloudMessagingService.html":{}}}],["metadata",{"_index":1729,"title":{},"body":{"injectables/FirebaseStorageService.html":{},"dependencies.html":{}}}],["methods",{"_index":11,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"controllers/AppController.html":{},"classes/Auth1619445806509.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"injectables/CaslAbilityFactory.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"interfaces/ExamAgreementUser.html":{},"controllers/ExamController.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"controllers/ExamTargetController.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"classes/ExamTitle1621036457247.html":{},"controllers/ExportationController.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"injectables/FirebaseStorageService.html":{},"injectables/FirebaseUploader.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/GradeIndex1624560625346.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"classes/PeriodIndex1624547816204.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"injectables/ProfessorService.html":{},"controllers/QuestionController.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"injectables/QuestionService.html":{},"classes/SeedAuxiliary1624412129413.html":{},"injectables/SendEmailService.html":{},"injectables/StudentService.html":{},"injectables/TemplateService.html":{},"controllers/UploadController.html":{},"classes/UploaderService.html":{},"controllers/UserController.html":{},"classes/UserEmail1625013724392.html":{},"injectables/UserService.html":{}}}],["migrationinterface",{"_index":9,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer1622421768424.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"classes/ExamTitle1621036457247.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/GradeIndex1624560625346.html":{},"interfaces/IEntity.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/UserEmail1625013724392.html":{}}}],["migrations",{"_index":2876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationsdir",{"_index":2884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mimetype",{"_index":1495,"title":{},"body":{"injectables/ExportationService.html":{},"interfaces/FileSendDto.html":{}}}],["min",{"_index":701,"title":{},"body":{"classes/CreateAnswerDto.html":{}}}],["min(1",{"_index":703,"title":{},"body":{"classes/CreateAnswerDto.html":{}}}],["miscellaneous",{"_index":2748,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":2796,"title":{},"body":{"index.html":{}}}],["models/exam",{"_index":1099,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"injectables/ExamTargetTree.html":{}}}],["module",{"_index":256,"title":{"modules/AnswerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuxiliaryModule.html":{},"modules/CaslModule.html":{},"modules/CoreModule.html":{},"modules/ExamModule.html":{},"modules/ExportationModule.html":{},"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{},"modules/InfraModule.html":{},"modules/LoggerModule.html":{},"modules/QuestionGroupModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AnswerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuxiliaryModule.html":{},"modules/CaslModule.html":{},"modules/CoreModule.html":{},"modules/ExamModule.html":{},"modules/ExportationModule.html":{},"modules/FirebaseAdminModule.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptions.html":{},"modules/InfraModule.html":{},"modules/LoggerModule.html":{},"modules/QuestionGroupModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["modulemetadata",{"_index":1626,"title":{},"body":{"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseModuleOptions.html":{}}}],["modules",{"_index":258,"title":{"modules.html":{}},"body":{"modules/AnswerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuxiliaryModule.html":{},"modules/CaslModule.html":{},"modules/CoreModule.html":{},"modules/ExamModule.html":{},"modules/ExportationModule.html":{},"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{},"modules/InfraModule.html":{},"modules/LoggerModule.html":{},"modules/QuestionGroupModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["morethanorequal",{"_index":2034,"title":{},"body":{"injectables/PeriodService.html":{}}}],["morethanorequal(new",{"_index":2044,"title":{},"body":{"injectables/PeriodService.html":{}}}],["morethanorequal(start",{"_index":2049,"title":{},"body":{"injectables/PeriodService.html":{}}}],["morgan",{"_index":2726,"title":{},"body":{"dependencies.html":{}}}],["mustache",{"_index":2470,"title":{},"body":{"injectables/TemplateService.html":{},"dependencies.html":{}}}],["mustache$/u",{"_index":2476,"title":{},"body":{"injectables/TemplateService.html":{}}}],["mustfindauth",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["mustfindauth(authdto",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["mustfindspecializeduser",{"_index":2579,"title":{},"body":{"injectables/UserService.html":{}}}],["mustfindspecializeduser(userdto",{"_index":2590,"title":{},"body":{"injectables/UserService.html":{}}}],["mustfinduser",{"_index":2580,"title":{},"body":{"injectables/UserService.html":{}}}],["mustfinduser(userdto",{"_index":2592,"title":{},"body":{"injectables/UserService.html":{}}}],["mysql",{"_index":2862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mysql2",{"_index":2729,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":22,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"classes/Auth1619445806509.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"injectables/CaslAbilityFactory.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"controllers/ExamController.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"controllers/ExamTargetController.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"classes/ExamTitle1621036457247.html":{},"controllers/ExportationController.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"injectables/FirebaseStorageService.html":{},"injectables/FirebaseUploader.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/Grade.html":{},"classes/GradeIndex1624560625346.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IEntity.html":{},"interfaces/IException.html":{},"injectables/JwtStrategy.html":{},"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"classes/Period.html":{},"classes/PeriodIndex1624547816204.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"injectables/ProfessorService.html":{},"controllers/QuestionController.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"injectables/QuestionService.html":{},"classes/SeedAuxiliary1624412129413.html":{},"injectables/SendEmailService.html":{},"injectables/StudentService.html":{},"injectables/TemplateService.html":{},"controllers/UploadController.html":{},"classes/UploaderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserEmail1625013724392.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["naming",{"_index":2744,"title":{},"body":{"dependencies.html":{}}}],["namingstrategy",{"_index":2886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["necessário",{"_index":2797,"title":{},"body":{"index.html":{}}}],["needed",{"_index":2804,"title":{},"body":{"index.html":{}}}],["needs",{"_index":2893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["negócio",{"_index":2789,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":2000,"title":{},"body":{"injectables/PayloadInterceptor.html":{}}}],["nestjs/common",{"_index":195,"title":{},"body":{"controllers/AnswerController.html":{},"modules/AnswerModule.html":{},"injectables/AnswerService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuxiliaryModule.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"modules/CoreModule.html":{},"injectables/CustomLogger.html":{},"controllers/ExamAgreementController.html":{},"injectables/ExamAgreementService.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"controllers/ExamTargetController.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"controllers/ExportationController.html":{},"modules/ExportationModule.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptions.html":{},"injectables/FirebaseStorageService.html":{},"injectables/FirebaseUploader.html":{},"injectables/GradeService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"modules/InfraModule.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"modules/LoggerModule.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"injectables/ProfessorService.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"modules/QuestionGroupModule.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"injectables/SendEmailService.html":{},"injectables/StudentService.html":{},"injectables/TemplateService.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"modules/InfraModule.html":{},"injectables/JwtStrategy.html":{},"injectables/NodeMailerService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":2703,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":458,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":2497,"title":{},"body":{"classes/UpdateAnswerDto.html":{},"classes/UpdateExamDto.html":{},"classes/UpdateQuestionGroupDto.html":{}}}],["nestjs/passport",{"_index":1930,"title":{},"body":{"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2518,"title":{},"body":{"controllers/UploadController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":199,"title":{},"body":{"controllers/AnswerController.html":{},"controllers/AuthController.html":{},"classes/CreateExamAgreementDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/CreateUserDto.html":{},"classes/ExamAgreement.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementDto.html":{},"controllers/ExamController.html":{},"controllers/ExamTargetController.html":{},"controllers/ExportationController.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"classes/UpdateQuestionDto.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":277,"title":{},"body":{"modules/AnswerModule.html":{},"injectables/AnswerService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuxiliaryModule.html":{},"injectables/ExamAgreementService.html":{},"modules/ExamModule.html":{},"injectables/ExamService.html":{},"injectables/ExamTargetService.html":{},"modules/ExportationModule.html":{},"injectables/ExportationRepository.html":{},"injectables/GradeService.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"injectables/ProfessorService.html":{},"modules/QuestionGroupModule.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"injectables/StudentService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["new",{"_index":50,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"injectables/ExportationService.html":{},"injectables/FirebaseAdmin.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"injectables/JwtStrategy.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newexam",{"_index":1199,"title":{},"body":{"injectables/ExamService.html":{}}}],["newexam(dto",{"_index":1206,"title":{},"body":{"injectables/ExamService.html":{}}}],["next",{"_index":1996,"title":{},"body":{"injectables/PayloadInterceptor.html":{}}}],["next.handle().pipe(map((data",{"_index":2003,"title":{},"body":{"injectables/PayloadInterceptor.html":{}}}],["nico",{"_index":823,"title":{},"body":{"interfaces/CsvLine.html":{},"injectables/ExportationRepository.html":{}}}],["node",{"_index":1300,"title":{},"body":{"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{}}}],["node.childs",{"_index":1313,"title":{},"body":{"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{}}}],["node.dfs(type",{"_index":1303,"title":{},"body":{"classes/ExamTargetNode.html":{}}}],["node.factory",{"_index":1133,"title":{},"body":{"modules/ExamModule.html":{},"injectables/ExamTargetTree.html":{}}}],["node.factory.ts",{"_index":1305,"title":{},"body":{"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"coverage.html":{}}}],["node.factory.ts:12",{"_index":1309,"title":{},"body":{"injectables/ExamTargetNodeFactory.html":{}}}],["node.model",{"_index":1310,"title":{},"body":{"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"injectables/ExamTargetTree.html":{}}}],["node.model.ts",{"_index":1286,"title":{},"body":{"classes/ExamTargetNode.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["node.model.ts:13",{"_index":1293,"title":{},"body":{"classes/ExamTargetNode.html":{}}}],["node.model.ts:6",{"_index":1290,"title":{},"body":{"classes/ExamTargetNode.html":{}}}],["node.model.ts:7",{"_index":1291,"title":{},"body":{"classes/ExamTargetNode.html":{}}}],["node.model.ts:9",{"_index":1296,"title":{},"body":{"classes/ExamTargetNode.html":{}}}],["node.type",{"_index":1311,"title":{},"body":{"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{}}}],["node_env",{"_index":1851,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["nodemailer",{"_index":1914,"title":{},"body":{"modules/InfraModule.html":{},"injectables/NodeMailerService.html":{},"dependencies.html":{}}}],["nodemailer_transporter",{"_index":1916,"title":{},"body":{"modules/InfraModule.html":{},"injectables/NodeMailerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nodemailerconfig",{"_index":2657,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nodemailerservice",{"_index":1919,"title":{"injectables/NodeMailerService.html":{}},"body":{"modules/InfraModule.html":{},"injectables/NodeMailerService.html":{},"coverage.html":{}}}],["norandomname",{"_index":1501,"title":{},"body":{"injectables/ExportationService.html":{},"interfaces/FileSendDto.html":{}}}],["nota",{"_index":829,"title":{},"body":{"interfaces/CsvLine.html":{},"injectables/ExportationRepository.html":{}}}],["notfoundexception",{"_index":317,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/ExamAgreementService.html":{},"injectables/ExamService.html":{},"injectables/ExamTargetTree.html":{},"injectables/ExportationService.html":{},"injectables/PeriodService.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{}}}],["notfoundexception('nothing",{"_index":1486,"title":{},"body":{"injectables/ExportationService.html":{}}}],["notfoundexception('period",{"_index":2046,"title":{},"body":{"injectables/PeriodService.html":{}}}],["notfoundexception(answerdto",{"_index":345,"title":{},"body":{"injectables/AnswerService.html":{}}}],["notfoundexception(authdto",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["notfoundexception(finddto",{"_index":1060,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["notfoundexception(querydto",{"_index":1052,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["notfoundexception(this.root",{"_index":1360,"title":{},"body":{"injectables/ExamTargetTree.html":{}}}],["null",{"_index":122,"title":{},"body":{"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"classes/ExamRepository.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"classes/ExamTitle1621036457247.html":{},"injectables/ExportationRepository.html":{},"injectables/FirebaseAuthService.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/UserEmail1625013724392.html":{}}}],["nullable",{"_index":91,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/ExamAgreement.html":{},"classes/Period.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/Student.html":{},"classes/User.html":{}}}],["number",{"_index":41,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer.html":{},"controllers/AnswerController.html":{},"classes/AnswerGrade.html":{},"injectables/AnswerService.html":{},"classes/Auth.html":{},"interfaces/BatchUser.html":{},"classes/CopyQuestionGroupDto.html":{},"classes/Course.html":{},"classes/CreateAnswerDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"interfaces/CsvLineRow.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreementDto.html":{},"injectables/ExamAgreementService.html":{},"interfaces/ExamAgreementUser.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/ExamTarget.html":{},"interfaces/ExamUser.html":{},"controllers/ExportationController.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"classes/FFEntity.html":{},"interfaces/FileSendDto.html":{},"classes/FindPersonalDto.html":{},"classes/Grade.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IEntity.html":{},"interfaces/IException.html":{},"classes/Period.html":{},"classes/Professor.html":{},"classes/Question.html":{},"controllers/QuestionController.html":{},"classes/QuestionFindDto.html":{},"classes/QuestionGroup.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"injectables/QuestionGroupService.html":{},"interfaces/QuestionGroupUser.html":{},"injectables/QuestionService.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/SeedAuxiliary1624412129413.html":{},"interfaces/SoftDeleteResult.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"classes/User.html":{},"interfaces/UserResult.html":{},"miscellaneous/variables.html":{}}}],["não",{"_index":775,"title":{},"body":{"classes/CreateQuestionDto.html":{},"injectables/ExportationRepository.html":{}}}],["o.type",{"_index":707,"title":{},"body":{"classes/CreateAnswerDto.html":{}}}],["object",{"_index":2890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.assign(new",{"_index":2077,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{}}}],["object.values(examtargettype",{"_index":1279,"title":{},"body":{"controllers/ExamTargetController.html":{}}}],["objects",{"_index":1468,"title":{},"body":{"injectables/ExportationService.html":{},"dependencies.html":{}}}],["objectstocsv",{"_index":1467,"title":{},"body":{"injectables/ExportationService.html":{}}}],["objectstocsv(csvlines",{"_index":1481,"title":{},"body":{"injectables/ExportationService.html":{}}}],["obrigatória",{"_index":777,"title":{},"body":{"classes/CreateQuestionDto.html":{}}}],["observable",{"_index":1999,"title":{},"body":{"injectables/PayloadInterceptor.html":{}}}],["observation",{"_index":840,"title":{},"body":{"interfaces/CsvLineRow.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"injectables/ExportationRepository.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{}}}],["observação",{"_index":830,"title":{},"body":{"interfaces/CsvLine.html":{},"injectables/ExportationRepository.html":{}}}],["omittype",{"_index":721,"title":{},"body":{"classes/CreateExamAgreementDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionsDto.html":{}}}],["omittype(createquestiondto",{"_index":759,"title":{},"body":{"classes/CreateQuestion.html":{},"classes/CreateQuestionsDto.html":{}}}],["omittype(examagreementdto",{"_index":726,"title":{},"body":{"classes/CreateExamAgreementDto.html":{}}}],["onetomany",{"_index":684,"title":{},"body":{"classes/Course.html":{},"classes/Exam.html":{},"classes/Grade.html":{},"classes/Period.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/Subject.html":{},"classes/User.html":{}}}],["onetomany(undefined",{"_index":681,"title":{},"body":{"classes/Course.html":{},"classes/Exam.html":{},"classes/Grade.html":{},"classes/Period.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/User.html":{}}}],["optional",{"_index":24,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"classes/AnswerGrade.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"classes/Auth1619445806509.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateAnswerDto.html":{},"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"interfaces/CsvLine.html":{},"interfaces/CsvLineRow.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"interfaces/ExamAgreementUser.html":{},"controllers/ExamController.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"controllers/ExamTargetController.html":{},"interfaces/ExamTargetManagerDto.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"classes/ExamTitle1621036457247.html":{},"controllers/ExportationController.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"interfaces/FileSendDto.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseAuthDecodedToken.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptions.html":{},"injectables/FirebaseStorageService.html":{},"interfaces/FirebaseStorageUploadDto.html":{},"injectables/FirebaseUploader.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/GradeIndex1624560625346.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IException.html":{},"injectables/JwtStrategy.html":{},"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"classes/Period.html":{},"classes/PeriodIndex1624547816204.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Professor.html":{},"injectables/ProfessorService.html":{},"classes/Question.html":{},"controllers/QuestionController.html":{},"classes/QuestionFindDto.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"injectables/QuestionService.html":{},"classes/SeedAuxiliary1624412129413.html":{},"injectables/SendEmailService.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"injectables/TemplateService.html":{},"classes/UpdateExamAgreementDto.html":{},"controllers/UploadController.html":{},"classes/UploaderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserEmail1625013724392.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1533,"title":{},"body":{"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"injectables/FirebaseCloudMessagingService.html":{},"modules/FirebaseModule.html":{}}}],["options.databaseurl",{"_index":1577,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["options.imports",{"_index":1618,"title":{},"body":{"modules/FirebaseAdminModule.html":{}}}],["options.inject",{"_index":1620,"title":{},"body":{"modules/FirebaseAdminModule.html":{}}}],["options.interface",{"_index":1707,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["options.interface.ts",{"_index":1623,"title":{},"body":{"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseModuleOptions.html":{},"coverage.html":{}}}],["options.storagebucket",{"_index":1579,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["options.usefactory",{"_index":1619,"title":{},"body":{"modules/FirebaseAdminModule.html":{}}}],["optionssuccessstatus",{"_index":2857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["order",{"_index":1439,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["origin",{"_index":2644,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["origin(origin",{"_index":2781,"title":{},"body":{"miscellaneous/functions.html":{}}}],["originalname",{"_index":1494,"title":{},"body":{"injectables/ExportationService.html":{},"interfaces/FileSendDto.html":{}}}],["out",{"_index":272,"title":{},"body":{"modules/AnswerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuxiliaryModule.html":{},"modules/CaslModule.html":{},"modules/CoreModule.html":{},"modules/ExamModule.html":{},"modules/ExportationModule.html":{},"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{},"modules/InfraModule.html":{},"modules/LoggerModule.html":{},"modules/QuestionGroupModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":2819,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.type",{"_index":1343,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["package",{"_index":2699,"title":{"dependencies.html":{}},"body":{}}],["padrão",{"_index":790,"title":{},"body":{"classes/CreateQuestionDto.html":{}}}],["padrão'})@isboolean()@isoptional",{"_index":785,"title":{},"body":{"classes/CreateQuestionDto.html":{}}}],["padstart",{"_index":937,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["padstart(`${math.round(math.random",{"_index":944,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["para",{"_index":2786,"title":{},"body":{"index.html":{}}}],["param",{"_index":190,"title":{},"body":{"controllers/AnswerController.html":{},"controllers/ExamController.html":{},"controllers/ExportationController.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{}}}],["param('examid",{"_index":219,"title":{},"body":{"controllers/AnswerController.html":{},"controllers/QuestionGroupController.html":{}}}],["param('groupid",{"_index":2163,"title":{},"body":{"controllers/QuestionController.html":{}}}],["param('id",{"_index":226,"title":{},"body":{"controllers/AnswerController.html":{},"controllers/ExamController.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{}}}],["parameters",{"_index":20,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"classes/Auth1619445806509.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"injectables/CaslAbilityFactory.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"controllers/ExamController.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"controllers/ExamTargetController.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"classes/ExamTitle1621036457247.html":{},"controllers/ExportationController.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"injectables/FirebaseStorageService.html":{},"injectables/FirebaseUploader.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/GradeIndex1624560625346.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"classes/PeriodIndex1624547816204.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"injectables/ProfessorService.html":{},"controllers/QuestionController.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"injectables/QuestionService.html":{},"classes/SeedAuxiliary1624412129413.html":{},"injectables/SendEmailService.html":{},"injectables/StudentService.html":{},"injectables/TemplateService.html":{},"controllers/UploadController.html":{},"classes/UploaderService.html":{},"controllers/UserController.html":{},"classes/UserEmail1625013724392.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parsearraypipe",{"_index":191,"title":{},"body":{"controllers/AnswerController.html":{}}}],["parseint(process.env.db_port",{"_index":2869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseint(process.env.db_query_timeout",{"_index":2871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseint(process.env.rate_limit_max",{"_index":2927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseint(process.env.rate_limit_window_ms",{"_index":2925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseintpipe",{"_index":193,"title":{},"body":{"controllers/AnswerController.html":{},"controllers/ExamController.html":{},"controllers/ExportationController.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{}}}],["partialpath",{"_index":1302,"title":{},"body":{"classes/ExamTargetNode.html":{}}}],["partialtype",{"_index":2496,"title":{},"body":{"classes/UpdateAnswerDto.html":{},"classes/UpdateExamDto.html":{},"classes/UpdateQuestionDto.html":{},"classes/UpdateQuestionGroupDto.html":{}}}],["partialtype(createanswerdto",{"_index":2499,"title":{},"body":{"classes/UpdateAnswerDto.html":{}}}],["partialtype(createexamdto",{"_index":2506,"title":{},"body":{"classes/UpdateExamDto.html":{}}}],["partialtype(createquestiondto",{"_index":2508,"title":{},"body":{"classes/UpdateQuestionDto.html":{}}}],["partialtype(createquestiongroupdto",{"_index":2509,"title":{},"body":{"classes/UpdateQuestionGroupDto.html":{}}}],["partialuser",{"_index":2619,"title":{},"body":{"injectables/UserService.html":{}}}],["partialuser.type",{"_index":2620,"title":{},"body":{"injectables/UserService.html":{}}}],["pass",{"_index":2919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport",{"_index":1946,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":1943,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1950,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":57,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IEntity.html":{},"classes/LoginDto.html":{},"classes/SeedAuxiliary1624412129413.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["password_max",{"_index":711,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/LoginDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["password_min",{"_index":1967,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":2151,"title":{},"body":{"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{}}}],["patch()@apiokresponse({type",{"_index":2145,"title":{},"body":{"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{}}}],["path",{"_index":1294,"title":{},"body":{"classes/ExamTargetNode.html":{},"injectables/ExamTargetTree.html":{},"injectables/FirebaseStorageService.html":{},"injectables/FirebaseUploader.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"injectables/TemplateService.html":{},"classes/UploaderService.html":{},"miscellaneous/typealiases.html":{}}}],["path).replace(/^\\//u",{"_index":1756,"title":{},"body":{"injectables/FirebaseUploader.html":{}}}],["path}/${filedto.originalname",{"_index":1753,"title":{},"body":{"injectables/FirebaseUploader.html":{}}}],["path}/${randombytes(32).tostring('hex",{"_index":1754,"title":{},"body":{"injectables/FirebaseUploader.html":{}}}],["payload",{"_index":1941,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.interface",{"_index":1949,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.interface.ts",{"_index":1934,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["payload.uid",{"_index":1958,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payloadinterceptor",{"_index":672,"title":{"injectables/PayloadInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"injectables/PayloadInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["period",{"_index":534,"title":{"classes/Period.html":{}},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Exam.html":{},"injectables/ExamService.html":{},"classes/Grade.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"interfaces/IEntity.html":{},"classes/Period.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/PeriodRepository.html":{},"injectables/PeriodService.html":{},"classes/SeedAuxiliary1624412129413.html":{},"coverage.html":{}}}],["period.entity",{"_index":1778,"title":{},"body":{"classes/Grade.html":{}}}],["period.id",{"_index":1806,"title":{},"body":{"classes/GradeRepository.html":{},"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["period_id",{"_index":533,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"interfaces/IEntity.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["period`(`id",{"_index":560,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/PeriodIndex1624547816204.html":{}}}],["periodid",{"_index":856,"title":{},"body":{"classes/Exam.html":{},"classes/Grade.html":{},"classes/GradeRepository.html":{}}}],["periodindex.ts",{"_index":2015,"title":{},"body":{"classes/PeriodIndex1624547816204.html":{},"coverage.html":{}}}],["periodindex.ts:13",{"_index":2017,"title":{},"body":{"classes/PeriodIndex1624547816204.html":{}}}],["periodindex.ts:4",{"_index":2016,"title":{},"body":{"classes/PeriodIndex1624547816204.html":{}}}],["periodindex.ts:6",{"_index":2018,"title":{},"body":{"classes/PeriodIndex1624547816204.html":{}}}],["periodindex1624547816204",{"_index":2013,"title":{"classes/PeriodIndex1624547816204.html":{}},"body":{"classes/PeriodIndex1624547816204.html":{},"coverage.html":{}}}],["periodrepository",{"_index":597,"title":{"classes/PeriodRepository.html":{}},"body":{"modules/AuxiliaryModule.html":{},"classes/PeriodRepository.html":{},"injectables/PeriodService.html":{},"coverage.html":{}}}],["periodservice",{"_index":591,"title":{"injectables/PeriodService.html":{}},"body":{"modules/AuxiliaryModule.html":{},"injectables/ExamService.html":{},"injectables/PeriodService.html":{},"coverage.html":{},"overview.html":{}}}],["personal",{"_index":551,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/CreateQuestionGroupDto.html":{},"controllers/ExamController.html":{},"classes/ExamPersonalResult.html":{},"injectables/ExamService.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"coverage.html":{}}}],["personal.dto",{"_index":2295,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["personal.dto.ts",{"_index":1511,"title":{},"body":{"classes/FindPersonalDto.html":{},"coverage.html":{}}}],["personal.dto.ts:5",{"_index":1512,"title":{},"body":{"classes/FindPersonalDto.html":{}}}],["personal.dto.ts:6",{"_index":1514,"title":{},"body":{"classes/FindPersonalDto.html":{}}}],["personalgroup",{"_index":2275,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["personalgroups",{"_index":2321,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["personalquestiongroup",{"_index":2050,"title":{"injectables/PersonalQuestionGroup.html":{}},"body":{"injectables/PersonalQuestionGroup.html":{},"modules/QuestionGroupModule.html":{},"injectables/QuestionGroupService.html":{},"coverage.html":{},"overview.html":{}}}],["pessoal",{"_index":831,"title":{},"body":{"interfaces/CsvLine.html":{},"injectables/ExportationRepository.html":{},"miscellaneous/enumerations.html":{}}}],["pick",{"_index":1624,"title":{},"body":{"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseModuleOptions.html":{}}}],["picktype",{"_index":813,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["picktype(createauthdto",{"_index":818,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["ping",{"_index":365,"title":{},"body":{"controllers/AppController.html":{}}}],["pode",{"_index":774,"title":{},"body":{"classes/CreateQuestionDto.html":{}}}],["pong",{"_index":366,"title":{},"body":{"controllers/AppController.html":{}}}],["pool",{"_index":2912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["por",{"_index":784,"title":{},"body":{"classes/CreateQuestionDto.html":{}}}],["port",{"_index":2868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["position",{"_index":570,"title":{},"body":{"classes/Auxiliary1624416663574.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"injectables/QuestionService.html":{}}}],["post",{"_index":188,"title":{},"body":{"controllers/AnswerController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ExamAgreementController.html":{},"controllers/ExamController.html":{},"controllers/ExportationController.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{}}}],["post('/csv/:examid",{"_index":1372,"title":{},"body":{"controllers/ExportationController.html":{}}}],["post(':groupid",{"_index":2162,"title":{},"body":{"controllers/QuestionController.html":{}}}],["post(':groupid')@apiokresponse({type",{"_index":2133,"title":{},"body":{"controllers/QuestionController.html":{}}}],["post('batch/:examid",{"_index":218,"title":{},"body":{"controllers/AnswerController.html":{}}}],["post('batch/:examid')@apiokresponse({type",{"_index":178,"title":{},"body":{"controllers/AnswerController.html":{}}}],["post('health",{"_index":373,"title":{},"body":{"controllers/AppController.html":{}}}],["post('health')@httpcode(200",{"_index":369,"title":{},"body":{"controllers/AppController.html":{}}}],["post()@apiokresponse({type",{"_index":1083,"title":{},"body":{"controllers/ExamController.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{}}}],["post()@useinterceptors(undefined",{"_index":2513,"title":{},"body":{"controllers/UploadController.html":{}}}],["prefix",{"_index":170,"title":{},"body":{"controllers/AnswerController.html":{},"controllers/AuthController.html":{},"controllers/ExamAgreementController.html":{},"controllers/ExamController.html":{},"controllers/ExamTargetController.html":{},"controllers/ExportationController.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{}}}],["primary",{"_index":149,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/ExamTarget1622326106015.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{}}}],["primarygeneratedcolumn",{"_index":97,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/Auth.html":{},"classes/Course.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamTarget.html":{},"classes/FFEntity.html":{},"classes/Grade.html":{},"classes/Period.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/User.html":{}}}],["private",{"_index":327,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"injectables/FirebaseStorageService.html":{},"injectables/FirebaseUploader.html":{},"injectables/GradeService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"injectables/JwtStrategy.html":{},"injectables/NodeMailerService.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"injectables/ProfessorService.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"injectables/SendEmailService.html":{},"injectables/StudentService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{}}}],["process.env.admin_password",{"_index":48,"title":{},"body":{"classes/AdminUser1620299822480.html":{}}}],["process.env.db_database",{"_index":2867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_host",{"_index":2863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_logging",{"_index":2882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_password",{"_index":2866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_user",{"_index":2865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.exported_file_prefix",{"_index":1477,"title":{},"body":{"injectables/ExportationService.html":{}}}],["process.env.firebase_admin",{"_index":2892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.firebase_bucket",{"_index":2896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.jwt_secret",{"_index":2905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.mail_from",{"_index":2918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.mail_password",{"_index":2920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":2860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.sentry_dsn",{"_index":2931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.nexttick",{"_index":2416,"title":{},"body":{"injectables/SendEmailService.html":{}}}],["production",{"_index":1853,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"miscellaneous/variables.html":{}}}],["professor",{"_index":846,"title":{"classes/Professor.html":{}},"body":{"interfaces/CsvLineRow.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"classes/Grade.html":{},"classes/GradeRepository.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Professor.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["professor.entity",{"_index":1779,"title":{},"body":{"classes/Grade.html":{}}}],["professor_grade",{"_index":572,"title":{},"body":{"classes/Auxiliary1624416663574.html":{},"classes/Grade.html":{}}}],["professorgrades",{"_index":2083,"title":{},"body":{"classes/Professor.html":{}}}],["professorrepository",{"_index":599,"title":{"classes/ProfessorRepository.html":{}},"body":{"modules/AuxiliaryModule.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"coverage.html":{}}}],["professors",{"_index":1767,"title":{},"body":{"classes/Grade.html":{}}}],["professorservice",{"_index":592,"title":{"injectables/ProfessorService.html":{}},"body":{"modules/AuxiliaryModule.html":{},"injectables/ProfessorService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["programas",{"_index":2799,"title":{},"body":{"index.html":{}}}],["projectmanagement",{"_index":1529,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["promise",{"_index":26,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"classes/Auth1619445806509.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"controllers/ExamController.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"controllers/ExamTargetController.html":{},"injectables/ExamTargetService.html":{},"classes/ExamTitle1621036457247.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"injectables/FirebaseAdmin.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"interfaces/FirebaseModuleOptions.html":{},"injectables/FirebaseStorageService.html":{},"injectables/FirebaseUploader.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/GradeIndex1624560625346.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"interfaces/IEntity.html":{},"injectables/JwtStrategy.html":{},"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"classes/PeriodIndex1624547816204.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Professor.html":{},"injectables/ProfessorService.html":{},"controllers/QuestionController.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"injectables/QuestionService.html":{},"classes/SeedAuxiliary1624412129413.html":{},"injectables/SendEmailService.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"classes/UploaderService.html":{},"classes/UserEmail1625013724392.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":1335,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["promise.all",{"_index":341,"title":{},"body":{"injectables/AnswerService.html":{},"classes/ExamTargetAdd1622378888497.html":{},"injectables/QuestionGroupService.html":{}}}],["promise.all(targets.map(target",{"_index":1251,"title":{},"body":{"classes/ExamTarget1622326106015.html":{}}}],["properties",{"_index":73,"title":{},"body":{"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"classes/AnswerGrade.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"classes/AuthDto.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"interfaces/BatchUser.html":{},"classes/CopyQuestionGroupDto.html":{},"classes/Course.html":{},"classes/CreateAnswerDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CsvLine.html":{},"interfaces/CsvLineRow.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/ExamAgreementDto.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"interfaces/ExamAgreementUser.html":{},"classes/ExamPersonalResult.html":{},"injectables/ExamService.html":{},"classes/ExamTarget.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"interfaces/ExamTargetManagerDto.html":{},"classes/ExamTargetNode.html":{},"interfaces/ExamTargetNodeSchema.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"classes/ExamTitle1621036457247.html":{},"interfaces/ExamUser.html":{},"classes/FFEntity.html":{},"interfaces/FileSendDto.html":{},"interfaces/FindExamByUserDto.html":{},"classes/FindPersonalDto.html":{},"injectables/FirebaseAdmin.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseAuthDecodedToken.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"interfaces/FirebaseModuleOptions.html":{},"injectables/FirebaseStorageService.html":{},"interfaces/FirebaseStorageUploadDto.html":{},"classes/Grade.html":{},"classes/GradeIndex1624560625346.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IEntity.html":{},"interfaces/IException.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"classes/Period.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionFindDto.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"interfaces/QuestionGroupUser.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"interfaces/SendAgreementEmailDto.html":{},"classes/SendMailDto.html":{},"interfaces/SoftDeleteResult.html":{},"classes/Student.html":{},"classes/Subject.html":{},"interfaces/SwaggerOptions.html":{},"injectables/TemplateService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserEmail1625013724392.html":{},"interfaces/UserResult.html":{}}}],["propriedade",{"_index":780,"title":{},"body":{"classes/CreateQuestionDto.html":{}}}],["provide",{"_index":1615,"title":{},"body":{"modules/FirebaseAdminModule.html":{},"modules/InfraModule.html":{}}}],["provider",{"_index":1612,"title":{},"body":{"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{}}}],["providers",{"_index":263,"title":{},"body":{"modules/AnswerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuxiliaryModule.html":{},"modules/CaslModule.html":{},"modules/CoreModule.html":{},"modules/ExamModule.html":{},"modules/ExportationModule.html":{},"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{},"modules/InfraModule.html":{},"modules/LoggerModule.html":{},"modules/QuestionGroupModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["providers/exam",{"_index":1130,"title":{},"body":{"modules/ExamModule.html":{},"injectables/ExamTargetService.html":{}}}],["providers/firebase",{"_index":1613,"title":{},"body":{"modules/FirebaseAdminModule.html":{}}}],["providers/personal",{"_index":2266,"title":{},"body":{"modules/QuestionGroupModule.html":{},"injectables/QuestionGroupService.html":{}}}],["public",{"_index":12,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer1622421768424.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"classes/ExamTitle1621036457247.html":{},"injectables/FirebaseStorageService.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/GradeIndex1624560625346.html":{},"interfaces/IEntity.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/UserEmail1625013724392.html":{}}}],["publicfile",{"_index":1724,"title":{},"body":{"injectables/FirebaseStorageService.html":{},"interfaces/FirebaseStorageUploadDto.html":{},"injectables/FirebaseUploader.html":{}}}],["put",{"_index":192,"title":{},"body":{"controllers/AnswerController.html":{},"controllers/ExamAgreementController.html":{},"controllers/ExamController.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"controllers/UserController.html":{}}}],["put(':id",{"_index":186,"title":{},"body":{"controllers/AnswerController.html":{},"controllers/ExamController.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{}}}],["put(':id')@apiokresponse({type",{"_index":2149,"title":{},"body":{"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{}}}],["put()@apiokresponse({type",{"_index":976,"title":{},"body":{"controllers/ExamAgreementController.html":{},"controllers/QuestionGroupController.html":{}}}],["q",{"_index":1434,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["q.group_id",{"_index":1437,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["q.id",{"_index":1415,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["q.statement",{"_index":1416,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["qb",{"_index":2380,"title":{},"body":{"injectables/QuestionService.html":{}}}],["qb.where(`${qb.alias}.groupid",{"_index":2382,"title":{},"body":{"injectables/QuestionService.html":{}}}],["qg",{"_index":1436,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["qg.class",{"_index":1412,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["qg.id",{"_index":1414,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["qg.personal",{"_index":1413,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["qg.title",{"_index":1411,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["query",{"_index":978,"title":{},"body":{"controllers/ExamAgreementController.html":{},"classes/ExamRepository.html":{},"classes/GradeRepository.html":{},"controllers/QuestionController.html":{}}}],["query.andwhere('exam.id",{"_index":1185,"title":{},"body":{"classes/ExamRepository.html":{}}}],["query.getmany",{"_index":1808,"title":{},"body":{"classes/GradeRepository.html":{}}}],["query.innerjoin('grade.professors",{"_index":1803,"title":{},"body":{"classes/GradeRepository.html":{}}}],["query.innerjoin('grade.students",{"_index":1802,"title":{},"body":{"classes/GradeRepository.html":{}}}],["querydto",{"_index":972,"title":{},"body":{"controllers/ExamAgreementController.html":{},"injectables/ExamAgreementService.html":{}}}],["querydto.examid",{"_index":1050,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["querydto.user.id",{"_index":1051,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["queryrunner",{"_index":17,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer1622421768424.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"classes/ExamTitle1621036457247.html":{},"injectables/ExportationRepository.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/GradeIndex1624560625346.html":{},"interfaces/IEntity.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/UserEmail1625013724392.html":{}}}],["queryrunner.manager.query",{"_index":44,"title":{},"body":{"classes/AdminUser1620299822480.html":{}}}],["queryrunner.manager.query('delete",{"_index":65,"title":{},"body":{"classes/AdminUser1620299822480.html":{}}}],["queryrunner.query",{"_index":295,"title":{},"body":{"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"injectables/ExportationRepository.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"interfaces/IEntity.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/UserEmail1625013724392.html":{}}}],["queryrunner.query(\"alter",{"_index":152,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Exam1620478273991.html":{},"classes/ExamTitle1621036457247.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{}}}],["queryrunner.query(\"create",{"_index":135,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/Auxiliary1624416663574.html":{},"classes/GradeIndex1624560625346.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionPositionIdx1620563708532.html":{}}}],["queryrunner.query(\"drop",{"_index":165,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/Auxiliary1624416663574.html":{},"classes/GradeIndex1624560625346.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionPositionIdx1620563708532.html":{}}}],["queryrunner.query('alter",{"_index":294,"title":{},"body":{"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auxiliary1620477175799.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/UserEmail1625013724392.html":{}}}],["queryrunner.query('delete",{"_index":1904,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["queryrunner.query('drop",{"_index":430,"title":{},"body":{"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/ExamTarget1622326106015.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{}}}],["queryrunner.query('insert",{"_index":1252,"title":{},"body":{"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{}}}],["querytarget",{"_index":1347,"title":{},"body":{"injectables/ExamTargetTree.html":{}}}],["querytarget(target",{"_index":1351,"title":{},"body":{"injectables/ExamTargetTree.html":{}}}],["question",{"_index":76,"title":{"classes/Question.html":{}},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"injectables/AnswerService.html":{},"modules/AppModule.html":{},"classes/Auxiliary1620477175799.html":{},"classes/CopyQuestionGroupDto.html":{},"classes/CreateQuestionGroupDto.html":{},"injectables/ExportationRepository.html":{},"classes/Question.html":{},"controllers/QuestionController.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/QuestionRepository.html":{},"injectables/QuestionService.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/UpdateQuestionGroupDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["question.constants",{"_index":2066,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{}}}],["question.dto",{"_index":758,"title":{},"body":{"classes/CreateQuestion.html":{},"classes/CreateQuestionsDto.html":{},"controllers/QuestionController.html":{},"injectables/QuestionService.html":{},"classes/UpdateQuestionDto.html":{}}}],["question.dto.ts",{"_index":762,"title":{},"body":{"classes/CreateQuestionDto.html":{},"classes/ReorderQuestionDto.html":{},"classes/UpdateQuestionDto.html":{},"coverage.html":{}}}],["question.dto.ts:14",{"_index":787,"title":{},"body":{"classes/CreateQuestionDto.html":{}}}],["question.dto.ts:18",{"_index":771,"title":{},"body":{"classes/CreateQuestionDto.html":{}}}],["question.dto.ts:23",{"_index":769,"title":{},"body":{"classes/CreateQuestionDto.html":{}}}],["question.dto.ts:32",{"_index":786,"title":{},"body":{"classes/CreateQuestionDto.html":{}}}],["question.dto.ts:35",{"_index":767,"title":{},"body":{"classes/CreateQuestionDto.html":{}}}],["question.dto.ts:5",{"_index":2396,"title":{},"body":{"classes/ReorderQuestionDto.html":{}}}],["question.dto.ts:9",{"_index":2398,"title":{},"body":{"classes/ReorderQuestionDto.html":{}}}],["question.entity",{"_index":2185,"title":{},"body":{"classes/QuestionGroup.html":{}}}],["question.group",{"_index":2194,"title":{},"body":{"classes/QuestionGroup.html":{}}}],["question.groupid",{"_index":2385,"title":{},"body":{"injectables/QuestionService.html":{}}}],["question.id",{"_index":338,"title":{},"body":{"injectables/AnswerService.html":{}}}],["question.position",{"_index":2386,"title":{},"body":{"injectables/QuestionService.html":{}}}],["question.service",{"_index":2292,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["question_group",{"_index":550,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/ExamTarget1622326106015.html":{},"injectables/ExportationRepository.html":{},"classes/GradeIndex1624560625346.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{}}}],["question_group_grade",{"_index":569,"title":{},"body":{"classes/Auxiliary1624416663574.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{}}}],["question_group`(`id",{"_index":556,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPositionIdx1620563708532.html":{}}}],["question_id",{"_index":146,"title":{},"body":{"classes/Answer1622421768424.html":{},"interfaces/CsvLineRow.html":{},"injectables/ExportationRepository.html":{}}}],["question_statement",{"_index":841,"title":{},"body":{"interfaces/CsvLineRow.html":{},"injectables/ExportationRepository.html":{}}}],["question`(`id",{"_index":161,"title":{},"body":{"classes/Answer1622421768424.html":{}}}],["questioncontroller",{"_index":2125,"title":{"controllers/QuestionController.html":{}},"body":{"controllers/QuestionController.html":{},"modules/QuestionGroupModule.html":{},"coverage.html":{}}}],["questionfinddto",{"_index":2136,"title":{"classes/QuestionFindDto.html":{}},"body":{"controllers/QuestionController.html":{},"classes/QuestionFindDto.html":{},"injectables/QuestionService.html":{},"coverage.html":{}}}],["questiongroup",{"_index":631,"title":{"classes/QuestionGroup.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"classes/Exam.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupRepository.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["questiongroup.exam",{"_index":2296,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["questiongroup.examid",{"_index":2305,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["questiongroup.position",{"_index":2298,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["questiongroup.ts",{"_index":2199,"title":{},"body":{"classes/QuestionGroup1620179231630.html":{},"coverage.html":{}}}],["questiongroup.ts:12",{"_index":2201,"title":{},"body":{"classes/QuestionGroup1620179231630.html":{}}}],["questiongroup.ts:4",{"_index":2200,"title":{},"body":{"classes/QuestionGroup1620179231630.html":{}}}],["questiongroup.ts:6",{"_index":2202,"title":{},"body":{"classes/QuestionGroup1620179231630.html":{}}}],["questiongroup1620179231630",{"_index":2197,"title":{"classes/QuestionGroup1620179231630.html":{}},"body":{"classes/QuestionGroup1620179231630.html":{},"coverage.html":{}}}],["questiongroup:17",{"_index":2248,"title":{},"body":{"classes/QuestionGroupGrade.html":{}}}],["questiongroup:21",{"_index":2242,"title":{},"body":{"classes/QuestionGroupGrade.html":{}}}],["questiongroup:24",{"_index":2245,"title":{},"body":{"classes/QuestionGroupGrade.html":{}}}],["questiongroup:28",{"_index":2246,"title":{},"body":{"classes/QuestionGroupGrade.html":{}}}],["questiongroup:31",{"_index":2244,"title":{},"body":{"classes/QuestionGroupGrade.html":{}}}],["questiongroup:34",{"_index":2247,"title":{},"body":{"classes/QuestionGroupGrade.html":{}}}],["questiongroup:37",{"_index":2243,"title":{},"body":{"classes/QuestionGroupGrade.html":{}}}],["questiongroup:40",{"_index":2249,"title":{},"body":{"classes/QuestionGroupGrade.html":{}}}],["questiongroupcontroller",{"_index":2205,"title":{"controllers/QuestionGroupController.html":{}},"body":{"controllers/QuestionGroupController.html":{},"modules/QuestionGroupModule.html":{},"coverage.html":{}}}],["questiongroupgrade",{"_index":2061,"title":{"classes/QuestionGroupGrade.html":{}},"body":{"injectables/PersonalQuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"coverage.html":{}}}],["questiongroupgraderemove.ts",{"_index":2252,"title":{},"body":{"classes/QuestionGroupGradeRemove1624883202213.html":{},"coverage.html":{}}}],["questiongroupgraderemove.ts:12",{"_index":2254,"title":{},"body":{"classes/QuestionGroupGradeRemove1624883202213.html":{}}}],["questiongroupgraderemove.ts:6",{"_index":2253,"title":{},"body":{"classes/QuestionGroupGradeRemove1624883202213.html":{}}}],["questiongroupgraderemove.ts:8",{"_index":2255,"title":{},"body":{"classes/QuestionGroupGradeRemove1624883202213.html":{}}}],["questiongroupgraderemove1624883202213",{"_index":2250,"title":{"classes/QuestionGroupGradeRemove1624883202213.html":{}},"body":{"classes/QuestionGroupGradeRemove1624883202213.html":{},"coverage.html":{}}}],["questiongroupmodule",{"_index":269,"title":{"modules/QuestionGroupModule.html":{}},"body":{"modules/AnswerModule.html":{},"modules/AppModule.html":{},"modules/QuestionGroupModule.html":{},"modules.html":{},"overview.html":{}}}],["questiongroupnotfound",{"_index":2290,"title":{},"body":{"injectables/QuestionGroupService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["questiongrouprelations",{"_index":2065,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{},"injectables/QuestionGroupService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["questiongrouprepository",{"_index":2054,"title":{"classes/QuestionGroupRepository.html":{}},"body":{"injectables/PersonalQuestionGroup.html":{},"modules/QuestionGroupModule.html":{},"classes/QuestionGroupRepository.html":{},"injectables/QuestionGroupService.html":{},"coverage.html":{}}}],["questiongroupservice",{"_index":2225,"title":{"injectables/QuestionGroupService.html":{}},"body":{"controllers/QuestionGroupController.html":{},"modules/QuestionGroupModule.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"coverage.html":{},"overview.html":{}}}],["questiongrouptarget.ts",{"_index":2326,"title":{},"body":{"classes/QuestionGroupTarget1621992475274.html":{},"coverage.html":{}}}],["questiongrouptarget.ts:25",{"_index":2328,"title":{},"body":{"classes/QuestionGroupTarget1621992475274.html":{}}}],["questiongrouptarget.ts:4",{"_index":2327,"title":{},"body":{"classes/QuestionGroupTarget1621992475274.html":{}}}],["questiongrouptarget.ts:6",{"_index":2329,"title":{},"body":{"classes/QuestionGroupTarget1621992475274.html":{}}}],["questiongrouptarget1621992475274",{"_index":2324,"title":{"classes/QuestionGroupTarget1621992475274.html":{}},"body":{"classes/QuestionGroupTarget1621992475274.html":{},"coverage.html":{}}}],["questiongroupuser",{"_index":2330,"title":{"interfaces/QuestionGroupUser.html":{}},"body":{"interfaces/QuestionGroupUser.html":{},"coverage.html":{}}}],["questiongroup})@apinotfoundresponse",{"_index":2210,"title":{},"body":{"controllers/QuestionGroupController.html":{}}}],["questionid",{"_index":77,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/CreateAnswerDto.html":{}}}],["questionids",{"_index":2389,"title":{},"body":{"injectables/QuestionService.html":{},"classes/ReorderQuestionDto.html":{}}}],["questionids.map((id",{"_index":2392,"title":{},"body":{"injectables/QuestionService.html":{}}}],["questionimage.ts",{"_index":2334,"title":{},"body":{"classes/QuestionImage1620477869366.html":{},"coverage.html":{}}}],["questionimage.ts:14",{"_index":2336,"title":{},"body":{"classes/QuestionImage1620477869366.html":{}}}],["questionimage.ts:4",{"_index":2335,"title":{},"body":{"classes/QuestionImage1620477869366.html":{}}}],["questionimage.ts:6",{"_index":2337,"title":{},"body":{"classes/QuestionImage1620477869366.html":{}}}],["questionimage1620477869366",{"_index":2332,"title":{"classes/QuestionImage1620477869366.html":{}},"body":{"classes/QuestionImage1620477869366.html":{},"coverage.html":{}}}],["questionmap",{"_index":334,"title":{},"body":{"injectables/AnswerService.html":{}}}],["questionmap.get(answerdto.questionid",{"_index":344,"title":{},"body":{"injectables/AnswerService.html":{}}}],["questionnotfound",{"_index":2372,"title":{},"body":{"injectables/QuestionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["questionposition.ts",{"_index":2340,"title":{},"body":{"classes/QuestionPosition1620488935141.html":{},"coverage.html":{}}}],["questionposition.ts:11",{"_index":2342,"title":{},"body":{"classes/QuestionPosition1620488935141.html":{}}}],["questionposition.ts:4",{"_index":2341,"title":{},"body":{"classes/QuestionPosition1620488935141.html":{}}}],["questionposition.ts:6",{"_index":2343,"title":{},"body":{"classes/QuestionPosition1620488935141.html":{}}}],["questionposition1620488935141",{"_index":2338,"title":{"classes/QuestionPosition1620488935141.html":{}},"body":{"classes/QuestionPosition1620488935141.html":{},"coverage.html":{}}}],["questionpositionidx.ts",{"_index":2346,"title":{},"body":{"classes/QuestionPositionIdx1620563708532.html":{},"coverage.html":{}}}],["questionpositionidx.ts:14",{"_index":2348,"title":{},"body":{"classes/QuestionPositionIdx1620563708532.html":{}}}],["questionpositionidx.ts:4",{"_index":2347,"title":{},"body":{"classes/QuestionPositionIdx1620563708532.html":{}}}],["questionpositionidx.ts:6",{"_index":2349,"title":{},"body":{"classes/QuestionPositionIdx1620563708532.html":{}}}],["questionpositionidx1620563708532",{"_index":2344,"title":{"classes/QuestionPositionIdx1620563708532.html":{}},"body":{"classes/QuestionPositionIdx1620563708532.html":{},"coverage.html":{}}}],["questionpositionmap",{"_index":2391,"title":{},"body":{"injectables/QuestionService.html":{}}}],["questionpositionmap.get(question.id",{"_index":2393,"title":{},"body":{"injectables/QuestionService.html":{}}}],["questionrepository",{"_index":2264,"title":{"classes/QuestionRepository.html":{}},"body":{"modules/QuestionGroupModule.html":{},"classes/QuestionRepository.html":{},"injectables/QuestionService.html":{},"coverage.html":{}}}],["questions",{"_index":330,"title":{},"body":{"injectables/AnswerService.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionsDto.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"miscellaneous/variables.html":{}}}],["questions.dto",{"_index":2158,"title":{},"body":{"controllers/QuestionController.html":{},"injectables/QuestionService.html":{}}}],["questions.dto.ts",{"_index":751,"title":{},"body":{"classes/CreateQuestion.html":{},"classes/CreateQuestionsDto.html":{},"coverage.html":{}}}],["questions.dto.ts:16",{"_index":753,"title":{},"body":{"classes/CreateQuestion.html":{}}}],["questions.dto.ts:25",{"_index":799,"title":{},"body":{"classes/CreateQuestionsDto.html":{}}}],["questions.map((question",{"_index":337,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionService.html":{}}}],["questionservice",{"_index":305,"title":{"injectables/QuestionService.html":{}},"body":{"injectables/AnswerService.html":{},"controllers/QuestionController.html":{},"modules/QuestionGroupModule.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"coverage.html":{},"overview.html":{}}}],["question})@apinotfoundresponse",{"_index":2139,"title":{},"body":{"controllers/QuestionController.html":{}}}],["questão",{"_index":773,"title":{},"body":{"classes/CreateQuestionDto.html":{},"interfaces/CsvLine.html":{},"injectables/ExportationRepository.html":{}}}],["questões",{"_index":827,"title":{},"body":{"interfaces/CsvLine.html":{},"injectables/ExportationRepository.html":{}}}],["randombytes",{"_index":1746,"title":{},"body":{"injectables/FirebaseUploader.html":{}}}],["rate",{"_index":2718,"title":{},"body":{"dependencies.html":{}}}],["ratelimit",{"_index":2928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ratelimitconfig",{"_index":2660,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ratelimitconfigkey",{"_index":2661,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["raw",{"_index":2428,"title":{},"body":{"interfaces/SoftDeleteResult.html":{}}}],["read",{"_index":2763,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["readdirsync",{"_index":2466,"title":{},"body":{"injectables/TemplateService.html":{}}}],["readdirsync(basepath",{"_index":2478,"title":{},"body":{"injectables/TemplateService.html":{}}}],["readfilesync",{"_index":2467,"title":{},"body":{"injectables/TemplateService.html":{}}}],["readfilesync(join(basepath",{"_index":2483,"title":{},"body":{"injectables/TemplateService.html":{}}}],["readonly",{"_index":217,"title":{},"body":{"controllers/AnswerController.html":{},"injectables/AnswerService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ExamAgreementController.html":{},"injectables/ExamAgreementService.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"controllers/ExamTargetController.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"controllers/ExportationController.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"injectables/FirebaseStorageService.html":{},"injectables/FirebaseUploader.html":{},"injectables/GradeService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"injectables/JwtStrategy.html":{},"injectables/NodeMailerService.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"injectables/ProfessorService.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"injectables/SendEmailService.html":{},"injectables/StudentService.html":{},"injectables/TemplateService.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"interfaces/UserResult.html":{},"injectables/UserService.html":{}}}],["readonlymap",{"_index":335,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/ExamTargetService.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"injectables/TemplateService.html":{},"miscellaneous/variables.html":{}}}],["record",{"_index":2457,"title":{},"body":{"interfaces/SwaggerOptions.html":{}}}],["reduce",{"_index":2074,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{}}}],["references",{"_index":157,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamTarget1622326106015.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPositionIdx1620563708532.html":{}}}],["reflect",{"_index":2735,"title":{},"body":{"dependencies.html":{}}}],["regexp",{"_index":2852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras",{"_index":2855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras('nodemailer",{"_index":2911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras('sentry",{"_index":2929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras(ratelimitconfigkey",{"_index":2923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regular",{"_index":426,"title":{},"body":{"classes/Auth1619445806509.html":{},"miscellaneous/enumerations.html":{}}}],["reject",{"_index":1336,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["reject(e",{"_index":1339,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["relations",{"_index":1059,"title":{},"body":{"injectables/ExamAgreementService.html":{},"injectables/ExamService.html":{},"injectables/PersonalQuestionGroup.html":{},"injectables/QuestionGroupService.html":{}}}],["remoteconfig",{"_index":1530,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["remove",{"_index":172,"title":{},"body":{"controllers/AnswerController.html":{},"injectables/AnswerService.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{}}}],["remove(@param('id",{"_index":228,"title":{},"body":{"controllers/AnswerController.html":{},"controllers/ExamController.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{}}}],["remove(id",{"_index":181,"title":{},"body":{"controllers/AnswerController.html":{},"injectables/AnswerService.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{}}}],["render",{"_index":2469,"title":{},"body":{"injectables/TemplateService.html":{}}}],["render(template",{"_index":2489,"title":{},"body":{"injectables/TemplateService.html":{}}}],["reorder",{"_index":2129,"title":{},"body":{"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{}}}],["reorder(reorderquesitondto",{"_index":2143,"title":{},"body":{"controllers/QuestionController.html":{}}}],["reorder(reorderquestiongroupdto",{"_index":2220,"title":{},"body":{"controllers/QuestionGroupController.html":{}}}],["reorder(undefined",{"_index":2284,"title":{},"body":{"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{}}}],["reorderquesitondto",{"_index":2147,"title":{},"body":{"controllers/QuestionController.html":{}}}],["reorderquestiondto",{"_index":2144,"title":{"classes/ReorderQuestionDto.html":{}},"body":{"controllers/QuestionController.html":{},"injectables/QuestionService.html":{},"classes/ReorderQuestionDto.html":{},"coverage.html":{}}}],["reorderquestiongroupdto",{"_index":2221,"title":{"classes/ReorderQuestionGroupDto.html":{}},"body":{"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{},"classes/ReorderQuestionGroupDto.html":{},"coverage.html":{}}}],["replace(/\\//gu",{"_index":1475,"title":{},"body":{"injectables/ExportationService.html":{}}}],["repositories/answer",{"_index":280,"title":{},"body":{"modules/AnswerModule.html":{},"injectables/AnswerService.html":{}}}],["repositories/answer.repository",{"_index":279,"title":{},"body":{"modules/AnswerModule.html":{},"injectables/AnswerService.html":{}}}],["repositories/auth.repository",{"_index":462,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["repositories/exam",{"_index":1031,"title":{},"body":{"injectables/ExamAgreementService.html":{},"modules/ExamModule.html":{},"injectables/ExamTargetService.html":{}}}],["repositories/exam.repository",{"_index":1123,"title":{},"body":{"modules/ExamModule.html":{},"injectables/ExamService.html":{}}}],["repositories/grade.repository",{"_index":596,"title":{},"body":{"modules/AuxiliaryModule.html":{},"injectables/GradeService.html":{}}}],["repositories/period.repository",{"_index":598,"title":{},"body":{"modules/AuxiliaryModule.html":{},"injectables/PeriodService.html":{}}}],["repositories/professor.repository",{"_index":600,"title":{},"body":{"modules/AuxiliaryModule.html":{},"injectables/ProfessorService.html":{}}}],["repositories/question",{"_index":2067,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{},"modules/QuestionGroupModule.html":{},"injectables/QuestionGroupService.html":{}}}],["repositories/question.repository",{"_index":2265,"title":{},"body":{"modules/QuestionGroupModule.html":{},"injectables/QuestionService.html":{}}}],["repositories/student.repository",{"_index":602,"title":{},"body":{"modules/AuxiliaryModule.html":{},"injectables/StudentService.html":{}}}],["repositories/user.repository",{"_index":2568,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["repository",{"_index":1010,"title":{},"body":{"injectables/ExamAgreementService.html":{},"injectables/ExamService.html":{},"injectables/ExamTargetService.html":{},"injectables/ExportationService.html":{},"injectables/PersonalQuestionGroup.html":{},"injectables/ProfessorService.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"injectables/StudentService.html":{}}}],["request",{"_index":1829,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"miscellaneous/variables.html":{}}}],["request.body",{"_index":1876,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["request.url",{"_index":1849,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["request.user",{"_index":2903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('bcryptjs",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["require('faker",{"_index":1886,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["require('lodash",{"_index":1331,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["required",{"_index":765,"title":{},"body":{"classes/CreateQuestionDto.html":{},"classes/Question.html":{},"classes/QuestionGroup1620179231630.html":{}}}],["reset",{"_index":271,"title":{},"body":{"modules/AnswerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuxiliaryModule.html":{},"modules/CaslModule.html":{},"modules/CoreModule.html":{},"modules/ExamModule.html":{},"modules/ExportationModule.html":{},"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{},"modules/InfraModule.html":{},"modules/LoggerModule.html":{},"modules/QuestionGroupModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolve(_.clonedeep(this._targetmap",{"_index":1337,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["response",{"_index":1830,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["response.status(status).send(ex",{"_index":1877,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["result",{"_index":39,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"classes/AnswerGrade.html":{},"classes/AnswerGradeRepository.html":{},"modules/AnswerModule.html":{},"classes/AnswerRepository.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"modules/AuxiliaryModule.html":{},"interfaces/BatchUser.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"classes/CopyQuestionGroupDto.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CreateAnswerDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CsvLine.html":{},"interfaces/CsvLineRow.html":{},"injectables/CustomLogger.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementDto.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementRepository.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"interfaces/ExamAgreementUser.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"classes/ExamPersonalResult.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"controllers/ExamTargetController.html":{},"interfaces/ExamTargetManagerDto.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"classes/ExamTargetRepository.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"classes/ExamTitle1621036457247.html":{},"interfaces/ExamUser.html":{},"controllers/ExportationController.html":{},"modules/ExportationModule.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"classes/FFEntity.html":{},"interfaces/FileSendDto.html":{},"interfaces/FindExamByUserDto.html":{},"classes/FindPersonalDto.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseAuthDecodedToken.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptions.html":{},"injectables/FirebaseStorageService.html":{},"interfaces/FirebaseStorageUploadDto.html":{},"injectables/FirebaseUploader.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/Grade.html":{},"classes/GradeIndex1624560625346.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IEntity.html":{},"interfaces/IException.html":{},"modules/InfraModule.html":{},"injectables/JwtGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/LoggerModule.html":{},"classes/LoginDto.html":{},"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"classes/Period.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/PeriodRepository.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Professor.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/Question.html":{},"controllers/QuestionController.html":{},"classes/QuestionFindDto.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"modules/QuestionGroupModule.html":{},"classes/QuestionGroupRepository.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"interfaces/QuestionGroupUser.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/QuestionRepository.html":{},"injectables/QuestionService.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/SeedAuxiliary1624412129413.html":{},"interfaces/SendAgreementEmailDto.html":{},"injectables/SendEmailService.html":{},"classes/SendMailDto.html":{},"interfaces/SoftDeleteResult.html":{},"classes/Student.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"interfaces/SwaggerOptions.html":{},"injectables/TemplateService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateAnswerDto.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"classes/UpdateExamDto.html":{},"classes/UpdateQuestionDto.html":{},"classes/UpdateQuestionGroupDto.html":{},"controllers/UploadController.html":{},"classes/UploaderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserEmail1625013724392.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserResult.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.interface",{"_index":321,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/ExamService.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"injectables/UserService.html":{}}}],["result.interface.ts",{"_index":2427,"title":{},"body":{"interfaces/SoftDeleteResult.html":{},"interfaces/UserResult.html":{},"coverage.html":{}}}],["result.model",{"_index":1100,"title":{},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{}}}],["result.model.ts",{"_index":1137,"title":{},"body":{"classes/ExamPersonalResult.html":{},"coverage.html":{}}}],["result.model.ts:4",{"_index":1140,"title":{},"body":{"classes/ExamPersonalResult.html":{}}}],["result.model.ts:5",{"_index":1142,"title":{},"body":{"classes/ExamPersonalResult.html":{}}}],["result.model.ts:6",{"_index":1141,"title":{},"body":{"classes/ExamPersonalResult.html":{}}}],["result.push(...personalgroups",{"_index":2323,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["result.raw.affectedrows",{"_index":1239,"title":{},"body":{"injectables/ExamService.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{}}}],["result?.length",{"_index":47,"title":{},"body":{"classes/AdminUser1620299822480.html":{}}}],["results",{"_index":68,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"classes/AnswerGrade.html":{},"classes/AnswerGradeRepository.html":{},"modules/AnswerModule.html":{},"classes/AnswerRepository.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"modules/AuxiliaryModule.html":{},"interfaces/BatchUser.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"classes/CopyQuestionGroupDto.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CreateAnswerDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CsvLine.html":{},"interfaces/CsvLineRow.html":{},"injectables/CustomLogger.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementDto.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementRepository.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"interfaces/ExamAgreementUser.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"classes/ExamPersonalResult.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"controllers/ExamTargetController.html":{},"interfaces/ExamTargetManagerDto.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"classes/ExamTargetRepository.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"classes/ExamTitle1621036457247.html":{},"interfaces/ExamUser.html":{},"controllers/ExportationController.html":{},"modules/ExportationModule.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"classes/FFEntity.html":{},"interfaces/FileSendDto.html":{},"interfaces/FindExamByUserDto.html":{},"classes/FindPersonalDto.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseAuthDecodedToken.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptions.html":{},"injectables/FirebaseStorageService.html":{},"interfaces/FirebaseStorageUploadDto.html":{},"injectables/FirebaseUploader.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/Grade.html":{},"classes/GradeIndex1624560625346.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IEntity.html":{},"interfaces/IException.html":{},"modules/InfraModule.html":{},"injectables/JwtGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/LoggerModule.html":{},"classes/LoginDto.html":{},"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"classes/Period.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/PeriodRepository.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Professor.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/Question.html":{},"controllers/QuestionController.html":{},"classes/QuestionFindDto.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"modules/QuestionGroupModule.html":{},"classes/QuestionGroupRepository.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"interfaces/QuestionGroupUser.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/QuestionRepository.html":{},"injectables/QuestionService.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/SeedAuxiliary1624412129413.html":{},"interfaces/SendAgreementEmailDto.html":{},"injectables/SendEmailService.html":{},"classes/SendMailDto.html":{},"interfaces/SoftDeleteResult.html":{},"classes/Student.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"interfaces/SwaggerOptions.html":{},"injectables/TemplateService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateAnswerDto.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"classes/UpdateExamDto.html":{},"classes/UpdateQuestionDto.html":{},"classes/UpdateQuestionGroupDto.html":{},"controllers/UploadController.html":{},"classes/UploaderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserEmail1625013724392.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserResult.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":222,"title":{},"body":{"controllers/AnswerController.html":{},"injectables/AnswerService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"controllers/ExamAgreementController.html":{},"injectables/ExamAgreementService.html":{},"controllers/ExamController.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"controllers/ExamTargetController.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"controllers/ExportationController.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"injectables/FirebaseStorageService.html":{},"injectables/FirebaseUploader.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"injectables/JwtStrategy.html":{},"injectables/PayloadInterceptor.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Professor.html":{},"injectables/ProfessorService.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"injectables/TemplateService.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":25,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"controllers/AppController.html":{},"classes/Auth1619445806509.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"injectables/CaslAbilityFactory.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"interfaces/ExamAgreementUser.html":{},"controllers/ExamController.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"controllers/ExamTargetController.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"classes/ExamTitle1621036457247.html":{},"controllers/ExportationController.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"injectables/FirebaseStorageService.html":{},"injectables/FirebaseUploader.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/GradeIndex1624560625346.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"classes/PeriodIndex1624547816204.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"injectables/ProfessorService.html":{},"controllers/QuestionController.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"injectables/QuestionService.html":{},"classes/SeedAuxiliary1624412129413.html":{},"injectables/SendEmailService.html":{},"injectables/StudentService.html":{},"injectables/TemplateService.html":{},"controllers/UploadController.html":{},"classes/UploaderService.html":{},"controllers/UserController.html":{},"classes/UserEmail1625013724392.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":2737,"title":{},"body":{"dependencies.html":{}}}],["rodar",{"_index":2793,"title":{},"body":{"index.html":{}}}],["role",{"_index":63,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Auth1619445806509.html":{},"classes/CreateUserDto.html":{},"interfaces/IEntity.html":{},"classes/Professor.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/Student.html":{},"classes/User.html":{}}}],["role.enum",{"_index":636,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["role.enum.ts",{"_index":2758,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["root",{"_index":1346,"title":{},"body":{"injectables/ExamTargetTree.html":{}}}],["row.interface",{"_index":1399,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["row.interface.ts",{"_index":836,"title":{},"body":{"interfaces/CsvLineRow.html":{},"coverage.html":{}}}],["runontransactioncomplete",{"_index":2598,"title":{},"body":{"injectables/UserService.html":{}}}],["runontransactioncomplete((e",{"_index":2606,"title":{},"body":{"injectables/UserService.html":{}}}],["rxjs",{"_index":2001,"title":{},"body":{"injectables/PayloadInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":2002,"title":{},"body":{"injectables/PayloadInterceptor.html":{}}}],["s",{"_index":1431,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["s.id",{"_index":1432,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["s.title",{"_index":1420,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["salt",{"_index":55,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"injectables/AuthService.html":{},"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["schema",{"_index":1274,"title":{},"body":{"controllers/ExamTargetController.html":{},"injectables/ExamTargetNodeFactory.html":{}}}],["schema.childs?.map((node",{"_index":1314,"title":{},"body":{"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{}}}],["schema.type",{"_index":1312,"title":{},"body":{"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{}}}],["scope",{"_index":851,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["scope.transient",{"_index":852,"title":{},"body":{"injectables/CustomLogger.html":{}}}],["score",{"_index":78,"title":{},"body":{"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"classes/AnswerGrade.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"classes/CreateAnswerDto.html":{},"interfaces/CsvLineRow.html":{},"injectables/ExportationRepository.html":{}}}],["se",{"_index":778,"title":{},"body":{"classes/CreateQuestionDto.html":{},"injectables/ExportationRepository.html":{}}}],["secret",{"_index":2904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":1955,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":2915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["securityrules",{"_index":1531,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["seedauxiliary1.ts",{"_index":1880,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seedauxiliary1.ts:17",{"_index":2402,"title":{},"body":{"classes/SeedAuxiliary1624412129413.html":{}}}],["seedauxiliary1.ts:90",{"_index":2401,"title":{},"body":{"classes/SeedAuxiliary1624412129413.html":{}}}],["seedauxiliary1624412129413",{"_index":1891,"title":{"classes/SeedAuxiliary1624412129413.html":{}},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{},"coverage.html":{}}}],["select",{"_index":45,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/ExamRepository.html":{},"injectables/ExportationRepository.html":{},"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{},"injectables/UserService.html":{}}}],["selectquerybuilder",{"_index":1169,"title":{},"body":{"classes/ExamRepository.html":{}}}],["send",{"_index":1972,"title":{},"body":{"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"injectables/SendEmailService.html":{}}}],["send(sendmaildto",{"_index":1973,"title":{},"body":{"classes/MailerService.html":{},"injectables/NodeMailerService.html":{}}}],["send.dto",{"_index":1750,"title":{},"body":{"injectables/FirebaseUploader.html":{},"classes/UploaderService.html":{}}}],["send.dto.ts",{"_index":1507,"title":{},"body":{"interfaces/FileSendDto.html":{},"coverage.html":{}}}],["sendagreementemail",{"_index":1004,"title":{},"body":{"injectables/ExamAgreementService.html":{},"injectables/SendEmailService.html":{}}}],["sendagreementemail(dto",{"_index":2409,"title":{},"body":{"injectables/SendEmailService.html":{}}}],["sendagreementemail(email",{"_index":1022,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["sendagreementemaildto",{"_index":2403,"title":{"interfaces/SendAgreementEmailDto.html":{}},"body":{"interfaces/SendAgreementEmailDto.html":{},"injectables/SendEmailService.html":{},"coverage.html":{}}}],["sendemailservice",{"_index":1008,"title":{"injectables/SendEmailService.html":{}},"body":{"injectables/ExamAgreementService.html":{},"modules/InfraModule.html":{},"injectables/SendEmailService.html":{},"coverage.html":{},"overview.html":{}}}],["sendmaildto",{"_index":1974,"title":{"classes/SendMailDto.html":{}},"body":{"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"classes/SendMailDto.html":{},"coverage.html":{}}}],["sendmaildto.to",{"_index":1989,"title":{},"body":{"injectables/NodeMailerService.html":{}}}],["sendtodevice",{"_index":1675,"title":{},"body":{"injectables/FirebaseCloudMessagingService.html":{}}}],["sendtodevice(token",{"_index":1677,"title":{},"body":{"injectables/FirebaseCloudMessagingService.html":{}}}],["sendtosentry",{"_index":1862,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["senhaforte",{"_index":2933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentry",{"_index":1832,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["sentry.captureexception(exception",{"_index":1866,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["sentry/node",{"_index":1833,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"dependencies.html":{}}}],["sentry/tracing",{"_index":2708,"title":{},"body":{"dependencies.html":{}}}],["sentryconfig",{"_index":2663,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sentryinit",{"_index":2690,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sentryinit(config",{"_index":2778,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ser",{"_index":776,"title":{},"body":{"classes/CreateQuestionDto.html":{}}}],["service",{"_index":1378,"title":{},"body":{"controllers/ExportationController.html":{},"controllers/UploadController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":1710,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["services/exam",{"_index":982,"title":{},"body":{"controllers/ExamAgreementController.html":{},"modules/ExamModule.html":{},"controllers/ExamTargetController.html":{}}}],["services/exam.service",{"_index":1096,"title":{},"body":{"controllers/ExamController.html":{},"modules/ExamModule.html":{}}}],["services/firebase",{"_index":1705,"title":{},"body":{"modules/FirebaseModule.html":{},"modules/InfraModule.html":{}}}],["services/grade.service",{"_index":603,"title":{},"body":{"modules/AuxiliaryModule.html":{}}}],["services/mailer.service",{"_index":1918,"title":{},"body":{"modules/InfraModule.html":{}}}],["services/nodemailer.service",{"_index":1920,"title":{},"body":{"modules/InfraModule.html":{}}}],["services/period.service",{"_index":604,"title":{},"body":{"modules/AuxiliaryModule.html":{}}}],["services/professor.service",{"_index":605,"title":{},"body":{"modules/AuxiliaryModule.html":{}}}],["services/question",{"_index":2226,"title":{},"body":{"controllers/QuestionGroupController.html":{},"modules/QuestionGroupModule.html":{}}}],["services/question.service",{"_index":2157,"title":{},"body":{"controllers/QuestionController.html":{},"modules/QuestionGroupModule.html":{}}}],["services/send",{"_index":1921,"title":{},"body":{"modules/InfraModule.html":{}}}],["services/student.service",{"_index":606,"title":{},"body":{"modules/AuxiliaryModule.html":{}}}],["services/template.service",{"_index":1922,"title":{},"body":{"modules/InfraModule.html":{}}}],["services/uploader.service",{"_index":1923,"title":{},"body":{"modules/InfraModule.html":{},"controllers/UploadController.html":{}}}],["set",{"_index":54,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{}}}],["setexamandposition",{"_index":2274,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["setexamandposition(questiongroup",{"_index":2286,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["seu",{"_index":2418,"title":{},"body":{"injectables/SendEmailService.html":{},"index.html":{}}}],["signoptions",{"_index":2906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sim",{"_index":1445,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["sistema",{"_index":2790,"title":{},"body":{"index.html":{}}}],["size",{"_index":1497,"title":{},"body":{"injectables/ExportationService.html":{},"interfaces/FileSendDto.html":{}}}],["smtp.gmail.com",{"_index":2913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snakenamingstrategy",{"_index":2887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["softdeleteresult",{"_index":319,"title":{"interfaces/SoftDeleteResult.html":{}},"body":{"injectables/AnswerService.html":{},"injectables/ExamService.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"interfaces/SoftDeleteResult.html":{},"coverage.html":{}}}],["sort((a",{"_index":2080,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{},"injectables/QuestionGroupService.html":{}}}],["sorte",{"_index":2419,"title":{},"body":{"injectables/SendEmailService.html":{}}}],["sortitems",{"_index":857,"title":{},"body":{"classes/Exam.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"classes/AnswerGrade.html":{},"classes/AnswerGradeRepository.html":{},"modules/AnswerModule.html":{},"classes/AnswerRepository.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"modules/AuxiliaryModule.html":{},"interfaces/BatchUser.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"classes/CopyQuestionGroupDto.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CreateAnswerDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CsvLine.html":{},"interfaces/CsvLineRow.html":{},"injectables/CustomLogger.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementDto.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementRepository.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"interfaces/ExamAgreementUser.html":{},"controllers/ExamController.html":{},"modules/ExamModule.html":{},"classes/ExamPersonalResult.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"controllers/ExamTargetController.html":{},"interfaces/ExamTargetManagerDto.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"classes/ExamTargetRepository.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"classes/ExamTitle1621036457247.html":{},"interfaces/ExamUser.html":{},"controllers/ExportationController.html":{},"modules/ExportationModule.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"classes/FFEntity.html":{},"interfaces/FileSendDto.html":{},"interfaces/FindExamByUserDto.html":{},"classes/FindPersonalDto.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseAuthDecodedToken.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptions.html":{},"injectables/FirebaseStorageService.html":{},"interfaces/FirebaseStorageUploadDto.html":{},"injectables/FirebaseUploader.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/Grade.html":{},"classes/GradeIndex1624560625346.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IEntity.html":{},"interfaces/IException.html":{},"modules/InfraModule.html":{},"injectables/JwtGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/LoggerModule.html":{},"classes/LoginDto.html":{},"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"classes/Period.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/PeriodRepository.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Professor.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/Question.html":{},"controllers/QuestionController.html":{},"classes/QuestionFindDto.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"modules/QuestionGroupModule.html":{},"classes/QuestionGroupRepository.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"interfaces/QuestionGroupUser.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/QuestionRepository.html":{},"injectables/QuestionService.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/SeedAuxiliary1624412129413.html":{},"interfaces/SendAgreementEmailDto.html":{},"injectables/SendEmailService.html":{},"classes/SendMailDto.html":{},"interfaces/SoftDeleteResult.html":{},"classes/Student.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"interfaces/SwaggerOptions.html":{},"injectables/TemplateService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateAnswerDto.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"classes/UpdateExamDto.html":{},"classes/UpdateQuestionDto.html":{},"classes/UpdateQuestionGroupDto.html":{},"controllers/UploadController.html":{},"classes/UploaderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserEmail1625013724392.html":{},"modules/UserModule.html":{},"classes/UserRepository.html":{},"interfaces/UserResult.html":{},"injectables/UserService.html":{}}}],["specialized",{"_index":2574,"title":{},"body":{"interfaces/UserResult.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/.../1620299822480",{"_index":2834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../1622326106015",{"_index":2851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../1622378888497",{"_index":2832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../1624416663575",{"_index":2836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../answer",{"_index":2750,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth.constants.ts",{"_index":2845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../casl",{"_index":2752,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../core.constants.ts",{"_index":2837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cors.config.ts",{"_index":2773,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":2770,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../database.config.ts",{"_index":2835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../exam",{"_index":2754,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../exam.constants.ts",{"_index":2838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../exportation",{"_index":2756,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../firebase",{"_index":2827,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../firebase.config.ts",{"_index":2840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../firebase.constants.ts",{"_index":2839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":2841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":2833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../infra.constants.ts",{"_index":2843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../is",{"_index":2771,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../jwt.config.ts",{"_index":2842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../last.util.ts",{"_index":2772,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":2769,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../nodemailer.config.ts",{"_index":2844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../question",{"_index":2846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../question.constants.ts",{"_index":2847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../rate",{"_index":2848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sentry.config.ts",{"_index":2849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.config.ts",{"_index":2850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":2757,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/answer/answer.controller.ts",{"_index":169,"title":{},"body":{"controllers/AnswerController.html":{},"coverage.html":{}}}],["src/answer/answer.controller.ts:30",{"_index":179,"title":{},"body":{"controllers/AnswerController.html":{}}}],["src/answer/answer.controller.ts:43",{"_index":187,"title":{},"body":{"controllers/AnswerController.html":{}}}],["src/answer/answer.controller.ts:51",{"_index":183,"title":{},"body":{"controllers/AnswerController.html":{}}}],["src/answer/answer.module.ts",{"_index":273,"title":{},"body":{"modules/AnswerModule.html":{}}}],["src/answer/answer.service.ts",{"_index":299,"title":{},"body":{"injectables/AnswerService.html":{},"coverage.html":{}}}],["src/answer/answer.service.ts:17",{"_index":307,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/answer/answer.service.ts:28",{"_index":310,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/answer/answer.service.ts:68",{"_index":311,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/answer/answer.service.ts:72",{"_index":313,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/answer/answer.service.ts:81",{"_index":316,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/answer/answer.service.ts:89",{"_index":314,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/answer/dto/create",{"_index":688,"title":{},"body":{"classes/CreateAnswerDto.html":{},"coverage.html":{}}}],["src/answer/dto/update",{"_index":2495,"title":{},"body":{"classes/UpdateAnswerDto.html":{},"coverage.html":{}}}],["src/answer/entities/answer",{"_index":230,"title":{},"body":{"classes/AnswerGrade.html":{},"classes/Grade.html":{},"coverage.html":{}}}],["src/answer/entities/answer.entity",{"_index":2122,"title":{},"body":{"classes/Question.html":{}}}],["src/answer/entities/answer.entity.ts",{"_index":70,"title":{},"body":{"classes/Answer.html":{},"coverage.html":{}}}],["src/answer/entities/answer.entity.ts:12",{"_index":93,"title":{},"body":{"classes/Answer.html":{}}}],["src/answer/entities/answer.entity.ts:15",{"_index":96,"title":{},"body":{"classes/Answer.html":{}}}],["src/answer/entities/answer.entity.ts:18",{"_index":87,"title":{},"body":{"classes/Answer.html":{}}}],["src/answer/entities/answer.entity.ts:21",{"_index":89,"title":{},"body":{"classes/Answer.html":{}}}],["src/answer/entities/answer.entity.ts:24",{"_index":84,"title":{},"body":{"classes/Answer.html":{}}}],["src/answer/entities/answer.entity.ts:27",{"_index":88,"title":{},"body":{"classes/Answer.html":{}}}],["src/answer/enums/answer",{"_index":2759,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/answer/interfaces/batch",{"_index":610,"title":{},"body":{"interfaces/BatchUser.html":{},"coverage.html":{}}}],["src/answer/repositories/answer",{"_index":246,"title":{},"body":{"classes/AnswerGradeRepository.html":{},"coverage.html":{}}}],["src/answer/repositories/answer.repository.ts",{"_index":286,"title":{},"body":{"classes/AnswerRepository.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.constants.ts",{"_index":2635,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.module.ts",{"_index":456,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service",{"_index":2595,"title":{},"body":{"injectables/UserService.html":{}}}],["src/auth/auth.service.ts",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:23",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:32",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:36",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:45",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:65",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/casl/casl.module.ts",{"_index":658,"title":{},"body":{"modules/CaslModule.html":{}}}],["src/auth/casl/enums/casl",{"_index":2761,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/auth/casl/factories/casl",{"_index":613,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/auth/controllers/auth.controller.ts",{"_index":432,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/controllers/auth.controller.ts:12",{"_index":435,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/dtos/auth.dto.ts",{"_index":444,"title":{},"body":{"classes/AuthDto.html":{},"coverage.html":{}}}],["src/auth/dtos/auth.dto.ts:6",{"_index":446,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/dtos/create",{"_index":708,"title":{},"body":{"classes/CreateAuthDto.html":{},"coverage.html":{}}}],["src/auth/dtos/login.dto.ts",{"_index":1965,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dtos/login.dto.ts:8",{"_index":1966,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/entities/auth.entity.ts",{"_index":409,"title":{},"body":{"classes/Auth.html":{},"coverage.html":{}}}],["src/auth/entities/auth.entity.ts:10",{"_index":413,"title":{},"body":{"classes/Auth.html":{}}}],["src/auth/entities/auth.entity.ts:13",{"_index":414,"title":{},"body":{"classes/Auth.html":{}}}],["src/auth/entities/auth.entity.ts:7",{"_index":412,"title":{},"body":{"classes/Auth.html":{}}}],["src/auth/guards/jwt.guard",{"_index":201,"title":{},"body":{"controllers/AnswerController.html":{},"controllers/ExamAgreementController.html":{},"controllers/ExamController.html":{},"controllers/ExamTargetController.html":{},"controllers/ExportationController.html":{},"controllers/UploadController.html":{}}}],["src/auth/guards/jwt.guard.ts",{"_index":1928,"title":{},"body":{"injectables/JwtGuard.html":{},"coverage.html":{}}}],["src/auth/interfaces/jwt",{"_index":1933,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/auth/repositories/auth.repository.ts",{"_index":469,"title":{},"body":{"classes/AuthRepository.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":1935,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:14",{"_index":1938,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:27",{"_index":1940,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auxiliary/auxiliary.module",{"_index":1134,"title":{},"body":{"modules/ExamModule.html":{},"modules/QuestionGroupModule.html":{},"modules/UserModule.html":{}}}],["src/auxiliary/auxiliary.module.ts",{"_index":594,"title":{},"body":{"modules/AuxiliaryModule.html":{}}}],["src/auxiliary/entities/course.entity.ts",{"_index":678,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["src/auxiliary/entities/course.entity.ts:11",{"_index":683,"title":{},"body":{"classes/Course.html":{}}}],["src/auxiliary/entities/course.entity.ts:14",{"_index":682,"title":{},"body":{"classes/Course.html":{}}}],["src/auxiliary/entities/course.entity.ts:8",{"_index":680,"title":{},"body":{"classes/Course.html":{}}}],["src/auxiliary/entities/grade.entity",{"_index":242,"title":{},"body":{"classes/AnswerGrade.html":{},"classes/QuestionGroupGrade.html":{}}}],["src/auxiliary/entities/grade.entity.ts",{"_index":1766,"title":{},"body":{"classes/Grade.html":{},"coverage.html":{}}}],["src/auxiliary/entities/grade.entity.ts:20",{"_index":1777,"title":{},"body":{"classes/Grade.html":{}}}],["src/auxiliary/entities/grade.entity.ts:23",{"_index":1772,"title":{},"body":{"classes/Grade.html":{}}}],["src/auxiliary/entities/grade.entity.ts:26",{"_index":1776,"title":{},"body":{"classes/Grade.html":{}}}],["src/auxiliary/entities/grade.entity.ts:29",{"_index":1771,"title":{},"body":{"classes/Grade.html":{}}}],["src/auxiliary/entities/grade.entity.ts:32",{"_index":1770,"title":{},"body":{"classes/Grade.html":{}}}],["src/auxiliary/entities/grade.entity.ts:36",{"_index":1775,"title":{},"body":{"classes/Grade.html":{}}}],["src/auxiliary/entities/grade.entity.ts:40",{"_index":1774,"title":{},"body":{"classes/Grade.html":{}}}],["src/auxiliary/entities/period.entity",{"_index":887,"title":{},"body":{"classes/Exam.html":{}}}],["src/auxiliary/entities/period.entity.ts",{"_index":2004,"title":{},"body":{"classes/Period.html":{},"coverage.html":{}}}],["src/auxiliary/entities/period.entity.ts:12",{"_index":2009,"title":{},"body":{"classes/Period.html":{}}}],["src/auxiliary/entities/period.entity.ts:15",{"_index":2006,"title":{},"body":{"classes/Period.html":{}}}],["src/auxiliary/entities/period.entity.ts:18",{"_index":2007,"title":{},"body":{"classes/Period.html":{}}}],["src/auxiliary/entities/period.entity.ts:9",{"_index":2008,"title":{},"body":{"classes/Period.html":{}}}],["src/auxiliary/entities/professor.entity",{"_index":2058,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{},"injectables/QuestionGroupService.html":{}}}],["src/auxiliary/entities/professor.entity.ts",{"_index":2082,"title":{},"body":{"classes/Professor.html":{},"coverage.html":{}}}],["src/auxiliary/entities/professor.entity.ts:10",{"_index":2095,"title":{},"body":{"classes/Professor.html":{}}}],["src/auxiliary/entities/professor.entity.ts:8",{"_index":2087,"title":{},"body":{"classes/Professor.html":{}}}],["src/auxiliary/entities/student.entity",{"_index":2059,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{},"injectables/QuestionGroupService.html":{}}}],["src/auxiliary/entities/student.entity.ts",{"_index":2430,"title":{},"body":{"classes/Student.html":{},"coverage.html":{}}}],["src/auxiliary/entities/student.entity.ts:10",{"_index":2433,"title":{},"body":{"classes/Student.html":{}}}],["src/auxiliary/entities/student.entity.ts:8",{"_index":2432,"title":{},"body":{"classes/Student.html":{}}}],["src/auxiliary/entities/subject.entity.ts",{"_index":2443,"title":{},"body":{"classes/Subject.html":{},"coverage.html":{}}}],["src/auxiliary/entities/subject.entity.ts:10",{"_index":2445,"title":{},"body":{"classes/Subject.html":{}}}],["src/auxiliary/entities/subject.entity.ts:13",{"_index":2449,"title":{},"body":{"classes/Subject.html":{}}}],["src/auxiliary/entities/subject.entity.ts:16",{"_index":2447,"title":{},"body":{"classes/Subject.html":{}}}],["src/auxiliary/entities/subject.entity.ts:19",{"_index":2446,"title":{},"body":{"classes/Subject.html":{}}}],["src/auxiliary/entities/subject.entity.ts:22",{"_index":2448,"title":{},"body":{"classes/Subject.html":{}}}],["src/auxiliary/repositories/grade.repository.ts",{"_index":1790,"title":{},"body":{"classes/GradeRepository.html":{},"coverage.html":{}}}],["src/auxiliary/repositories/grade.repository.ts:11",{"_index":1793,"title":{},"body":{"classes/GradeRepository.html":{}}}],["src/auxiliary/repositories/period.repository.ts",{"_index":2020,"title":{},"body":{"classes/PeriodRepository.html":{},"coverage.html":{}}}],["src/auxiliary/repositories/professor.repository.ts",{"_index":2097,"title":{},"body":{"classes/ProfessorRepository.html":{},"coverage.html":{}}}],["src/auxiliary/repositories/student.repository.ts",{"_index":2435,"title":{},"body":{"classes/StudentRepository.html":{},"coverage.html":{}}}],["src/auxiliary/services/grade.service",{"_index":2060,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{}}}],["src/auxiliary/services/grade.service.ts",{"_index":1809,"title":{},"body":{"injectables/GradeService.html":{},"coverage.html":{}}}],["src/auxiliary/services/grade.service.ts:15",{"_index":1812,"title":{},"body":{"injectables/GradeService.html":{}}}],["src/auxiliary/services/grade.service.ts:19",{"_index":1813,"title":{},"body":{"injectables/GradeService.html":{}}}],["src/auxiliary/services/grade.service.ts:9",{"_index":1811,"title":{},"body":{"injectables/GradeService.html":{}}}],["src/auxiliary/services/period.service",{"_index":1214,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/auxiliary/services/period.service.ts",{"_index":2022,"title":{},"body":{"injectables/PeriodService.html":{},"coverage.html":{}}}],["src/auxiliary/services/period.service.ts:14",{"_index":2027,"title":{},"body":{"injectables/PeriodService.html":{}}}],["src/auxiliary/services/period.service.ts:27",{"_index":2028,"title":{},"body":{"injectables/PeriodService.html":{}}}],["src/auxiliary/services/period.service.ts:42",{"_index":2031,"title":{},"body":{"injectables/PeriodService.html":{}}}],["src/auxiliary/services/period.service.ts:8",{"_index":2026,"title":{},"body":{"injectables/PeriodService.html":{}}}],["src/auxiliary/services/professor.service",{"_index":2596,"title":{},"body":{"injectables/UserService.html":{}}}],["src/auxiliary/services/professor.service.ts",{"_index":2099,"title":{},"body":{"injectables/ProfessorService.html":{},"coverage.html":{}}}],["src/auxiliary/services/professor.service.ts:11",{"_index":2101,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["src/auxiliary/services/professor.service.ts:18",{"_index":2103,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["src/auxiliary/services/professor.service.ts:24",{"_index":2106,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["src/auxiliary/services/student.service",{"_index":2597,"title":{},"body":{"injectables/UserService.html":{}}}],["src/auxiliary/services/student.service.ts",{"_index":2437,"title":{},"body":{"injectables/StudentService.html":{},"coverage.html":{}}}],["src/auxiliary/services/student.service.ts:11",{"_index":2438,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/auxiliary/services/student.service.ts:18",{"_index":2439,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/auxiliary/services/student.service.ts:24",{"_index":2440,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/auxiliary/types/user",{"_index":1515,"title":{},"body":{"classes/FindPersonalDto.html":{},"miscellaneous/typealiases.html":{}}}],["src/config/cors.config.ts",{"_index":2643,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/config/database.config.ts",{"_index":2649,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/firebase.config.ts",{"_index":2651,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/index.ts",{"_index":2653,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/interfaces/swagger.interface.ts",{"_index":2454,"title":{},"body":{"interfaces/SwaggerOptions.html":{},"coverage.html":{}}}],["src/config/jwt.config.ts",{"_index":2654,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/nodemailer.config.ts",{"_index":2656,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/rate",{"_index":2658,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/sentry.config.ts",{"_index":2662,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/swagger.config.ts",{"_index":2664,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/controllers/app.controller.ts",{"_index":364,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/controllers/app.controller.ts:12",{"_index":370,"title":{},"body":{"controllers/AppController.html":{}}}],["src/controllers/app.controller.ts:6",{"_index":368,"title":{},"body":{"controllers/AppController.html":{}}}],["src/core/core.constants.ts",{"_index":2667,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/core.module.ts",{"_index":673,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/decorators/is",{"_index":2669,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/core/entities/ff.entity",{"_index":415,"title":{},"body":{"classes/Auth.html":{},"classes/ExamTarget.html":{},"classes/Period.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{}}}],["src/core/entities/ff.entity.ts",{"_index":1502,"title":{},"body":{"classes/FFEntity.html":{},"coverage.html":{}}}],["src/core/entities/ff.entity.ts:6",{"_index":1503,"title":{},"body":{"classes/FFEntity.html":{}}}],["src/core/entities/timestamp.entity.ts",{"_index":2490,"title":{},"body":{"classes/TimestampEntity.html":{},"coverage.html":{}}}],["src/core/entities/timestamp.entity.ts:10",{"_index":2492,"title":{},"body":{"classes/TimestampEntity.html":{}}}],["src/core/entities/timestamp.entity.ts:13",{"_index":2494,"title":{},"body":{"classes/TimestampEntity.html":{}}}],["src/core/entities/timestamp.entity.ts:16",{"_index":2493,"title":{},"body":{"classes/TimestampEntity.html":{}}}],["src/core/filters/http",{"_index":1817,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"coverage.html":{}}}],["src/core/interceptors/payload.interceptor.ts",{"_index":1992,"title":{},"body":{"injectables/PayloadInterceptor.html":{},"coverage.html":{}}}],["src/core/interceptors/payload.interceptor.ts:12",{"_index":1998,"title":{},"body":{"injectables/PayloadInterceptor.html":{}}}],["src/core/interfaces/soft",{"_index":320,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/ExamService.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"interfaces/SoftDeleteResult.html":{},"coverage.html":{}}}],["src/core/utils/last.util",{"_index":2294,"title":{},"body":{"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{}}}],["src/core/utils/last.util.ts",{"_index":2671,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/database/migrations",{"_index":2885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/database/migrations/1619445806509",{"_index":418,"title":{},"body":{"classes/Auth1619445806509.html":{},"coverage.html":{}}}],["src/database/migrations/1620179231630",{"_index":2198,"title":{},"body":{"classes/QuestionGroup1620179231630.html":{},"coverage.html":{}}}],["src/database/migrations/1620299822480",{"_index":6,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/migrations/1620477175799",{"_index":517,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"coverage.html":{}}}],["src/database/migrations/1620477869366",{"_index":2333,"title":{},"body":{"classes/QuestionImage1620477869366.html":{},"coverage.html":{}}}],["src/database/migrations/1620478273991",{"_index":905,"title":{},"body":{"classes/Exam1620478273991.html":{},"coverage.html":{}}}],["src/database/migrations/1620488935141",{"_index":2339,"title":{},"body":{"classes/QuestionPosition1620488935141.html":{},"coverage.html":{}}}],["src/database/migrations/1620563708532",{"_index":2345,"title":{},"body":{"classes/QuestionPositionIdx1620563708532.html":{},"coverage.html":{}}}],["src/database/migrations/1621036457247",{"_index":1362,"title":{},"body":{"classes/ExamTitle1621036457247.html":{},"coverage.html":{}}}],["src/database/migrations/1621992475274",{"_index":2325,"title":{},"body":{"classes/QuestionGroupTarget1621992475274.html":{},"coverage.html":{}}}],["src/database/migrations/1622326106015",{"_index":1244,"title":{},"body":{"classes/ExamTarget1622326106015.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/migrations/1622332886234",{"_index":948,"title":{},"body":{"classes/ExamAgreement1622332886234.html":{},"coverage.html":{}}}],["src/database/migrations/1622334780336",{"_index":957,"title":{},"body":{"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"coverage.html":{}}}],["src/database/migrations/1622378888497",{"_index":1260,"title":{},"body":{"classes/ExamTargetAdd1622378888497.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/migrations/1622417032753",{"_index":991,"title":{},"body":{"classes/ExamAgreementObservation1622417032753.html":{},"coverage.html":{}}}],["src/database/migrations/1622421768424",{"_index":127,"title":{},"body":{"classes/Answer1622421768424.html":{},"coverage.html":{}}}],["src/database/migrations/1624416663574",{"_index":567,"title":{},"body":{"classes/Auxiliary1624416663574.html":{},"coverage.html":{}}}],["src/database/migrations/1624416663575",{"_index":1879,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/migrations/1624547816204",{"_index":2014,"title":{},"body":{"classes/PeriodIndex1624547816204.html":{},"coverage.html":{}}}],["src/database/migrations/1624560625346",{"_index":1784,"title":{},"body":{"classes/GradeIndex1624560625346.html":{},"coverage.html":{}}}],["src/database/migrations/1624750140569",{"_index":289,"title":{},"body":{"classes/AnswerScoreCheck1624750140568.html":{},"coverage.html":{}}}],["src/database/migrations/1624883202214",{"_index":2251,"title":{},"body":{"classes/QuestionGroupGradeRemove1624883202213.html":{},"coverage.html":{}}}],["src/database/migrations/1625001091463",{"_index":1063,"title":{},"body":{"classes/ExamAgreementUniqueCode1625001091462.html":{},"coverage.html":{}}}],["src/database/migrations/1625001565002",{"_index":1760,"title":{},"body":{"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"coverage.html":{}}}],["src/database/migrations/1625002603969",{"_index":1071,"title":{},"body":{"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"coverage.html":{}}}],["src/database/migrations/1625013724393",{"_index":2556,"title":{},"body":{"classes/UserEmail1625013724392.html":{},"coverage.html":{}}}],["src/exam/controllers/exam",{"_index":963,"title":{},"body":{"controllers/ExamAgreementController.html":{},"controllers/ExamTargetController.html":{},"coverage.html":{}}}],["src/exam/controllers/exam.controller.ts",{"_index":1080,"title":{},"body":{"controllers/ExamController.html":{},"coverage.html":{}}}],["src/exam/controllers/exam.controller.ts:31",{"_index":1084,"title":{},"body":{"controllers/ExamController.html":{}}}],["src/exam/controllers/exam.controller.ts:37",{"_index":1086,"title":{},"body":{"controllers/ExamController.html":{}}}],["src/exam/controllers/exam.controller.ts:43",{"_index":1092,"title":{},"body":{"controllers/ExamController.html":{}}}],["src/exam/controllers/exam.controller.ts:48",{"_index":1088,"title":{},"body":{"controllers/ExamController.html":{}}}],["src/exam/controllers/exam.controller.ts:53",{"_index":1095,"title":{},"body":{"controllers/ExamController.html":{}}}],["src/exam/controllers/exam.controller.ts:61",{"_index":1093,"title":{},"body":{"controllers/ExamController.html":{}}}],["src/exam/dtos/create",{"_index":716,"title":{},"body":{"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"coverage.html":{}}}],["src/exam/dtos/exam",{"_index":987,"title":{},"body":{"classes/ExamAgreementDto.html":{},"interfaces/ExamTargetManagerDto.html":{},"coverage.html":{}}}],["src/exam/dtos/find",{"_index":1508,"title":{},"body":{"interfaces/FindExamByUserDto.html":{},"coverage.html":{}}}],["src/exam/dtos/update",{"_index":2500,"title":{},"body":{"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"classes/UpdateExamDto.html":{},"coverage.html":{}}}],["src/exam/entities/exam",{"_index":108,"title":{},"body":{"classes/Answer.html":{},"classes/ExamAgreement.html":{},"classes/ExamTarget.html":{},"interfaces/SendAgreementEmailDto.html":{},"classes/User.html":{},"coverage.html":{}}}],["src/exam/entities/exam.entity",{"_index":2010,"title":{},"body":{"classes/Period.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/QuestionGroup.html":{}}}],["src/exam/entities/exam.entity.ts",{"_index":853,"title":{},"body":{"classes/Exam.html":{},"coverage.html":{}}}],["src/exam/entities/exam.entity.ts:20",{"_index":876,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/entities/exam.entity.ts:23",{"_index":865,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/entities/exam.entity.ts:26",{"_index":870,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/entities/exam.entity.ts:29",{"_index":866,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/entities/exam.entity.ts:32",{"_index":864,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/entities/exam.entity.ts:35",{"_index":872,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/entities/exam.entity.ts:38",{"_index":869,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/entities/exam.entity.ts:42",{"_index":875,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/entities/exam.entity.ts:45",{"_index":868,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/entities/exam.entity.ts:48",{"_index":867,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/entities/exam.entity.ts:51",{"_index":861,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/entities/exam.entity.ts:54",{"_index":881,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/entities/exam.entity.ts:58",{"_index":884,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/entities/exam.entity.ts:62",{"_index":886,"title":{},"body":{"classes/Exam.html":{}}}],["src/exam/enums/exam",{"_index":2764,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/exam/exam.constants.ts",{"_index":2674,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/exam/exam.module",{"_index":284,"title":{},"body":{"modules/AnswerModule.html":{}}}],["src/exam/exam.module.ts",{"_index":1119,"title":{},"body":{"modules/ExamModule.html":{}}}],["src/exam/factories/exam",{"_index":1304,"title":{},"body":{"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"coverage.html":{}}}],["src/exam/interfaces/exam",{"_index":202,"title":{},"body":{"controllers/AnswerController.html":{},"interfaces/ExamAgreementUser.html":{},"interfaces/ExamUser.html":{},"coverage.html":{}}}],["src/exam/models/exam",{"_index":1136,"title":{},"body":{"classes/ExamPersonalResult.html":{},"classes/ExamTargetNode.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/exam/providers/exam",{"_index":1344,"title":{},"body":{"injectables/ExamTargetTree.html":{},"coverage.html":{}}}],["src/exam/repositories/exam",{"_index":997,"title":{},"body":{"classes/ExamAgreementRepository.html":{},"classes/ExamTargetRepository.html":{},"coverage.html":{}}}],["src/exam/repositories/exam.repository.ts",{"_index":1143,"title":{},"body":{"classes/ExamRepository.html":{},"coverage.html":{}}}],["src/exam/repositories/exam.repository.ts:25",{"_index":1149,"title":{},"body":{"classes/ExamRepository.html":{}}}],["src/exam/repositories/exam.repository.ts:55",{"_index":1167,"title":{},"body":{"classes/ExamRepository.html":{}}}],["src/exam/repositories/exam.repository.ts:73",{"_index":1170,"title":{},"body":{"classes/ExamRepository.html":{}}}],["src/exam/services/exam",{"_index":322,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/ExamAgreementService.html":{},"injectables/ExamTargetService.html":{},"coverage.html":{}}}],["src/exam/services/exam.service",{"_index":2289,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["src/exam/services/exam.service.ts",{"_index":1197,"title":{},"body":{"injectables/ExamService.html":{},"coverage.html":{}}}],["src/exam/services/exam.service.ts:19",{"_index":1211,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/services/exam.service.ts:24",{"_index":1201,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/services/exam.service.ts:33",{"_index":1207,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/services/exam.service.ts:46",{"_index":1202,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/services/exam.service.ts:53",{"_index":1203,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/services/exam.service.ts:57",{"_index":1204,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/services/exam.service.ts:69",{"_index":1205,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/services/exam.service.ts:88",{"_index":1210,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exam/services/exam.service.ts:97",{"_index":1209,"title":{},"body":{"injectables/ExamService.html":{}}}],["src/exportation/enums/exportation",{"_index":2765,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/exportation/exportation.controller.ts",{"_index":1369,"title":{},"body":{"controllers/ExportationController.html":{},"coverage.html":{}}}],["src/exportation/exportation.controller.ts:19",{"_index":1373,"title":{},"body":{"controllers/ExportationController.html":{}}}],["src/exportation/exportation.module.ts",{"_index":1386,"title":{},"body":{"modules/ExportationModule.html":{}}}],["src/exportation/exportation.repository.ts",{"_index":1389,"title":{},"body":{"injectables/ExportationRepository.html":{},"coverage.html":{}}}],["src/exportation/exportation.repository.ts:12",{"_index":1395,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["src/exportation/exportation.repository.ts:9",{"_index":1393,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["src/exportation/exportation.service.ts",{"_index":1455,"title":{},"body":{"injectables/ExportationService.html":{},"coverage.html":{}}}],["src/exportation/exportation.service.ts:11",{"_index":1460,"title":{},"body":{"injectables/ExportationService.html":{}}}],["src/exportation/exportation.service.ts:17",{"_index":1466,"title":{},"body":{"injectables/ExportationService.html":{}}}],["src/exportation/exportation.service.ts:28",{"_index":1462,"title":{},"body":{"injectables/ExportationService.html":{}}}],["src/exportation/exportation.service.ts:34",{"_index":1463,"title":{},"body":{"injectables/ExportationService.html":{}}}],["src/exportation/interfaces/csv",{"_index":820,"title":{},"body":{"interfaces/CsvLine.html":{},"interfaces/CsvLineRow.html":{},"coverage.html":{}}}],["src/exportation/maps/user",{"_index":2678,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/firebase",{"_index":1748,"title":{},"body":{"injectables/FirebaseUploader.html":{},"modules/InfraModule.html":{}}}],["src/firebase/dtos/firebase",{"_index":1733,"title":{},"body":{"interfaces/FirebaseStorageUploadDto.html":{},"coverage.html":{}}}],["src/firebase/firebase",{"_index":1518,"title":{},"body":{"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/firebase/firebase.constants.ts",{"_index":2682,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/firebase/firebase.module.ts",{"_index":1702,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["src/firebase/firebase.module.ts:31",{"_index":1703,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["src/firebase/firebase.module.ts:41",{"_index":1704,"title":{},"body":{"modules/FirebaseModule.html":{}}}],["src/firebase/interfaces/firebase",{"_index":1622,"title":{},"body":{"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseAuthDecodedToken.html":{},"interfaces/FirebaseModuleOptions.html":{},"coverage.html":{}}}],["src/firebase/services/firebase",{"_index":1635,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"injectables/FirebaseStorageService.html":{},"coverage.html":{}}}],["src/firebase/types/firebase",{"_index":2830,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/infra/controllers/upload.controller.ts",{"_index":2510,"title":{},"body":{"controllers/UploadController.html":{},"coverage.html":{}}}],["src/infra/controllers/upload.controller.ts:23",{"_index":2514,"title":{},"body":{"controllers/UploadController.html":{}}}],["src/infra/dtos/file",{"_index":1506,"title":{},"body":{"interfaces/FileSendDto.html":{},"coverage.html":{}}}],["src/infra/dtos/send",{"_index":2404,"title":{},"body":{"interfaces/SendAgreementEmailDto.html":{},"classes/SendMailDto.html":{},"coverage.html":{}}}],["src/infra/infra.constants.ts",{"_index":2684,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infra/infra.module",{"_index":1135,"title":{},"body":{"modules/ExamModule.html":{},"modules/ExportationModule.html":{}}}],["src/infra/infra.module.ts",{"_index":1911,"title":{},"body":{"modules/InfraModule.html":{}}}],["src/infra/services/firebase",{"_index":1736,"title":{},"body":{"injectables/FirebaseUploader.html":{},"coverage.html":{}}}],["src/infra/services/mailer.service.ts",{"_index":1970,"title":{},"body":{"classes/MailerService.html":{},"coverage.html":{}}}],["src/infra/services/mailer.service.ts:4",{"_index":1975,"title":{},"body":{"classes/MailerService.html":{}}}],["src/infra/services/nodemailer.service.ts",{"_index":1978,"title":{},"body":{"injectables/NodeMailerService.html":{},"coverage.html":{}}}],["src/infra/services/nodemailer.service.ts:11",{"_index":1981,"title":{},"body":{"injectables/NodeMailerService.html":{}}}],["src/infra/services/nodemailer.service.ts:20",{"_index":1982,"title":{},"body":{"injectables/NodeMailerService.html":{}}}],["src/infra/services/send",{"_index":1028,"title":{},"body":{"injectables/ExamAgreementService.html":{},"injectables/SendEmailService.html":{},"coverage.html":{}}}],["src/infra/services/template.service.ts",{"_index":2458,"title":{},"body":{"injectables/TemplateService.html":{},"coverage.html":{}}}],["src/infra/services/template.service.ts:24",{"_index":2464,"title":{},"body":{"injectables/TemplateService.html":{}}}],["src/infra/services/template.service.ts:8",{"_index":2460,"title":{},"body":{"injectables/TemplateService.html":{}}}],["src/infra/services/uploader.service",{"_index":1471,"title":{},"body":{"injectables/ExportationService.html":{}}}],["src/infra/services/uploader.service.ts",{"_index":2525,"title":{},"body":{"classes/UploaderService.html":{},"coverage.html":{}}}],["src/infra/services/uploader.service.ts:4",{"_index":2526,"title":{},"body":{"classes/UploaderService.html":{}}}],["src/logger/logger.module.ts",{"_index":1963,"title":{},"body":{"modules/LoggerModule.html":{}}}],["src/logger/logger.service",{"_index":1030,"title":{},"body":{"injectables/ExamAgreementService.html":{},"injectables/NodeMailerService.html":{}}}],["src/logger/logger.service.ts",{"_index":849,"title":{},"body":{"injectables/CustomLogger.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":2685,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/question",{"_index":110,"title":{},"body":{"classes/Answer.html":{},"modules/AnswerModule.html":{},"injectables/AnswerService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CopyQuestionGroupDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/Exam.html":{},"classes/FindPersonalDto.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Question.html":{},"controllers/QuestionController.html":{},"classes/QuestionFindDto.html":{},"classes/QuestionGroup.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"modules/QuestionGroupModule.html":{},"classes/QuestionGroupRepository.html":{},"injectables/QuestionGroupService.html":{},"interfaces/QuestionGroupUser.html":{},"classes/QuestionRepository.html":{},"injectables/QuestionService.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/UpdateQuestionDto.html":{},"classes/UpdateQuestionGroupDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/controllers/user.controller.ts",{"_index":2538,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/controllers/user.controller.ts:15",{"_index":2540,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/controllers/user.controller.ts:21",{"_index":2543,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/decoratos/get",{"_index":205,"title":{},"body":{"controllers/AnswerController.html":{},"controllers/ExamAgreementController.html":{},"controllers/ExamController.html":{},"controllers/ExamTargetController.html":{},"controllers/QuestionGroupController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/dtos/create",{"_index":801,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dtos/user.dto",{"_index":2107,"title":{},"body":{"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["src/user/dtos/user.dto.ts",{"_index":2553,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/user/dtos/user.dto.ts:6",{"_index":2554,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/entities/user.entity",{"_index":932,"title":{},"body":{"classes/ExamAgreement.html":{},"classes/FindPersonalDto.html":{},"controllers/QuestionGroupController.html":{}}}],["src/user/entities/user.entity.ts",{"_index":2527,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:11",{"_index":2530,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:14",{"_index":2528,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:17",{"_index":2529,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:20",{"_index":2533,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:23",{"_index":2532,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:26",{"_index":2531,"title":{},"body":{"classes/User.html":{}}}],["src/user/enum/user",{"_index":635,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"miscellaneous/enumerations.html":{}}}],["src/user/helpers/create",{"_index":2696,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/interfaces/user",{"_index":2573,"title":{},"body":{"interfaces/UserResult.html":{},"coverage.html":{}}}],["src/user/repositories/user.repository.ts",{"_index":2570,"title":{},"body":{"classes/UserRepository.html":{},"coverage.html":{}}}],["src/user/user.module.ts",{"_index":2565,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":2575,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:23",{"_index":2582,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:33",{"_index":2583,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:46",{"_index":2585,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:57",{"_index":2589,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:61",{"_index":2593,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:69",{"_index":2587,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:97",{"_index":2591,"title":{},"body":{"injectables/UserService.html":{}}}],["stack",{"_index":1837,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["start",{"_index":859,"title":{},"body":{"classes/Exam.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamRepository.html":{},"injectables/PeriodService.html":{}}}],["starta",{"_index":2039,"title":{},"body":{"injectables/PeriodService.html":{}}}],["startb",{"_index":2041,"title":{},"body":{"injectables/PeriodService.html":{}}}],["started",{"_index":578,"title":{"index.html":{}},"body":{"classes/Auxiliary1624416663574.html":{},"miscellaneous/enumerations.html":{}}}],["started_at",{"_index":525,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"interfaces/IEntity.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["startedat",{"_index":731,"title":{},"body":{"classes/CreateExamDto.html":{},"classes/Exam.html":{},"classes/Period.html":{},"injectables/PeriodService.html":{}}}],["startofmonth",{"_index":1883,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["startofmonth(new",{"_index":1892,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["stated_at",{"_index":535,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{}}}],["statement",{"_index":766,"title":{},"body":{"classes/CreateQuestionDto.html":{},"classes/Question.html":{},"classes/QuestionGroup1620179231630.html":{}}}],["statements",{"_index":2627,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1198,"title":{},"body":{"injectables/ExamService.html":{},"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{}}}],["status",{"_index":530,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamRepository.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["status.enum",{"_index":890,"title":{},"body":{"classes/Exam.html":{},"classes/ExamAgreement.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{}}}],["status.enum.ts",{"_index":2755,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":1835,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["storage",{"_index":1532,"title":{},"body":{"injectables/FirebaseAdmin.html":{},"injectables/FirebaseStorageService.html":{},"interfaces/FirebaseStorageUploadDto.html":{},"coverage.html":{}}}],["storage.service.ts",{"_index":1713,"title":{},"body":{"injectables/FirebaseStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:15",{"_index":1718,"title":{},"body":{"injectables/FirebaseStorageService.html":{}}}],["storage.service.ts:9",{"_index":1715,"title":{},"body":{"injectables/FirebaseStorageService.html":{}}}],["storagebucket",{"_index":1578,"title":{},"body":{"injectables/FirebaseAdmin.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["storageservice",{"_index":1740,"title":{},"body":{"injectables/FirebaseUploader.html":{}}}],["strategies",{"_index":2745,"title":{},"body":{"dependencies.html":{}}}],["strategies/jwt.strategy",{"_index":465,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":1945,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":129,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"controllers/AppController.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"classes/AuthDto.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Course.html":{},"classes/CreateAuthDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CsvLine.html":{},"interfaces/CsvLineRow.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"interfaces/ExamAgreementUser.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"controllers/ExamTargetController.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"classes/ExamTitle1621036457247.html":{},"injectables/ExportationService.html":{},"interfaces/FileSendDto.html":{},"injectables/FirebaseAdmin.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseAuthDecodedToken.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"interfaces/FirebaseModuleOptions.html":{},"injectables/FirebaseStorageService.html":{},"interfaces/FirebaseStorageUploadDto.html":{},"injectables/FirebaseUploader.html":{},"classes/GradeIndex1624560625346.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{},"interfaces/JwtPayload.html":{},"classes/LoginDto.html":{},"classes/Period.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"interfaces/SendAgreementEmailDto.html":{},"classes/SendMailDto.html":{},"classes/Student.html":{},"classes/Subject.html":{},"interfaces/SwaggerOptions.html":{},"injectables/TemplateService.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"classes/UploaderService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserEmail1625013724392.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":847,"title":{"classes/Student.html":{}},"body":{"interfaces/CsvLineRow.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"classes/Grade.html":{},"classes/GradeRepository.html":{},"interfaces/IEntity.html":{},"injectables/PersonalQuestionGroup.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/Student.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["student.cpf",{"_index":1902,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["student.enrollment",{"_index":1901,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["student.entity",{"_index":1780,"title":{},"body":{"classes/Grade.html":{}}}],["student_grade",{"_index":575,"title":{},"body":{"classes/Auxiliary1624416663574.html":{},"classes/Grade.html":{},"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["studentgrades",{"_index":2431,"title":{},"body":{"classes/Student.html":{}}}],["studentrepository",{"_index":601,"title":{"classes/StudentRepository.html":{}},"body":{"modules/AuxiliaryModule.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"coverage.html":{}}}],["students",{"_index":1768,"title":{},"body":{"classes/Grade.html":{}}}],["studentservice",{"_index":593,"title":{"injectables/StudentService.html":{}},"body":{"modules/AuxiliaryModule.html":{},"injectables/StudentService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["subject",{"_index":540,"title":{"classes/Subject.html":{}},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Course.html":{},"injectables/ExportationRepository.html":{},"classes/Grade.html":{},"classes/GradeRepository.html":{},"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{},"injectables/SendEmailService.html":{},"classes/SendMailDto.html":{},"classes/Subject.html":{},"coverage.html":{}}}],["subject.course",{"_index":687,"title":{},"body":{"classes/Course.html":{}}}],["subject.entity",{"_index":685,"title":{},"body":{"classes/Course.html":{},"classes/Grade.html":{}}}],["subject.id",{"_index":1900,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["subject_id",{"_index":544,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["subject_title",{"_index":842,"title":{},"body":{"interfaces/CsvLineRow.html":{},"injectables/ExportationRepository.html":{}}}],["subject`(`id",{"_index":564,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{}}}],["subjectid",{"_index":1769,"title":{},"body":{"classes/Grade.html":{}}}],["subjects",{"_index":679,"title":{},"body":{"classes/Course.html":{}}}],["subscriber.{js,ts",{"_index":2879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subscribers",{"_index":2878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sudo",{"_index":2814,"title":{},"body":{"index.html":{}}}],["super",{"_index":1951,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":2816,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":2488,"title":{},"body":{"injectables/TemplateService.html":{}}}],["suprir",{"_index":2787,"title":{},"body":{"index.html":{}}}],["svg",{"_index":2817,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":2740,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["swaggerconfig",{"_index":2665,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggerconfigkey",{"_index":2666,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggeroptions",{"_index":2453,"title":{"interfaces/SwaggerOptions.html":{}},"body":{"interfaces/SwaggerOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["switch",{"_index":640,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"injectables/UserService.html":{}}}],["synchronize",{"_index":2880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":2463,"title":{},"body":{"injectables/TemplateService.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":136,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"classes/ExamTitle1621036457247.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/UserEmail1625013724392.html":{},"coverage.html":{}}}],["tableinheritance",{"_index":116,"title":{},"body":{"classes/Answer.html":{},"classes/User.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2698,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":747,"title":{},"body":{"classes/CreateExamDto.html":{},"modules/ExamModule.html":{},"classes/ExamRepository.html":{},"classes/ExamTarget.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"controllers/ExamTargetController.html":{},"interfaces/ExamTargetManagerDto.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"interfaces/FindExamByUserDto.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["target.controller",{"_index":1128,"title":{},"body":{"modules/ExamModule.html":{}}}],["target.controller.ts",{"_index":1268,"title":{},"body":{"controllers/ExamTargetController.html":{},"coverage.html":{}}}],["target.controller.ts:20",{"_index":1275,"title":{},"body":{"controllers/ExamTargetController.html":{}}}],["target.controller.ts:26",{"_index":1273,"title":{},"body":{"controllers/ExamTargetController.html":{}}}],["target.entity",{"_index":891,"title":{},"body":{"classes/Exam.html":{},"classes/ExamRepository.html":{},"classes/ExamTargetRepository.html":{},"injectables/ExamTargetService.html":{}}}],["target.entity.ts",{"_index":1240,"title":{},"body":{"classes/ExamTarget.html":{},"coverage.html":{}}}],["target.entity.ts:8",{"_index":1241,"title":{},"body":{"classes/ExamTarget.html":{}}}],["target.id",{"_index":1160,"title":{},"body":{"classes/ExamRepository.html":{}}}],["target.repository",{"_index":1125,"title":{},"body":{"modules/ExamModule.html":{},"injectables/ExamTargetService.html":{}}}],["target.repository.ts",{"_index":1316,"title":{},"body":{"classes/ExamTargetRepository.html":{},"coverage.html":{}}}],["target.service",{"_index":1126,"title":{},"body":{"modules/ExamModule.html":{},"injectables/ExamService.html":{},"controllers/ExamTargetController.html":{}}}],["target.service.ts",{"_index":1318,"title":{},"body":{"injectables/ExamTargetService.html":{},"coverage.html":{}}}],["target.service.ts:12",{"_index":1324,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["target.service.ts:22",{"_index":1329,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["target.service.ts:30",{"_index":1325,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["target.service.ts:42",{"_index":1326,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["target.service.ts:48",{"_index":1328,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["target.type",{"_index":1161,"title":{},"body":{"classes/ExamRepository.html":{},"injectables/ExamTargetService.html":{}}}],["targetmap",{"_index":1220,"title":{},"body":{"injectables/ExamService.html":{}}}],["targetmap.get(target",{"_index":1224,"title":{},"body":{"injectables/ExamService.html":{}}}],["targetnodefactory",{"_index":1350,"title":{},"body":{"injectables/ExamTargetTree.html":{}}}],["targetnodefactory.generate",{"_index":1354,"title":{},"body":{"injectables/ExamTargetTree.html":{}}}],["targets",{"_index":732,"title":{},"body":{"classes/CreateExamDto.html":{},"classes/Exam.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget1622326106015.html":{},"interfaces/ExamTargetManagerDto.html":{},"injectables/ExamTargetService.html":{},"interfaces/FindExamByUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["targets.map((target",{"_index":1223,"title":{},"body":{"injectables/ExamService.html":{},"injectables/ExamTargetService.html":{}}}],["targetservice",{"_index":1200,"title":{},"body":{"injectables/ExamService.html":{},"controllers/ExamTargetController.html":{}}}],["template",{"_index":2485,"title":{},"body":{"injectables/TemplateService.html":{}}}],["template.service",{"_index":2412,"title":{},"body":{"injectables/SendEmailService.html":{}}}],["templatemap",{"_index":2459,"title":{},"body":{"injectables/TemplateService.html":{}}}],["templateservice",{"_index":1910,"title":{"injectables/TemplateService.html":{}},"body":{"modules/InfraModule.html":{},"injectables/SendEmailService.html":{},"injectables/TemplateService.html":{},"coverage.html":{},"overview.html":{}}}],["testing",{"_index":1864,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["text",{"_index":523,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamTitle1621036457247.html":{},"classes/Question.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionImage1620477869366.html":{},"injectables/SendEmailService.html":{},"classes/SendMailDto.html":{}}}],["text/csv",{"_index":1496,"title":{},"body":{"injectables/ExportationService.html":{}}}],["this._targetmap",{"_index":1334,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["this.answergraderepository.create(createdto",{"_index":351,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.answergraderepository.save",{"_index":350,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.answerrepository.create(createdto",{"_index":353,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.answerrepository.delete",{"_index":339,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.answerrepository.find",{"_index":355,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.answerrepository.findone(id",{"_index":356,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.answerrepository.merge(answer",{"_index":358,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.answerrepository.save",{"_index":352,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.answerrepository.save(answer",{"_index":359,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.answerrepository.softdelete",{"_index":361,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.answerservice.createbatch(createanswerdtos",{"_index":223,"title":{},"body":{"controllers/AnswerController.html":{}}}],["this.answerservice.remove(id",{"_index":229,"title":{},"body":{"controllers/AnswerController.html":{}}}],["this.answerservice.update(id",{"_index":227,"title":{},"body":{"controllers/AnswerController.html":{}}}],["this.app",{"_index":1574,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["this.app.auth",{"_index":1587,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["this.app.database(url",{"_index":1588,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["this.app.delete",{"_index":1597,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["this.app.firestore",{"_index":1589,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["this.app.instanceid",{"_index":1590,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["this.app.machinelearning",{"_index":1591,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["this.app.messaging",{"_index":1592,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["this.app.name",{"_index":1584,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["this.app.options",{"_index":1586,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["this.app.projectmanagement",{"_index":1593,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["this.app.remoteconfig",{"_index":1594,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["this.app.securityrules",{"_index":1595,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["this.app.storage",{"_index":1596,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["this.authrepository.findone",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authrepository.save",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.createauth",{"_index":2603,"title":{},"body":{"injectables/UserService.html":{}}}],["this.authservice.findauth",{"_index":1957,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.authservice.login(logindto",{"_index":442,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.childs",{"_index":1301,"title":{},"body":{"classes/ExamTargetNode.html":{}}}],["this.childs.length",{"_index":1297,"title":{},"body":{"classes/ExamTargetNode.html":{}}}],["this.configservice.get('node_env",{"_index":1852,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["this.configservice.get('skip_sentry",{"_index":1863,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["this.connection.createqueryrunner",{"_index":1404,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["this.createcsv(csvlines",{"_index":1491,"title":{},"body":{"injectables/ExportationService.html":{}}}],["this.createquerybuilder('exam",{"_index":1175,"title":{},"body":{"classes/ExamRepository.html":{}}}],["this.createquerybuilder('grade",{"_index":1800,"title":{},"body":{"classes/GradeRepository.html":{}}}],["this.createuserbytype(createuserdto",{"_index":2602,"title":{},"body":{"injectables/UserService.html":{}}}],["this.endedat",{"_index":903,"title":{},"body":{"classes/Exam.html":{}}}],["this.examagreementservice.createagreement(createagreementdto",{"_index":985,"title":{},"body":{"controllers/ExamAgreementController.html":{}}}],["this.examagreementservice.findone(user",{"_index":329,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.examagreementservice.finishexam(examagreement",{"_index":354,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.examagreementservice.updateagreement",{"_index":986,"title":{},"body":{"controllers/ExamAgreementController.html":{}}}],["this.examservice.create(createexamdto",{"_index":1103,"title":{},"body":{"controllers/ExamController.html":{}}}],["this.examservice.findall",{"_index":1104,"title":{},"body":{"controllers/ExamController.html":{}}}],["this.examservice.findone(copyquestiongroupdto.examid",{"_index":2309,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["this.examservice.findone(createagreementdto.examid",{"_index":1035,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["this.examservice.findone(examid",{"_index":2297,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["this.examservice.findone(id",{"_index":1109,"title":{},"body":{"controllers/ExamController.html":{}}}],["this.examservice.findpersonal(user",{"_index":1107,"title":{},"body":{"controllers/ExamController.html":{}}}],["this.examservice.remove(id",{"_index":1111,"title":{},"body":{"controllers/ExamController.html":{}}}],["this.examservice.update(id",{"_index":1110,"title":{},"body":{"controllers/ExamController.html":{}}}],["this.exports",{"_index":1621,"title":{},"body":{"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{}}}],["this.fcm",{"_index":1682,"title":{},"body":{"injectables/FirebaseCloudMessagingService.html":{}}}],["this.fcm.sendtodevice(token",{"_index":1684,"title":{},"body":{"injectables/FirebaseCloudMessagingService.html":{}}}],["this.findauth",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.findone(copyquestiongroupdto.groupid",{"_index":2308,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["this.findone(id",{"_index":357,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/ExamService.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{}}}],["this.findspecializeduser(userdto",{"_index":2623,"title":{},"body":{"injectables/UserService.html":{}}}],["this.finduser(userdto",{"_index":2617,"title":{},"body":{"injectables/UserService.html":{}}}],["this.firebaseauth",{"_index":1660,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.firebaseauth.createuser(createdto",{"_index":1668,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.firebaseauth.deleteuser(uid",{"_index":1670,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.firebaseauth.getuser(uid",{"_index":1667,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.firebaseauth.updateuser(uid",{"_index":1669,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.firebaseauth.verifyidtoken(token",{"_index":1662,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["this.firestore",{"_index":1695,"title":{},"body":{"injectables/FirebaseFirestoreService.html":{}}}],["this.firestore.collection(collection",{"_index":1697,"title":{},"body":{"injectables/FirebaseFirestoreService.html":{}}}],["this.generate(node",{"_index":1315,"title":{},"body":{"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{}}}],["this.getfilename(examid",{"_index":1488,"title":{},"body":{"injectables/ExportationService.html":{}}}],["this.getnextposition(createquestiondto.groupid",{"_index":2376,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.getnextposition(updatedto.groupid",{"_index":2387,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.gettargetmap",{"_index":1340,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["this.graderepository.find",{"_index":1815,"title":{},"body":{"injectables/GradeService.html":{}}}],["this.graderepository.findbyuserandperiod(user",{"_index":1816,"title":{},"body":{"injectables/GradeService.html":{}}}],["this.gradeservice.findbyuserandperiod",{"_index":2071,"title":{},"body":{"injectables/PersonalQuestionGroup.html":{}}}],["this.groups",{"_index":897,"title":{},"body":{"classes/Exam.html":{}}}],["this.groups?.sort((a",{"_index":898,"title":{},"body":{"classes/Exam.html":{}}}],["this.groupservice.findone(groupid",{"_index":2374,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.isleaf",{"_index":1299,"title":{},"body":{"classes/ExamTargetNode.html":{}}}],["this.jwtservice.signasync",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loadrelations(query).getmany",{"_index":1189,"title":{},"body":{"classes/ExamRepository.html":{}}}],["this.loadtargetmap",{"_index":1333,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["this.logger.error('catched",{"_index":1867,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["this.logger.error(e",{"_index":1049,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["this.logger.log",{"_index":1990,"title":{},"body":{"injectables/NodeMailerService.html":{}}}],["this.logger.setcontext('nodemailerservice",{"_index":1985,"title":{},"body":{"injectables/NodeMailerService.html":{}}}],["this.mailerservice",{"_index":2417,"title":{},"body":{"injectables/SendEmailService.html":{}}}],["this.mustfindauth(logindto",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.newexam(createexamdto",{"_index":1225,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.newexam(updateexamdto",{"_index":1237,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.periodrepository.find",{"_index":2036,"title":{},"body":{"injectables/PeriodService.html":{}}}],["this.periodrepository.findone",{"_index":2043,"title":{},"body":{"injectables/PeriodService.html":{}}}],["this.periodservice.getperiodbyinterval(exam",{"_index":1227,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.personalgroup.getpersonal(user",{"_index":2322,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["this.professorgrades",{"_index":2096,"title":{},"body":{"classes/Professor.html":{}}}],["this.professorservice.createstudent(createuserdto",{"_index":2613,"title":{},"body":{"injectables/UserService.html":{}}}],["this.professorservice.findone(userdto",{"_index":2621,"title":{},"body":{"injectables/UserService.html":{}}}],["this.providers",{"_index":1617,"title":{},"body":{"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{}}}],["this.questiongroupservice.copy(copyquestiongroupdto",{"_index":2237,"title":{},"body":{"controllers/QuestionGroupController.html":{}}}],["this.questiongroupservice.create(createquestiongroupdto",{"_index":2231,"title":{},"body":{"controllers/QuestionGroupController.html":{}}}],["this.questiongroupservice.findall",{"_index":2232,"title":{},"body":{"controllers/QuestionGroupController.html":{}}}],["this.questiongroupservice.findone(id",{"_index":2235,"title":{},"body":{"controllers/QuestionGroupController.html":{}}}],["this.questiongroupservice.findpersonal",{"_index":2234,"title":{},"body":{"controllers/QuestionGroupController.html":{}}}],["this.questiongroupservice.remove(id",{"_index":2239,"title":{},"body":{"controllers/QuestionGroupController.html":{}}}],["this.questiongroupservice.reorder(reorderquestiongroupdto",{"_index":2238,"title":{},"body":{"controllers/QuestionGroupController.html":{}}}],["this.questiongroupservice.update(id",{"_index":2236,"title":{},"body":{"controllers/QuestionGroupController.html":{}}}],["this.questions",{"_index":2195,"title":{},"body":{"classes/QuestionGroup.html":{}}}],["this.questions?.sort((a",{"_index":2196,"title":{},"body":{"classes/QuestionGroup.html":{}}}],["this.questionservice.copytogroup",{"_index":2311,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["this.questionservice.createquestion(createquestiondto",{"_index":2161,"title":{},"body":{"controllers/QuestionController.html":{}}}],["this.questionservice.createquestions(groupid",{"_index":2164,"title":{},"body":{"controllers/QuestionController.html":{}}}],["this.questionservice.find(finddto",{"_index":2166,"title":{},"body":{"controllers/QuestionController.html":{}}}],["this.questionservice.findbyids",{"_index":331,"title":{},"body":{"injectables/AnswerService.html":{}}}],["this.questionservice.findone(id",{"_index":2167,"title":{},"body":{"controllers/QuestionController.html":{}}}],["this.questionservice.remove(id",{"_index":2170,"title":{},"body":{"controllers/QuestionController.html":{}}}],["this.questionservice.reorder(reorderquesitondto",{"_index":2169,"title":{},"body":{"controllers/QuestionController.html":{}}}],["this.questionservice.update(id",{"_index":2168,"title":{},"body":{"controllers/QuestionController.html":{}}}],["this.repository.create",{"_index":1040,"title":{},"body":{"injectables/ExamAgreementService.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{}}}],["this.repository.create(createdto",{"_index":2110,"title":{},"body":{"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["this.repository.create(createquestiongroupdto",{"_index":2300,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["this.repository.create(entitylike",{"_index":1219,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.repository.find",{"_index":1057,"title":{},"body":{"injectables/ExamAgreementService.html":{},"injectables/ExamService.html":{},"injectables/ExamTargetService.html":{},"injectables/PersonalQuestionGroup.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{}}}],["this.repository.findbyids(ids",{"_index":2383,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.repository.findbytargets",{"_index":1233,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.repository.findbyuser(user",{"_index":1231,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.repository.findone",{"_index":1037,"title":{},"body":{"injectables/ExamAgreementService.html":{},"injectables/ProfessorService.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"injectables/StudentService.html":{}}}],["this.repository.findone(id",{"_index":1230,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.repository.getcsvlines(examid",{"_index":1484,"title":{},"body":{"injectables/ExportationService.html":{}}}],["this.repository.merge",{"_index":2306,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["this.repository.merge(agreement",{"_index":1056,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["this.repository.merge(exam",{"_index":1236,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.repository.merge(question",{"_index":2388,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.repository.save",{"_index":1055,"title":{},"body":{"injectables/ExamAgreementService.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{}}}],["this.repository.save(agreement",{"_index":1043,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["this.repository.save(exam",{"_index":1228,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.repository.save(professor",{"_index":2111,"title":{},"body":{"injectables/ProfessorService.html":{}}}],["this.repository.save(question",{"_index":2377,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.repository.save(questiongroup",{"_index":2303,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["this.repository.save(questions",{"_index":2379,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.repository.save(student",{"_index":2442,"title":{},"body":{"injectables/StudentService.html":{}}}],["this.repository.softdelete",{"_index":2394,"title":{},"body":{"injectables/QuestionService.html":{}}}],["this.repository.softdelete(id",{"_index":1238,"title":{},"body":{"injectables/ExamService.html":{},"injectables/QuestionGroupService.html":{}}}],["this.repository.update(group.id",{"_index":2320,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["this.root",{"_index":1353,"title":{},"body":{"injectables/ExamTargetTree.html":{}}}],["this.root.dfs(target",{"_index":1359,"title":{},"body":{"injectables/ExamTargetTree.html":{}}}],["this.sendagreementemail(user.email",{"_index":1042,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["this.sendemailservice.sendagreementemail",{"_index":1045,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["this.service.exporttocsv(examid",{"_index":1380,"title":{},"body":{"controllers/ExportationController.html":{}}}],["this.service.upload(file",{"_index":2524,"title":{},"body":{"controllers/UploadController.html":{}}}],["this.setexamandposition",{"_index":2302,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["this.startedat",{"_index":902,"title":{},"body":{"classes/Exam.html":{}}}],["this.status",{"_index":941,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["this.storage",{"_index":1721,"title":{},"body":{"injectables/FirebaseStorageService.html":{}}}],["this.storage.bucket(bucket).file(path",{"_index":1726,"title":{},"body":{"injectables/FirebaseStorageService.html":{}}}],["this.storageservice.upload(this.getname(filedto",{"_index":1755,"title":{},"body":{"injectables/FirebaseUploader.html":{}}}],["this.studentgrades",{"_index":2434,"title":{},"body":{"classes/Student.html":{}}}],["this.studentservice.createstudent(createuserdto",{"_index":2615,"title":{},"body":{"injectables/UserService.html":{}}}],["this.studentservice.findone(userdto",{"_index":2622,"title":{},"body":{"injectables/UserService.html":{}}}],["this.targetservice.gettargetmap",{"_index":1221,"title":{},"body":{"injectables/ExamService.html":{}}}],["this.targetservice.gettargets",{"_index":1280,"title":{},"body":{"controllers/ExamTargetController.html":{}}}],["this.targetservice.gettargetsforuser(user.type",{"_index":1232,"title":{},"body":{"injectables/ExamService.html":{},"controllers/ExamTargetController.html":{}}}],["this.templatemap",{"_index":2477,"title":{},"body":{"injectables/TemplateService.html":{}}}],["this.templatemap.get(name",{"_index":2486,"title":{},"body":{"injectables/TemplateService.html":{}}}],["this.templateservice.get('agreement",{"_index":2414,"title":{},"body":{"injectables/SendEmailService.html":{}}}],["this.transporter.sendmail",{"_index":1991,"title":{},"body":{"injectables/NodeMailerService.html":{}}}],["this.tree.querytarget(target).map((p",{"_index":1342,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["this.type",{"_index":1298,"title":{},"body":{"classes/ExamTargetNode.html":{}}}],["this.uniquecode",{"_index":943,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["this.uploadservice.upload",{"_index":1492,"title":{},"body":{"injectables/ExportationService.html":{}}}],["this.userrepository.findone",{"_index":2616,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.createuser(createuserdto",{"_index":2550,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findspecializeduser",{"_index":1959,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userservice.mustfinduser",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updateuser",{"_index":2552,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":49,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/ExamAgreementService.html":{},"injectables/ExamService.html":{},"injectables/ExamTargetTree.html":{},"injectables/ExportationService.html":{},"injectables/FirebaseAdmin.html":{},"injectables/JwtStrategy.html":{},"injectables/PeriodService.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"injectables/TemplateService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["timestamp",{"_index":1836,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IException.html":{}}}],["timestamp.entity",{"_index":1504,"title":{},"body":{"classes/FFEntity.html":{}}}],["timestampentity",{"_index":102,"title":{"classes/TimestampEntity.html":{}},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/Auth.html":{},"classes/Course.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamTarget.html":{},"classes/FFEntity.html":{},"classes/Grade.html":{},"classes/Period.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/TimestampEntity.html":{},"classes/User.html":{},"coverage.html":{}}}],["timestampentity:10",{"_index":103,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/Auth.html":{},"classes/Course.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamTarget.html":{},"classes/FFEntity.html":{},"classes/Grade.html":{},"classes/Period.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/User.html":{}}}],["timestampentity:13",{"_index":107,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/Auth.html":{},"classes/Course.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamTarget.html":{},"classes/FFEntity.html":{},"classes/Grade.html":{},"classes/Period.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/User.html":{}}}],["timestampentity:16",{"_index":105,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/Auth.html":{},"classes/Course.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamTarget.html":{},"classes/FFEntity.html":{},"classes/Grade.html":{},"classes/Period.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/User.html":{}}}],["timewindow",{"_index":2924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tinyint",{"_index":90,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{}}}],["tipo",{"_index":832,"title":{},"body":{"interfaces/CsvLine.html":{},"injectables/ExportationRepository.html":{}}}],["title",{"_index":538,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Course.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/Exam.html":{},"classes/ExamTitle1621036457247.html":{},"interfaces/IEntity.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/Subject.html":{},"interfaces/SwaggerOptions.html":{},"miscellaneous/variables.html":{}}}],["tls",{"_index":2917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tocopy",{"_index":2307,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["tocopy.questions",{"_index":2312,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["todo",{"_index":2187,"title":{},"body":{"classes/QuestionGroup.html":{}}}],["token",{"_index":1657,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{}}}],["token.interface",{"_index":1659,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["token.interface.ts",{"_index":1632,"title":{},"body":{"interfaces/FirebaseAuthDecodedToken.html":{},"coverage.html":{}}}],["tolocaledatestring('pt",{"_index":1473,"title":{},"body":{"injectables/ExportationService.html":{}}}],["transaction",{"_index":2609,"title":{},"body":{"injectables/UserService.html":{}}}],["transactional",{"_index":250,"title":{},"body":{"classes/AnswerGradeRepository.html":{},"classes/AnswerRepository.html":{},"injectables/AnswerService.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/ExamAgreementRepository.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTargetRepository.html":{},"classes/GradeRepository.html":{},"classes/PeriodRepository.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/QuestionGroupRepository.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionRepository.html":{},"injectables/QuestionService.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["transformer",{"_index":722,"title":{},"body":{"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionsDto.html":{},"classes/ExamAgreement.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"dependencies.html":{}}}],["transporter",{"_index":1980,"title":{},"body":{"injectables/NodeMailerService.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":1323,"title":{},"body":{"injectables/ExamTargetService.html":{}}}],["tree.provider",{"_index":1131,"title":{},"body":{"modules/ExamModule.html":{},"injectables/ExamTargetService.html":{}}}],["tree.provider.ts",{"_index":1345,"title":{},"body":{"injectables/ExamTargetTree.html":{},"coverage.html":{}}}],["tree.provider.ts:25",{"_index":1352,"title":{},"body":{"injectables/ExamTargetTree.html":{}}}],["tree.provider.ts:8",{"_index":1349,"title":{},"body":{"injectables/ExamTargetTree.html":{}}}],["true",{"_index":92,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/Auth.html":{},"classes/Course.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionsDto.html":{},"classes/ExamAgreement.html":{},"classes/ExamTarget.html":{},"injectables/ExportationService.html":{},"modules/FirebaseModule.html":{},"injectables/FirebaseStorageService.html":{},"injectables/FirebaseUploader.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IEntity.html":{},"interfaces/IException.html":{},"injectables/JwtStrategy.html":{},"classes/Period.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["true})@arrayminsize(1",{"_index":798,"title":{},"body":{"classes/CreateQuestionsDto.html":{}}}],["true})@exclude()@apihideproperty",{"_index":924,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["true})@type(undefined)@isdefined({each",{"_index":797,"title":{},"body":{"classes/CreateQuestionsDto.html":{}}}],["try",{"_index":1044,"title":{},"body":{"injectables/ExamAgreementService.html":{},"injectables/FirebaseAuthService.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"controllers/AnswerController.html":{},"classes/AnswerGrade.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"interfaces/BatchUser.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CopyQuestionGroupDto.html":{},"classes/Course.html":{},"classes/CreateAnswerDto.html":{},"classes/CreateAuthDto.html":{},"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/CreateUserDto.html":{},"interfaces/CsvLine.html":{},"interfaces/CsvLineRow.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"controllers/ExamAgreementController.html":{},"classes/ExamAgreementDto.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"interfaces/ExamAgreementUser.html":{},"controllers/ExamController.html":{},"classes/ExamPersonalResult.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"controllers/ExamTargetController.html":{},"interfaces/ExamTargetManagerDto.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"classes/ExamTitle1621036457247.html":{},"interfaces/ExamUser.html":{},"controllers/ExportationController.html":{},"injectables/ExportationRepository.html":{},"injectables/ExportationService.html":{},"classes/FFEntity.html":{},"interfaces/FileSendDto.html":{},"interfaces/FindExamByUserDto.html":{},"classes/FindPersonalDto.html":{},"injectables/FirebaseAdmin.html":{},"modules/FirebaseAdminModule.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseAuthDecodedToken.html":{},"injectables/FirebaseAuthService.html":{},"injectables/FirebaseCloudMessagingService.html":{},"injectables/FirebaseFirestoreService.html":{},"modules/FirebaseModule.html":{},"interfaces/FirebaseModuleOptions.html":{},"injectables/FirebaseStorageService.html":{},"interfaces/FirebaseStorageUploadDto.html":{},"injectables/FirebaseUploader.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/Grade.html":{},"classes/GradeIndex1624560625346.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IClassValidatorException.html":{},"interfaces/IEntity.html":{},"interfaces/IException.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/MailerService.html":{},"injectables/NodeMailerService.html":{},"injectables/PayloadInterceptor.html":{},"classes/Period.html":{},"classes/PeriodIndex1624547816204.html":{},"injectables/PeriodService.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Professor.html":{},"injectables/ProfessorService.html":{},"classes/Question.html":{},"controllers/QuestionController.html":{},"classes/QuestionFindDto.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"interfaces/QuestionGroupUser.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"injectables/QuestionService.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/SeedAuxiliary1624412129413.html":{},"interfaces/SendAgreementEmailDto.html":{},"injectables/SendEmailService.html":{},"classes/SendMailDto.html":{},"interfaces/SoftDeleteResult.html":{},"classes/Student.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"interfaces/SwaggerOptions.html":{},"injectables/TemplateService.html":{},"classes/TimestampEntity.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"controllers/UploadController.html":{},"classes/UploaderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserEmail1625013724392.html":{},"interfaces/UserResult.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":119,"title":{},"body":{"classes/Answer.html":{},"injectables/AnswerService.html":{},"classes/CreateAnswerDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateUserDto.html":{},"classes/ExamTarget.html":{},"controllers/ExamTargetController.html":{},"interfaces/ExamTargetManagerDto.html":{},"classes/ExamTargetNode.html":{},"injectables/ExamTargetNodeFactory.html":{},"interfaces/ExamTargetNodeSchema.html":{},"injectables/ExamTargetService.html":{},"injectables/ExamTargetTree.html":{},"interfaces/ExamUser.html":{},"injectables/ExportationService.html":{},"interfaces/FindExamByUserDto.html":{},"classes/User.html":{},"interfaces/UserResult.html":{},"injectables/UserService.html":{}}}],["type.enum.ts",{"_index":2751,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.map",{"_index":1402,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["type.map.ts",{"_index":2679,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2825,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":30,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer.html":{},"classes/Answer1622421768424.html":{},"classes/AnswerGrade.html":{},"classes/AnswerGradeRepository.html":{},"classes/AnswerRepository.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"injectables/AnswerService.html":{},"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"classes/AuthRepository.html":{},"injectables/AuthService.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Course.html":{},"classes/Exam.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementRepository.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"classes/ExamTarget.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"classes/ExamTargetRepository.html":{},"classes/ExamTitle1621036457247.html":{},"injectables/ExportationRepository.html":{},"classes/FFEntity.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/Grade.html":{},"classes/GradeIndex1624560625346.html":{},"classes/GradeRepository.html":{},"interfaces/IEntity.html":{},"classes/Period.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/PeriodRepository.html":{},"injectables/PeriodService.html":{},"classes/Professor.html":{},"classes/ProfessorRepository.html":{},"injectables/ProfessorService.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/QuestionGroupRepository.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/QuestionRepository.html":{},"injectables/QuestionService.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/Student.html":{},"classes/StudentRepository.html":{},"injectables/StudentService.html":{},"classes/Subject.html":{},"classes/TimestampEntity.html":{},"classes/User.html":{},"classes/UserEmail1625013724392.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":276,"title":{},"body":{"modules/AnswerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuxiliaryModule.html":{},"modules/ExamModule.html":{},"modules/ExportationModule.html":{},"modules/QuestionGroupModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature",{"_index":607,"title":{},"body":{"modules/AuxiliaryModule.html":{},"modules/ExamModule.html":{},"modules/ExportationModule.html":{}}}],["typeormmodule.forfeature([answerrepository",{"_index":285,"title":{},"body":{"modules/AnswerModule.html":{}}}],["typeormmodule.forfeature([authrepository",{"_index":466,"title":{},"body":{"modules/AuthModule.html":{}}}],["typeormmodule.forfeature([questiongrouprepository",{"_index":2268,"title":{},"body":{"modules/QuestionGroupModule.html":{}}}],["typeormmodule.forfeature([userrepository",{"_index":2569,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":2861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":2498,"title":{},"body":{"classes/UpdateAnswerDto.html":{},"classes/UpdateExamDto.html":{},"classes/UpdateQuestionGroupDto.html":{}}}],["types/firebase",{"_index":1693,"title":{},"body":{"injectables/FirebaseFirestoreService.html":{}}}],["types/user",{"_index":1798,"title":{},"body":{"classes/GradeRepository.html":{},"injectables/GradeService.html":{}}}],["u",{"_index":1424,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["u.enrollment",{"_index":1421,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["u.id",{"_index":1425,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["u.type",{"_index":1422,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["uh",{"_index":375,"title":{},"body":{"controllers/AppController.html":{}}}],["ui",{"_index":2741,"title":{},"body":{"dependencies.html":{}}}],["uid",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FirebaseAuthDecodedToken.html":{},"injectables/FirebaseAuthService.html":{},"interfaces/JwtPayload.html":{}}}],["um",{"_index":2192,"title":{},"body":{"classes/QuestionGroup.html":{}}}],["unauthorizedexception",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["unauthorizedexception(logindto",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception(userdto",{"_index":2618,"title":{},"body":{"injectables/UserService.html":{}}}],["undefined",{"_index":42,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"controllers/AnswerController.html":{},"injectables/CaslAbilityFactory.html":{},"classes/Course.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"controllers/ExamController.html":{},"controllers/ExamTargetController.html":{},"classes/ExamTargetNode.html":{},"injectables/FirebaseStorageService.html":{},"classes/Grade.html":{},"classes/Period.html":{},"classes/Professor.html":{},"classes/Question.html":{},"controllers/QuestionController.html":{},"classes/QuestionGroup.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGrade.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["uneb",{"_index":1987,"title":{},"body":{"injectables/NodeMailerService.html":{}}}],["unique",{"_index":411,"title":{},"body":{"classes/Auth.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Course.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamTarget.html":{},"classes/ExamTarget1622326106015.html":{},"classes/Professor.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/User.html":{},"classes/UserEmail1625013724392.html":{}}}],["unique_code",{"_index":843,"title":{},"body":{"interfaces/CsvLineRow.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"injectables/ExportationRepository.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{}}}],["unique_code_sended_at",{"_index":1076,"title":{},"body":{"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{}}}],["uniquecode",{"_index":650,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/ExamAgreement.html":{}}}],["uniquecodesendedat",{"_index":911,"title":{},"body":{"classes/ExamAgreement.html":{}}}],["unknown",{"_index":2901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unprocessableentityexception",{"_index":2594,"title":{},"body":{"injectables/UserService.html":{}}}],["up",{"_index":15,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer1622421768424.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"classes/ExamTitle1621036457247.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/GradeIndex1624560625346.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/UserEmail1625013724392.html":{},"index.html":{}}}],["up(queryrunner",{"_index":27,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/Answer1622421768424.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"classes/ExamTitle1621036457247.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/GradeIndex1624560625346.html":{},"interfaces/IEntity.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/SeedAuxiliary1624412129413.html":{},"classes/UserEmail1625013724392.html":{}}}],["upcase",{"_index":1898,"title":{},"body":{"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["update",{"_index":141,"title":{},"body":{"classes/Answer1622421768424.html":{},"injectables/AnswerService.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/ExamAgreement1622332886234.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/ExamTarget1622326106015.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{},"classes/PeriodIndex1624547816204.html":{},"controllers/QuestionController.html":{},"classes/QuestionGroup1620179231630.html":{},"controllers/QuestionGroupController.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"injectables/QuestionService.html":{},"miscellaneous/enumerations.html":{}}}],["update(id",{"_index":315,"title":{},"body":{"injectables/AnswerService.html":{},"controllers/ExamController.html":{},"injectables/ExamService.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{},"injectables/QuestionService.html":{}}}],["updateagreement",{"_index":1005,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["updateagreement(querydto",{"_index":1025,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["updateagreementdto",{"_index":974,"title":{},"body":{"controllers/ExamAgreementController.html":{},"injectables/ExamAgreementService.html":{}}}],["updateagreementdto.anonymous",{"_index":1054,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["updateagreemment",{"_index":966,"title":{},"body":{"controllers/ExamAgreementController.html":{}}}],["updateagreemment(user",{"_index":971,"title":{},"body":{"controllers/ExamAgreementController.html":{}}}],["updateanswerdto",{"_index":185,"title":{"classes/UpdateAnswerDto.html":{}},"body":{"controllers/AnswerController.html":{},"injectables/AnswerService.html":{},"classes/UpdateAnswerDto.html":{},"coverage.html":{}}}],["updated_at",{"_index":140,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/ExamTarget1622326106015.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{}}}],["updatedat",{"_index":81,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/Auth.html":{},"classes/Course.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamTarget.html":{},"classes/FFEntity.html":{},"classes/Grade.html":{},"classes/Period.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/TimestampEntity.html":{},"classes/User.html":{}}}],["updatedatecolumn",{"_index":106,"title":{},"body":{"classes/Answer.html":{},"classes/AnswerGrade.html":{},"classes/Auth.html":{},"classes/Course.html":{},"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/ExamTarget.html":{},"classes/FFEntity.html":{},"classes/Grade.html":{},"classes/Period.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/TimestampEntity.html":{},"classes/User.html":{}}}],["updatedto",{"_index":1652,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"injectables/QuestionService.html":{}}}],["updatedto.groupid",{"_index":2384,"title":{},"body":{"injectables/QuestionService.html":{}}}],["updateexamagreementdto",{"_index":975,"title":{"classes/UpdateExamAgreementDto.html":{}},"body":{"controllers/ExamAgreementController.html":{},"injectables/ExamAgreementService.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"coverage.html":{}}}],["updateexamagreementquerydto",{"_index":973,"title":{"classes/UpdateExamAgreementQueryDto.html":{}},"body":{"controllers/ExamAgreementController.html":{},"injectables/ExamAgreementService.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"coverage.html":{}}}],["updateexamdto",{"_index":1094,"title":{"classes/UpdateExamDto.html":{}},"body":{"controllers/ExamController.html":{},"injectables/ExamService.html":{},"classes/UpdateExamDto.html":{},"coverage.html":{}}}],["updateone",{"_index":173,"title":{},"body":{"controllers/AnswerController.html":{}}}],["updateone(id",{"_index":184,"title":{},"body":{"controllers/AnswerController.html":{}}}],["updatequestiondto",{"_index":2148,"title":{"classes/UpdateQuestionDto.html":{}},"body":{"controllers/QuestionController.html":{},"injectables/QuestionService.html":{},"classes/UpdateQuestionDto.html":{},"coverage.html":{}}}],["updatequestiongroupdto",{"_index":2223,"title":{"classes/UpdateQuestionGroupDto.html":{}},"body":{"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{},"classes/UpdateQuestionGroupDto.html":{},"coverage.html":{}}}],["updatequestiongroupdto.examid",{"_index":2304,"title":{},"body":{"injectables/QuestionGroupService.html":{}}}],["updateuser",{"_index":1640,"title":{},"body":{"injectables/FirebaseAuthService.html":{},"controllers/UserController.html":{}}}],["updateuser(uid",{"_index":1651,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["upload",{"_index":1714,"title":{},"body":{"injectables/FirebaseStorageService.html":{},"injectables/FirebaseUploader.html":{},"controllers/UploadController.html":{},"classes/UploaderService.html":{}}}],["upload(@uploadedfile",{"_index":2523,"title":{},"body":{"controllers/UploadController.html":{}}}],["upload(file",{"_index":2511,"title":{},"body":{"controllers/UploadController.html":{}}}],["upload(filedto",{"_index":1744,"title":{},"body":{"injectables/FirebaseUploader.html":{},"classes/UploaderService.html":{}}}],["upload(path",{"_index":1716,"title":{},"body":{"injectables/FirebaseStorageService.html":{}}}],["upload.dto",{"_index":1720,"title":{},"body":{"injectables/FirebaseStorageService.html":{}}}],["upload.dto.ts",{"_index":1734,"title":{},"body":{"interfaces/FirebaseStorageUploadDto.html":{},"coverage.html":{}}}],["upload_path",{"_index":2519,"title":{},"body":{"controllers/UploadController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadcontroller",{"_index":1912,"title":{"controllers/UploadController.html":{}},"body":{"modules/InfraModule.html":{},"controllers/UploadController.html":{},"coverage.html":{}}}],["uploadedfile",{"_index":2515,"title":{},"body":{"controllers/UploadController.html":{}}}],["uploader.service",{"_index":1751,"title":{},"body":{"injectables/FirebaseUploader.html":{},"modules/InfraModule.html":{}}}],["uploader.service.ts",{"_index":1737,"title":{},"body":{"injectables/FirebaseUploader.html":{},"coverage.html":{}}}],["uploader.service.ts:11",{"_index":1742,"title":{},"body":{"injectables/FirebaseUploader.html":{}}}],["uploader.service.ts:19",{"_index":1745,"title":{},"body":{"injectables/FirebaseUploader.html":{}}}],["uploader.service.ts:8",{"_index":1739,"title":{},"body":{"injectables/FirebaseUploader.html":{}}}],["uploaderservice",{"_index":1459,"title":{"classes/UploaderService.html":{}},"body":{"injectables/ExportationService.html":{},"injectables/FirebaseUploader.html":{},"modules/InfraModule.html":{},"controllers/UploadController.html":{},"classes/UploaderService.html":{},"coverage.html":{},"overview.html":{}}}],["uploadservice",{"_index":1458,"title":{},"body":{"injectables/ExportationService.html":{}}}],["url",{"_index":1543,"title":{},"body":{"injectables/FirebaseAdmin.html":{}}}],["use",{"_index":2916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useclass",{"_index":1926,"title":{},"body":{"modules/InfraModule.html":{}}}],["usefactory",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FirebaseAdminModule.html":{},"interfaces/FirebaseAsyncModuleOptions.html":{},"interfaces/FirebaseModuleOptions.html":{},"modules/InfraModule.html":{}}}],["useguards",{"_index":194,"title":{},"body":{"controllers/AnswerController.html":{},"controllers/ExamAgreementController.html":{},"controllers/ExamController.html":{},"controllers/ExamTargetController.html":{},"controllers/ExportationController.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtguard",{"_index":215,"title":{},"body":{"controllers/AnswerController.html":{},"controllers/ExamAgreementController.html":{},"controllers/ExamController.html":{},"controllers/ExamTargetController.html":{},"controllers/ExportationController.html":{},"controllers/QuestionController.html":{},"controllers/QuestionGroupController.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{}}}],["useinterceptors",{"_index":2516,"title":{},"body":{"controllers/UploadController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":2522,"title":{},"body":{"controllers/UploadController.html":{}}}],["user",{"_index":46,"title":{"classes/User.html":{}},"body":{"classes/AdminUser1620299822480.html":{},"controllers/AnswerController.html":{},"injectables/AnswerService.html":{},"classes/Auth1619445806509.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CsvLineRow.html":{},"classes/ExamAgreement.html":{},"controllers/ExamAgreementController.html":{},"injectables/ExamAgreementService.html":{},"controllers/ExamController.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"controllers/ExamTargetController.html":{},"injectables/ExportationRepository.html":{},"classes/FindPersonalDto.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"interfaces/IEntity.html":{},"injectables/JwtStrategy.html":{},"injectables/PersonalQuestionGroup.html":{},"classes/Professor.html":{},"controllers/QuestionGroupController.html":{},"injectables/QuestionGroupService.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/SeedAuxiliary1624412129413.html":{},"interfaces/SendAgreementEmailDto.html":{},"classes/Student.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserEmail1625013724392.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["user.decorator",{"_index":206,"title":{},"body":{"controllers/AnswerController.html":{},"controllers/ExamAgreementController.html":{},"controllers/ExamController.html":{},"controllers/ExamTargetController.html":{},"controllers/QuestionGroupController.html":{},"controllers/UserController.html":{}}}],["user.decorator.ts",{"_index":2695,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":1172,"title":{},"body":{"classes/ExamRepository.html":{},"injectables/ProfessorService.html":{},"injectables/StudentService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":802,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/FindExamByUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":804,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:15",{"_index":806,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:18",{"_index":811,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:21",{"_index":808,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":1041,"title":{},"body":{"injectables/ExamAgreementService.html":{}}}],["user.enrollment",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.helper.ts",{"_index":2697,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["user.id",{"_index":225,"title":{},"body":{"controllers/AnswerController.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamRepository.html":{},"classes/GradeRepository.html":{},"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["user.interface",{"_index":203,"title":{},"body":{"controllers/AnswerController.html":{},"injectables/AnswerService.html":{},"controllers/ExamAgreementController.html":{},"injectables/ExamAgreementService.html":{},"controllers/ExamController.html":{},"classes/ExamRepository.html":{},"injectables/ExamService.html":{},"controllers/ExamTargetController.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{}}}],["user.interface.ts",{"_index":611,"title":{},"body":{"interfaces/BatchUser.html":{},"interfaces/ExamAgreementUser.html":{},"interfaces/ExamUser.html":{},"interfaces/QuestionGroupUser.html":{},"coverage.html":{}}}],["user.interface.ts:3",{"_index":1078,"title":{},"body":{"interfaces/ExamAgreementUser.html":{}}}],["user.role",{"_index":641,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["user.service",{"_index":2546,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.type",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/dtos/create",{"_index":2108,"title":{},"body":{"injectables/ProfessorService.html":{},"injectables/StudentService.html":{}}}],["user/entities/user.entity",{"_index":627,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/Professor.html":{},"classes/Student.html":{}}}],["user/enum/user",{"_index":1367,"title":{},"body":{"interfaces/ExamUser.html":{}}}],["user/user.module",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["user/user.service",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["user:11",{"_index":2090,"title":{},"body":{"classes/Professor.html":{},"classes/Student.html":{}}}],["user:14",{"_index":2088,"title":{},"body":{"classes/Professor.html":{},"classes/Student.html":{}}}],["user:17",{"_index":2089,"title":{},"body":{"classes/Professor.html":{},"classes/Student.html":{}}}],["user:20",{"_index":2093,"title":{},"body":{"classes/Professor.html":{},"classes/Student.html":{}}}],["user:23",{"_index":2092,"title":{},"body":{"classes/Professor.html":{},"classes/Student.html":{}}}],["user:26",{"_index":2091,"title":{},"body":{"classes/Professor.html":{},"classes/Student.html":{}}}],["user_enrollment",{"_index":844,"title":{},"body":{"interfaces/CsvLineRow.html":{},"injectables/ExportationRepository.html":{}}}],["user_id",{"_index":548,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/ExamAgreement1622332886234.html":{},"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["user_type",{"_index":845,"title":{},"body":{"interfaces/CsvLineRow.html":{},"injectables/ExportationRepository.html":{}}}],["user`(`id",{"_index":582,"title":{},"body":{"classes/Auxiliary1624416663574.html":{},"classes/ExamAgreement1622332886234.html":{}}}],["usercontroller",{"_index":2537,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdto",{"_index":2105,"title":{"classes/UserDto.html":{}},"body":{"injectables/ProfessorService.html":{},"injectables/StudentService.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["useremail.ts",{"_index":2557,"title":{},"body":{"classes/UserEmail1625013724392.html":{},"coverage.html":{}}}],["useremail.ts:13",{"_index":2559,"title":{},"body":{"classes/UserEmail1625013724392.html":{}}}],["useremail.ts:4",{"_index":2558,"title":{},"body":{"classes/UserEmail1625013724392.html":{}}}],["useremail.ts:6",{"_index":2560,"title":{},"body":{"classes/UserEmail1625013724392.html":{}}}],["useremail1625013724392",{"_index":2555,"title":{"classes/UserEmail1625013724392.html":{}},"body":{"classes/UserEmail1625013724392.html":{},"coverage.html":{}}}],["userid",{"_index":224,"title":{},"body":{"controllers/AnswerController.html":{},"interfaces/BatchUser.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateExamAgreementDto.html":{},"classes/ExamAgreement.html":{},"classes/ExamAgreementDto.html":{},"injectables/ExamAgreementService.html":{},"classes/ExamRepository.html":{},"classes/GradeRepository.html":{}}}],["usermodule",{"_index":385,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":2864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrepository",{"_index":2567,"title":{"classes/UserRepository.html":{}},"body":{"modules/UserModule.html":{},"classes/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userresult",{"_index":2572,"title":{"interfaces/UserResult.html":{}},"body":{"interfaces/UserResult.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userrole",{"_index":634,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/CreateUserDto.html":{},"classes/Professor.html":{},"classes/Student.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.admin",{"_index":643,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["userrole.manager",{"_index":646,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["userrole.regular",{"_index":2535,"title":{},"body":{"classes/User.html":{}}}],["users",{"_index":2455,"title":{},"body":{"interfaces/SwaggerOptions.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":478,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usertofind",{"_index":1513,"title":{},"body":{"classes/FindPersonalDto.html":{},"classes/GradeRepository.html":{},"injectables/GradeService.html":{},"miscellaneous/typealiases.html":{}}}],["usertype",{"_index":809,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/ExamUser.html":{},"classes/Professor.html":{},"classes/Student.html":{},"classes/User.html":{},"interfaces/UserResult.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["usertype.professor",{"_index":2612,"title":{},"body":{"injectables/UserService.html":{}}}],["usertype.student",{"_index":2614,"title":{},"body":{"injectables/UserService.html":{}}}],["usertypemap",{"_index":1400,"title":{},"body":{"injectables/ExportationRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usertypemap.get(csvline.user_type",{"_index":1450,"title":{},"body":{"injectables/ExportationRepository.html":{}}}],["usevalue",{"_index":1616,"title":{},"body":{"modules/FirebaseAdminModule.html":{}}}],["using",{"_index":2811,"title":{},"body":{"index.html":{}}}],["usuário",{"_index":833,"title":{},"body":{"interfaces/CsvLine.html":{},"injectables/ExportationRepository.html":{},"miscellaneous/variables.html":{}}}],["utf",{"_index":2484,"title":{},"body":{"injectables/TemplateService.html":{}}}],["utf8",{"_index":1500,"title":{},"body":{"injectables/ExportationService.html":{}}}],["uuid",{"_index":546,"title":{},"body":{"classes/Auxiliary1620477175799.html":{},"injectables/CaslAbilityFactory.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{}}}],["v0.0.1",{"_index":2932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":1936,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":1939,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateif",{"_index":702,"title":{},"body":{"classes/CreateAnswerDto.html":{}}}],["validateif((o",{"_index":706,"title":{},"body":{"classes/CreateAnswerDto.html":{}}}],["validatenested",{"_index":756,"title":{},"body":{"classes/CreateQuestion.html":{},"classes/CreateQuestionsDto.html":{}}}],["validator",{"_index":449,"title":{},"body":{"classes/AuthDto.html":{},"classes/CopyQuestionGroupDto.html":{},"classes/CreateAnswerDto.html":{},"classes/CreateExamAgreementDto.html":{},"classes/CreateExamDto.html":{},"classes/CreateQuestion.html":{},"classes/CreateQuestionDto.html":{},"classes/CreateQuestionGroupDto.html":{},"classes/CreateQuestionsDto.html":{},"classes/CreateUserDto.html":{},"classes/ExamAgreementDto.html":{},"classes/LoginDto.html":{},"classes/QuestionFindDto.html":{},"classes/ReorderQuestionDto.html":{},"classes/ReorderQuestionGroupDto.html":{},"classes/UpdateExamAgreementDto.html":{},"classes/UpdateExamAgreementQueryDto.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["value",{"_index":131,"title":{},"body":{"classes/Answer1622421768424.html":{},"classes/AnswerScoreCheck1624750140568.html":{},"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/CreateAnswerDto.html":{},"classes/Exam1620478273991.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementAnonymousDefault1622334780336.html":{},"classes/ExamAgreementObservation1622417032753.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{},"injectables/ExamService.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"classes/ExamTitle1621036457247.html":{},"injectables/FirebaseUploader.html":{},"classes/GradeIndex1624560625346.html":{},"classes/HttpExceptionFilter.html":{},"classes/PeriodIndex1624547816204.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/QuestionPosition1620488935141.html":{},"classes/QuestionPositionIdx1620563708532.html":{},"classes/UserEmail1625013724392.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":62,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"classes/ExamTarget1622326106015.html":{},"classes/ExamTargetAdd1622378888497.html":{},"interfaces/IEntity.html":{},"classes/SeedAuxiliary1624412129413.html":{}}}],["var",{"_index":53,"title":{},"body":{"classes/AdminUser1620299822480.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":410,"title":{},"body":{"classes/Auth.html":{},"classes/Course.html":{},"classes/Period.html":{},"classes/Professor.html":{},"classes/Question.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"classes/Student.html":{},"classes/Subject.html":{},"classes/User.html":{}}}],["varchar(255",{"_index":423,"title":{},"body":{"classes/Auth1619445806509.html":{},"classes/Auxiliary1620477175799.html":{},"classes/Auxiliary1624416663574.html":{},"classes/ExamAgreement1622332886234.html":{},"classes/QuestionGroup1620179231630.html":{},"classes/QuestionGroupGradeRemove1624883202213.html":{},"classes/QuestionGroupTarget1621992475274.html":{},"classes/QuestionImage1620477869366.html":{},"classes/UserEmail1625013724392.html":{}}}],["varchar(36",{"_index":953,"title":{},"body":{"classes/ExamAgreement1622332886234.html":{},"classes/ExamAgreementUniqueCode1625001091462.html":{}}}],["variable",{"_index":2636,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2806,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["vars",{"_index":2462,"title":{},"body":{"injectables/TemplateService.html":{}}}],["verdadeira",{"_index":783,"title":{},"body":{"classes/CreateQuestionDto.html":{}}}],["verifytoken",{"_index":1641,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["verifytoken(token",{"_index":1655,"title":{},"body":{"injectables/FirebaseAuthService.html":{}}}],["version",{"_index":2456,"title":{},"body":{"interfaces/SwaggerOptions.html":{},"miscellaneous/variables.html":{}}}],["views",{"_index":2474,"title":{},"body":{"injectables/TemplateService.html":{}}}],["void",{"_index":882,"title":{},"body":{"classes/Exam.html":{},"classes/ExamAgreement.html":{},"classes/HttpExceptionFilter.html":{},"classes/QuestionGroup.html":{},"classes/QuestionGroupGrade.html":{},"miscellaneous/functions.html":{}}}],["where('agreement.userid",{"_index":1191,"title":{},"body":{"classes/ExamRepository.html":{}}}],["where('exam.status",{"_index":1179,"title":{},"body":{"classes/ExamRepository.html":{}}}],["where('grade.periodid",{"_index":1805,"title":{},"body":{"classes/GradeRepository.html":{}}}],["yes",{"_index":1544,"title":{},"body":{"injectables/FirebaseAdmin.html":{},"injectables/FirebaseCloudMessagingService.html":{},"classes/UploaderService.html":{}}}],["zoom",{"_index":270,"title":{},"body":{"modules/AnswerModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/AuxiliaryModule.html":{},"modules/CaslModule.html":{},"modules/CoreModule.html":{},"modules/ExamModule.html":{},"modules/ExportationModule.html":{},"modules/FirebaseAdminModule.html":{},"modules/FirebaseModule.html":{},"modules/InfraModule.html":{},"modules/LoggerModule.html":{},"modules/QuestionGroupModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AdminUser1620299822480.html":{"url":"classes/AdminUser1620299822480.html","title":"class - AdminUser1620299822480","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdminUser1620299822480\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1620299822480-AdminUser.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1620299822480-AdminUser.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1620299822480-AdminUser.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\nimport * as bcrypt from 'bcryptjs';\n\nconst cpf = '29997856155';\nconst enrollment = '999999';\n\nexport class AdminUser1620299822480 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise {\n    const result:\n      | {\n          id: number;\n        }[]\n      | undefined = await queryRunner.manager.query(\n      'SELECT id FROM user WHERE cpf = ? OR enrollment = ?',\n      [cpf, enrollment],\n    );\n\n    if (!result?.length) {\n      if (!process.env.ADMIN_PASSWORD) {\n        throw new Error('ADMIN_PASSWORD env var not set');\n      }\n\n      const salt = await bcrypt.genSalt();\n      const password = await bcrypt.hash(process.env.ADMIN_PASSWORD, salt);\n\n      await queryRunner.manager.query(\n        'INSERT INTO auth (login, password, salt) VALUES (?, ?, ?)',\n        [enrollment, password, salt],\n      );\n      await queryRunner.manager.query(\n        'INSERT INTO user (enrollment, cpf, type, role) VALUES (?, ?, ?, ?)',\n        [enrollment, cpf, 'User', 'admin'],\n      );\n    }\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.manager.query('DELETE FROM auth WHERE login = ?', [\n      enrollment,\n    ]);\n    await queryRunner.manager.query(\n      'DELETE FROM user WHERE cpf = ? OR enrollment = ?',\n      [cpf, enrollment],\n    );\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Answer.html":{"url":"classes/Answer.html","title":"class - Answer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Answer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/answer/entities/answer.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        FFEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                examAgreement\n                            \n                            \n                                examAgreementId\n                            \n                            \n                                question\n                            \n                            \n                                questionId\n                            \n                            \n                                    Optional\n                                score\n                            \n                            \n                                type\n                            \n                            \n                                id\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            examAgreement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExamAgreement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/answer/entities/answer.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            examAgreementId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/answer/entities/answer.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            question\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Question\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/answer/entities/answer.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/answer/entities/answer.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'tinyint', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/answer/entities/answer.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AnswerType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'enum', enum: AnswerType})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/answer/entities/answer.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ExamAgreement } from 'src/exam/entities/exam-agreement.entity';\nimport { Question } from 'src/question-group/entities/question.entity';\nimport { Check, Column, Entity, ManyToOne, TableInheritance } from 'typeorm';\nimport { FFEntity } from '../../core/entities/ff.entity';\nimport { AnswerType } from '../enums/answer-type.enum';\n\n@Entity('answer')\n@TableInheritance({ column: { type: 'enum', name: 'type', enum: AnswerType } })\n@Check(`\"score\" IS NULL OR \"score\" BETWEEN 1 AND 5`)\nexport class Answer extends FFEntity {\n  @Column({ type: 'tinyint', nullable: true })\n  score?: number;\n\n  @Column({ type: 'enum', enum: AnswerType })\n  type: AnswerType;\n\n  @Column({ type: 'int' })\n  examAgreementId: number;\n\n  @Column({ type: 'int' })\n  questionId: number;\n\n  @ManyToOne(() => ExamAgreement)\n  examAgreement: ExamAgreement;\n\n  @ManyToOne(() => Question)\n  question: Question;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Answer1622421768424.html":{"url":"classes/Answer1622421768424.html","title":"class - Answer1622421768424","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Answer1622421768424\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1622421768424-Answer.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Answer1622421768424'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1622421768424-Answer.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1622421768424-Answer.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1622421768424-Answer.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class Answer1622421768424 implements MigrationInterface {\n    name = 'Answer1622421768424'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"CREATE TABLE `answer` (`created_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), `updated_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), `deleted_at` datetime(6) NULL, `id` int NOT NULL AUTO_INCREMENT, `score` int NULL, `type` enum ('Answer', 'AnswerGrade') NOT NULL, `exam_agreement_id` int NOT NULL, `question_id` int NOT NULL, `grade_id` int NULL, INDEX `IDX_ec3a69def9f89a993b8f75ee4d` (`type`), PRIMARY KEY (`id`)) ENGINE=InnoDB\");\n        await queryRunner.query(\"ALTER TABLE `answer` ADD CONSTRAINT `FK_814144bcce3b80921f41f15b823` FOREIGN KEY (`exam_agreement_id`) REFERENCES `exam_agreement`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n        await queryRunner.query(\"ALTER TABLE `answer` ADD CONSTRAINT `FK_c3d19a89541e4f0813f2fe09194` FOREIGN KEY (`question_id`) REFERENCES `question`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n        await queryRunner.query(\"ALTER TABLE `answer` ADD CONSTRAINT `FK_971014f1fb44be716098484bb5a` FOREIGN KEY (`grade_id`) REFERENCES `grade`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `answer` DROP FOREIGN KEY `FK_971014f1fb44be716098484bb5a`\");\n        await queryRunner.query(\"ALTER TABLE `answer` DROP FOREIGN KEY `FK_c3d19a89541e4f0813f2fe09194`\");\n        await queryRunner.query(\"ALTER TABLE `answer` DROP FOREIGN KEY `FK_814144bcce3b80921f41f15b823`\");\n        await queryRunner.query(\"DROP INDEX `IDX_ec3a69def9f89a993b8f75ee4d` ON `answer`\");\n        await queryRunner.query(\"DROP TABLE `answer`\");\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AnswerController.html":{"url":"controllers/AnswerController.html","title":"controller - AnswerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AnswerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/answer/answer.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                answer\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(examId: number, user: ExamUser, createAnswerDtos: CreateAnswerDto[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('batch/:examId')@ApiOkResponse({type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/answer/answer.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    examId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                ExamUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createAnswerDtos\n                                    \n                                            CreateAnswerDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/answer/answer.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOne(id: number, updateAnswerDto: UpdateAnswerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/answer/answer.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAnswerDto\n                                    \n                                                UpdateAnswerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  Param,\n  Delete,\n  ParseArrayPipe,\n  Put,\n  ParseIntPipe,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiOkResponse, ApiTags } from '@nestjs/swagger';\nimport { JwtGuard } from 'src/auth/guards/jwt.guard';\nimport { ExamUser } from 'src/exam/interfaces/exam-user.interface';\nimport { GetUser } from 'src/user/decoratos/get-user.decorator';\nimport { AnswerService } from './answer.service';\nimport { CreateAnswerDto } from './dto/create-answer.dto';\nimport { UpdateAnswerDto } from './dto/update-answer.dto';\nimport { Answer } from './entities/answer.entity';\n\n@Controller('answer')\n@ApiTags('Answer')\n@ApiBearerAuth()\n@UseGuards(JwtGuard)\nexport class AnswerController {\n  constructor(private readonly answerService: AnswerService) {}\n\n  @Post('batch/:examId')\n  @ApiOkResponse({ type: [CreateAnswerDto] })\n  async create(\n    @Param('examId', ParseIntPipe) examId: number,\n    @GetUser() user: ExamUser,\n    @Body(new ParseArrayPipe({ items: CreateAnswerDto }))\n    createAnswerDtos: CreateAnswerDto[],\n  ) {\n    return this.answerService.createBatch(createAnswerDtos, {\n      userId: user.id,\n      examId,\n    });\n  }\n\n  @Put(':id')\n  async updateOne(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() updateAnswerDto: UpdateAnswerDto,\n  ): Promise {\n    return this.answerService.update(id, updateAnswerDto);\n  }\n\n  @Delete(':id')\n  async remove(@Param('id', ParseIntPipe) id: number) {\n    return this.answerService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnswerGrade.html":{"url":"classes/AnswerGrade.html","title":"class - AnswerGrade","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnswerGrade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/answer/entities/answer-grade.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Answer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                grade\n                            \n                            \n                                gradeId\n                            \n                            \n                                examAgreement\n                            \n                            \n                                examAgreementId\n                            \n                            \n                                question\n                            \n                            \n                                questionId\n                            \n                            \n                                    Optional\n                                score\n                            \n                            \n                                type\n                            \n                            \n                                id\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grade\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Grade\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/answer/entities/answer-grade.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gradeId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/answer/entities/answer-grade.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            examAgreement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExamAgreement\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Answer\n\n                                \n                            \n                        \n                            \n                                    Defined in         Answer:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            examAgreementId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Answer\n\n                                \n                            \n                        \n                            \n                                    Defined in         Answer:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            question\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Question\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Answer\n\n                                \n                            \n                        \n                            \n                                    Defined in         Answer:27\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Answer\n\n                                \n                            \n                        \n                            \n                                    Defined in         Answer:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'tinyint', nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Answer\n\n                                \n                            \n                        \n                            \n                                    Defined in         Answer:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AnswerType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'enum', enum: AnswerType})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Answer\n\n                                \n                            \n                        \n                            \n                                    Defined in         Answer:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Grade } from 'src/auxiliary/entities/grade.entity';\nimport { ChildEntity, Column, ManyToOne } from 'typeorm';\nimport { Answer } from './answer.entity';\n\n@ChildEntity()\nexport class AnswerGrade extends Answer {\n  @ManyToOne(() => Grade)\n  grade: Grade;\n\n  @Column({ type: 'int' })\n  gradeId: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnswerGradeRepository.html":{"url":"classes/AnswerGradeRepository.html","title":"class - AnswerGradeRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnswerGradeRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/answer/repositories/answer-grade.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseRepository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository } from 'typeorm';\nimport { BaseRepository } from 'typeorm-transactional-cls-hooked';\nimport { AnswerGrade } from '../entities/answer-grade.entity';\n\n@EntityRepository(AnswerGrade)\nexport class AnswerGradeRepository extends BaseRepository {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AnswerModule.html":{"url":"modules/AnswerModule.html","title":"module - AnswerModule","body":"\n                   \n\n\n\n\n    Modules\n    AnswerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnswerModule\n\n\n\ncluster_AnswerModule_providers\n\n\n\ncluster_AnswerModule_imports\n\n\n\n\nExamModule\n\nExamModule\n\n\n\nAnswerModule\n\nAnswerModule\n\nAnswerModule -->\n\nExamModule->AnswerModule\n\n\n\n\n\nQuestionGroupModule\n\nQuestionGroupModule\n\nAnswerModule -->\n\nQuestionGroupModule->AnswerModule\n\n\n\n\n\nAnswerService\n\nAnswerService\n\nAnswerModule -->\n\nAnswerService->AnswerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/answer/answer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnswerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AnswerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ExamModule\n                        \n                        \n                            QuestionGroupModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AnswerService } from './answer.service';\nimport { AnswerController } from './answer.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AnswerRepository } from './repositories/answer.repository';\nimport { AnswerGradeRepository } from './repositories/answer-grade.repository';\nimport { QuestionGroupModule } from 'src/question-group/question-group.module';\nimport { ExamModule } from 'src/exam/exam.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([AnswerRepository, AnswerGradeRepository]),\n    QuestionGroupModule,\n    ExamModule,\n  ],\n  controllers: [AnswerController],\n  providers: [AnswerService],\n})\nexport class AnswerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnswerRepository.html":{"url":"classes/AnswerRepository.html","title":"class - AnswerRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnswerRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/answer/repositories/answer.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseRepository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository } from 'typeorm';\nimport { BaseRepository } from 'typeorm-transactional-cls-hooked';\nimport { Answer } from '../entities/answer.entity';\n\n@EntityRepository(Answer)\nexport class AnswerRepository extends BaseRepository {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnswerScoreCheck1624750140568.html":{"url":"classes/AnswerScoreCheck1624750140568.html","title":"class - AnswerScoreCheck1624750140568","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnswerScoreCheck1624750140568\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1624750140569-AnswerScoreCheck.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'AnswerScoreCheck1624750140568'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1624750140569-AnswerScoreCheck.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1624750140569-AnswerScoreCheck.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1624750140569-AnswerScoreCheck.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AnswerScoreCheck1624750140568 implements MigrationInterface {\n  name = 'AnswerScoreCheck1624750140568';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query('ALTER TABLE `answer` DROP COLUMN `score`');\n    await queryRunner.query(\n      'ALTER TABLE `answer` ADD `score` tinyint NULL CHECK (`score` IS NULL OR `score` BETWEEN 1 AND 5)',\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query('ALTER TABLE `answer` DROP COLUMN `score`');\n    await queryRunner.query('ALTER TABLE `answer` ADD `score` int NULL');\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnswerService.html":{"url":"injectables/AnswerService.html","title":"injectable - AnswerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AnswerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/answer/answer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createBatch\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(answerRepository: AnswerRepository, answerGradeRepository: AnswerGradeRepository, questionService: QuestionService, examAgreementService: ExamAgreementService)\n                    \n                \n                        \n                            \n                                Defined in src/answer/answer.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        answerRepository\n                                                  \n                                                        \n                                                                        AnswerRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        answerGradeRepository\n                                                  \n                                                        \n                                                                        AnswerGradeRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        examAgreementService\n                                                  \n                                                        \n                                                                        ExamAgreementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createBatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createBatch(createAnswerDtos: CreateAnswerDto[], user: BatchUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/answer/answer.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAnswerDtos\n                                    \n                                            CreateAnswerDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                BatchUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/answer/answer.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/answer/answer.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/answer/answer.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateAnswerDto: UpdateAnswerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/answer/answer.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAnswerDto\n                                    \n                                                UpdateAnswerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { SoftDeleteResult } from 'src/core/interfaces/soft-delete-result.interface';\nimport { ExamAgreementService } from 'src/exam/services/exam-agreement.service';\nimport { Question } from 'src/question-group/entities/question.entity';\nimport { QuestionService } from 'src/question-group/services/question.service';\nimport { Transactional } from 'typeorm-transactional-cls-hooked';\nimport { CreateAnswerDto } from './dto/create-answer.dto';\nimport { UpdateAnswerDto } from './dto/update-answer.dto';\nimport { Answer } from './entities/answer.entity';\nimport { AnswerType } from './enums/answer-type.enum';\nimport { BatchUser } from './interfaces/batch-user.interface';\nimport { AnswerGradeRepository } from './repositories/answer-grade.repository';\nimport { AnswerRepository } from './repositories/answer.repository';\n\n@Injectable()\nexport class AnswerService {\n  constructor(\n    @InjectRepository(AnswerRepository)\n    private readonly answerRepository: AnswerRepository,\n    @InjectRepository(AnswerGradeRepository)\n    private readonly answerGradeRepository: AnswerGradeRepository,\n    private readonly questionService: QuestionService,\n    private readonly examAgreementService: ExamAgreementService,\n  ) {}\n\n  @Transactional()\n  async createBatch(\n    createAnswerDtos: CreateAnswerDto[],\n    user: BatchUser,\n  ): Promise {\n    const examAgreement = await this.examAgreementService.findOne(user);\n    const questions = await this.questionService.findByIds(\n      createAnswerDtos.map((dto) => dto.questionId),\n    );\n    const questionMap: ReadonlyMap = new Map(\n      questions.map((question) => [question.id, question]),\n    );\n\n    await this.answerRepository.delete({ examAgreement });\n\n    const answers = await Promise.all(\n      createAnswerDtos.map(async (answerDto) => {\n        const question = questionMap.get(answerDto.questionId);\n        if (!question) {\n          throw new NotFoundException(answerDto, 'Question not found');\n        }\n\n        const createDto = { ...answerDto, examAgreement };\n\n        if (answerDto.type === AnswerType.ANSWER_GRADE) {\n          return this.answerGradeRepository.save(\n            this.answerGradeRepository.create(createDto),\n          );\n        }\n\n        return this.answerRepository.save(\n          this.answerRepository.create(createDto),\n        );\n      }),\n    );\n\n    await this.examAgreementService.finishExam(examAgreement);\n\n    return answers;\n  }\n\n  findAll() {\n    return this.answerRepository.find();\n  }\n\n  async findOne(id: number): Promise {\n    const answer = await this.answerRepository.findOne(id);\n    if (!answer) {\n      throw new NotFoundException({ id });\n    }\n    return answer;\n  }\n\n  @Transactional()\n  async update(id: number, updateAnswerDto: UpdateAnswerDto): Promise {\n    let answer = await this.findOne(id);\n    answer = this.answerRepository.merge(answer, updateAnswerDto);\n\n    return this.answerRepository.save(answer);\n  }\n\n  @Transactional()\n  async remove(id: number): Promise {\n    const affected: SoftDeleteResult = await this.answerRepository.softDelete(\n      id,\n    );\n\n    if (!affected.raw.affectedRows) {\n      throw new NotFoundException({ id });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ping\n                            \n                            \n                                pong\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ping\n                        \n                        \n                    \n                \n            \n            \n                \nping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('health')\n                \n            \n\n            \n                \n                    Defined in src/controllers/app.controller.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pong\n                        \n                        \n                    \n                \n            \n            \n                \npong()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('health')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/controllers/app.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode, Post } from '@nestjs/common';\n\n@Controller()\nexport class AppController {\n  @Get('health')\n  ping(): string {\n    return 'Healthy';\n  }\n\n  @Post('health')\n  @HttpCode(200)\n  pong() {\n    return \"Uh\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAnswerModule\n\nAnswerModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnswerModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuxiliaryModule\n\nAuxiliaryModule\n\nAppModule -->\n\nAuxiliaryModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nExamModule\n\nExamModule\n\nAppModule -->\n\nExamModule->AppModule\n\n\n\n\n\nExportationModule\n\nExportationModule\n\nAppModule -->\n\nExportationModule->AppModule\n\n\n\n\n\nInfraModule\n\nInfraModule\n\nAppModule -->\n\nInfraModule->AppModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nAppModule -->\n\nLoggerModule->AppModule\n\n\n\n\n\nQuestionGroupModule\n\nQuestionGroupModule\n\nAppModule -->\n\nQuestionGroupModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AnswerModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            AuxiliaryModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            ExamModule\n                        \n                        \n                            ExportationModule\n                        \n                        \n                            InfraModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            QuestionGroupModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { configs, databaseConfigKey } from './config';\n\nimport { LoggerModule } from './logger/logger.module';\nimport { AuthModule } from './auth/auth.module';\nimport { UserModule } from './user/user.module';\nimport { ExamModule } from './exam/exam.module';\nimport { QuestionGroupModule } from './question-group/question-group.module';\nimport { AnswerModule } from './answer/answer.module';\nimport { CoreModule } from './core/core.module';\nimport { AuxiliaryModule } from './auxiliary/auxiliary.module';\nimport { InfraModule } from './infra/infra.module';\nimport { AppController } from './controllers/app.controller';\nimport { ExportationModule } from './exportation/exportation.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ load: configs }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) =>\n        configService.get(databaseConfigKey)!,\n      inject: [ConfigService],\n    }),\n    CoreModule,\n    LoggerModule,\n    AuthModule,\n    UserModule,\n    ExamModule,\n    QuestionGroupModule,\n    AnswerModule,\n    AuxiliaryModule,\n    InfraModule,\n    ExportationModule,\n  ],\n  controllers: [AppController],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auth.html":{"url":"classes/Auth.html","title":"class - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        FFEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                password\n                            \n                            \n                                salt\n                            \n                            \n                                id\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/entities/auth.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/entities/auth.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            salt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/entities/auth.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { FFEntity } from 'src/core/entities/ff.entity';\nimport { Column, Entity } from 'typeorm';\n\n@Entity('auth')\nexport class Auth extends FFEntity {\n  @Column({ type: 'varchar', unique: true })\n  login: string;\n\n  @Column({ type: 'varchar' })\n  password: string;\n\n  @Column({ type: 'varchar' })\n  salt: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auth1619445806509.html":{"url":"classes/Auth1619445806509.html","title":"class - Auth1619445806509","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auth1619445806509\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1619445806509-Auth.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Auth1619445806509'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1619445806509-Auth.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1619445806509-Auth.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1619445806509-Auth.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class Auth1619445806509 implements MigrationInterface {\n  name = 'Auth1619445806509';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      'CREATE TABLE `auth` (`created_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), `updated_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), `deleted_at` datetime(6) NULL, `id` int NOT NULL AUTO_INCREMENT, `login` varchar(255) NOT NULL, `password` varchar(255) NOT NULL, `salt` varchar(255) NOT NULL, UNIQUE INDEX `IDX_952e252e7470ff78b18a9ec786` (`login`), PRIMARY KEY (`id`)) ENGINE=InnoDB',\n    );\n    await queryRunner.query(\n      \"CREATE TABLE `user` (`created_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), `updated_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), `deleted_at` datetime(6) NULL, `id` int NOT NULL AUTO_INCREMENT, `enrollment` varchar(255) NOT NULL, `cpf` varchar(255) NOT NULL, `type` varchar(255) NOT NULL, `role` enum ('manager', 'admin', 'regular') NOT NULL DEFAULT 'regular', UNIQUE INDEX `IDX_914f18c8fbe52b10a6b276bc0c` (`enrollment`), UNIQUE INDEX `IDX_a6235b5ef0939d8deaad755fc8` (`cpf`), INDEX `IDX_31ef2b4d30675d0c15056b7f6e` (`type`), PRIMARY KEY (`id`)) ENGINE=InnoDB\",\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      'DROP INDEX `IDX_31ef2b4d30675d0c15056b7f6e` ON `user`',\n    );\n    await queryRunner.query(\n      'DROP INDEX `IDX_a6235b5ef0939d8deaad755fc8` ON `user`',\n    );\n    await queryRunner.query(\n      'DROP INDEX `IDX_914f18c8fbe52b10a6b276bc0c` ON `user`',\n    );\n    await queryRunner.query('DROP TABLE `user`');\n    await queryRunner.query(\n      'DROP INDEX `IDX_952e252e7470ff78b18a9ec786` ON `auth`',\n    );\n    await queryRunner.query('DROP TABLE `auth`');\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/controllers/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/auth/controllers/auth.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AuthService } from '../auth.service';\nimport { LoginDto } from '../dtos/login.dto';\n\n@Controller('auth')\n@ApiTags('Auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDto.html":{"url":"classes/AuthDto.html","title":"class - AuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dtos/auth.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class AuthDto {\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nCaslModule\n\nCaslModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCaslModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCaslModule \n\nCaslModule \n\nCaslModule  -->\n\nAuthModule->CaslModule \n\n\n\n\n\nJwtGuard \n\nJwtGuard \n\nJwtGuard  -->\n\nAuthModule->JwtGuard \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtGuard\n\nJwtGuard\n\nAuthModule -->\n\nJwtGuard->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtGuard\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CaslModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            CaslModule\n                        \n                        \n                            JwtGuard\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { UserModule } from '../user/user.module';\nimport { jwtConfigKey } from '../config';\n\nimport { CaslModule } from './casl/casl.module';\n\nimport { AuthService } from './auth.service';\nimport { AuthRepository } from './repositories/auth.repository';\nimport { JwtGuard } from './guards/jwt.guard';\nimport { AuthController } from './controllers/auth.controller';\nimport { JwtStrategy } from './strategies/jwt.strategy';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([AuthRepository]),\n    ConfigModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) =>\n        configService.get(jwtConfigKey)!,\n      inject: [ConfigService],\n    }),\n    UserModule,\n    CaslModule,\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtGuard, JwtStrategy],\n  exports: [AuthService, JwtGuard, CaslModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthRepository.html":{"url":"classes/AuthRepository.html","title":"class - AuthRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/repositories/auth.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseRepository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository } from 'typeorm';\nimport { BaseRepository } from 'typeorm-transactional-cls-hooked';\nimport { Auth } from '../entities/auth.entity';\n\n@EntityRepository(Auth)\nexport class AuthRepository extends BaseRepository {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAuth\n                            \n                            \n                                findAuth\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                mustFindAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authRepository: AuthRepository, jwtService: JwtService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        AuthRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createAuth\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAuth(createAuthDto: CreateAuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAuthDto\n                                    \n                                                CreateAuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAuth\n                        \n                        \n                    \n                \n            \n            \n                \nfindAuth(authDto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authDto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            mustFindAuth\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mustFindAuth(authDto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authDto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  forwardRef,\n  Inject,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport bcrypt = require('bcryptjs');\n\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Transactional } from 'typeorm-transactional-cls-hooked';\n\nimport { UserService } from '../user/user.service';\n\nimport { LoginDto } from './dtos/login.dto';\nimport { Auth } from './entities/auth.entity';\nimport { AuthRepository } from './repositories/auth.repository';\nimport { CreateAuthDto } from './dtos/create-auth.dto';\nimport { AuthDto } from './dtos/auth.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @InjectRepository(AuthRepository)\n    private readonly authRepository: AuthRepository,\n    private readonly jwtService: JwtService,\n    @Inject(forwardRef(() => UserService))\n    private readonly userService: UserService,\n  ) {}\n\n  findAuth(authDto: AuthDto): Promise {\n    return this.authRepository.findOne({ ...authDto });\n  }\n\n  async mustFindAuth(authDto: AuthDto): Promise {\n    const auth = await this.findAuth({ login: authDto.login });\n    if (!auth) {\n      throw new NotFoundException(authDto);\n    }\n\n    return auth;\n  }\n\n  async login(loginDto: LoginDto): Promise {\n    const auth = await this.mustFindAuth(loginDto);\n\n    const match = await bcrypt.compare(loginDto.password, auth.password);\n    if (!match) {\n      throw new UnauthorizedException(loginDto);\n    }\n\n    const user = await this.userService.mustFindUser({\n      enrollment: loginDto.login,\n    });\n    const accessToken = await this.jwtService.signAsync({\n      uid: user.enrollment,\n      type: user.type,\n    });\n\n    return accessToken;\n  }\n\n  @Transactional()\n  async createAuth(createAuthDto: CreateAuthDto): Promise {\n    const salt = await bcrypt.genSalt();\n    const password = await bcrypt.hash(createAuthDto.password, salt);\n\n    await this.authRepository.save({\n      login: createAuthDto.login,\n      salt,\n      password,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auxiliary1620477175799.html":{"url":"classes/Auxiliary1620477175799.html","title":"class - Auxiliary1620477175799","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auxiliary1620477175799\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1620477175799-Auxiliary.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Auxiliary1620477175799'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1620477175799-Auxiliary.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1620477175799-Auxiliary.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1620477175799-Auxiliary.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class Auxiliary1620477175799 implements MigrationInterface {\n  name = 'Auxiliary1620477175799';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      \"CREATE TABLE `exam` (`created_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), `updated_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), `deleted_at` datetime(6) NULL, `id` int NOT NULL AUTO_INCREMENT, `text` text NOT NULL, `description` text NOT NULL, `started_at` datetime NOT NULL, `ended_at` datetime NOT NULL, `allow_anonymous` tinyint NOT NULL DEFAULT 0, `status` enum ('active', 'inactive') NOT NULL, `period_id` int NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB\",\n    );\n    await queryRunner.query(\n      'CREATE TABLE `period` (`created_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), `updated_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), `deleted_at` datetime(6) NULL, `id` int NOT NULL AUTO_INCREMENT, `name` varchar(255) NULL, `stated_at` datetime NOT NULL, `ended_at` datetime NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB',\n    );\n    await queryRunner.query(\n      'CREATE TABLE `course` (`created_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), `updated_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), `deleted_at` datetime(6) NULL, `id` int NOT NULL AUTO_INCREMENT, `code` varchar(255) NOT NULL, `title` varchar(255) NOT NULL, UNIQUE INDEX `IDX_5cf4963ae12285cda6432d5a3a` (`code`), PRIMARY KEY (`id`)) ENGINE=InnoDB',\n    );\n    await queryRunner.query(\n      'CREATE TABLE `subject` (`created_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), `updated_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), `deleted_at` datetime(6) NULL, `id` int NOT NULL AUTO_INCREMENT, `code` varchar(255) NOT NULL, `title` varchar(255) NOT NULL, `code_id` int NOT NULL, `course_id` int NULL, UNIQUE INDEX `IDX_92374adc6b583e8cf659977e48` (`code`), PRIMARY KEY (`id`)) ENGINE=InnoDB',\n    );\n    await queryRunner.query(\n      'CREATE TABLE `grade` (`created_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), `updated_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), `deleted_at` datetime(6) NULL, `id` int NOT NULL AUTO_INCREMENT, `subject_id` int NULL, `period_id` int NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB',\n    );\n    await queryRunner.query(\n      'CREATE TABLE `exam_agreement` (`created_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), `updated_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), `deleted_at` datetime(6) NULL, `id` int NOT NULL AUTO_INCREMENT, `uuid` varchar(255) NOT NULL, `anonymous` tinyint NOT NULL, `user_id` int NOT NULL, UNIQUE INDEX `IDX_2b38bb607ef3e86920e9bd0163` (`uuid`), PRIMARY KEY (`id`)) ENGINE=InnoDB',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `question_group` ADD `personal` tinyint NOT NULL DEFAULT 0',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `question_group` ADD `exam_id` int NULL',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `question` DROP FOREIGN KEY `FK_3b2789ae1c494ff1bf8dd4d4607`',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `question` CHANGE `group_id` `group_id` int NOT NULL',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `question_group` CHANGE `class` `class` tinyint NOT NULL DEFAULT 0',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `question` ADD CONSTRAINT `FK_3b2789ae1c494ff1bf8dd4d4607` FOREIGN KEY (`group_id`) REFERENCES `question_group`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `question_group` ADD CONSTRAINT `FK_1d110bd5138b275a2ea2944e290` FOREIGN KEY (`exam_id`) REFERENCES `exam`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `exam` ADD CONSTRAINT `FK_ba483ad17eb41fb181aa3a77d4f` FOREIGN KEY (`period_id`) REFERENCES `period`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `subject` ADD CONSTRAINT `FK_b9db72ddc93f196bf9d79132171` FOREIGN KEY (`course_id`) REFERENCES `course`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `grade` ADD CONSTRAINT `FK_b472107b61171823120f069fd50` FOREIGN KEY (`subject_id`) REFERENCES `subject`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `grade` ADD CONSTRAINT `FK_d35fb46683694975ba85bcd804e` FOREIGN KEY (`period_id`) REFERENCES `period`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION',\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      'ALTER TABLE `grade` DROP FOREIGN KEY `FK_d35fb46683694975ba85bcd804e`',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `grade` DROP FOREIGN KEY `FK_b472107b61171823120f069fd50`',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `subject` DROP FOREIGN KEY `FK_b9db72ddc93f196bf9d79132171`',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `exam` DROP FOREIGN KEY `FK_ba483ad17eb41fb181aa3a77d4f`',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `question_group` DROP FOREIGN KEY `FK_1d110bd5138b275a2ea2944e290`',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `question` DROP FOREIGN KEY `FK_3b2789ae1c494ff1bf8dd4d4607`',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `question_group` CHANGE `class` `class` tinyint NOT NULL',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `question` CHANGE `group_id` `group_id` int NULL',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `question` ADD CONSTRAINT `FK_3b2789ae1c494ff1bf8dd4d4607` FOREIGN KEY (`group_id`) REFERENCES `question_group`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION',\n    );\n    await queryRunner.query('ALTER TABLE `exam` DROP COLUMN `period_id`');\n    await queryRunner.query('ALTER TABLE `exam` DROP COLUMN `status`');\n    await queryRunner.query('ALTER TABLE `exam` DROP COLUMN `allow_anonymous`');\n    await queryRunner.query('ALTER TABLE `exam` DROP COLUMN `ended_at`');\n    await queryRunner.query('ALTER TABLE `exam` DROP COLUMN `started_at`');\n    await queryRunner.query('ALTER TABLE `exam` DROP COLUMN `description`');\n    await queryRunner.query('ALTER TABLE `exam` DROP COLUMN `text`');\n    await queryRunner.query(\n      'ALTER TABLE `question_group` DROP COLUMN `exam_id`',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `question_group` DROP COLUMN `personal`',\n    );\n    await queryRunner.query(\n      'DROP INDEX `IDX_2b38bb607ef3e86920e9bd0163` ON `exam_agreement`',\n    );\n    await queryRunner.query('DROP TABLE `exam_agreement`');\n    await queryRunner.query('DROP TABLE `grade`');\n    await queryRunner.query(\n      'DROP INDEX `IDX_92374adc6b583e8cf659977e48` ON `subject`',\n    );\n    await queryRunner.query('DROP TABLE `subject`');\n    await queryRunner.query(\n      'DROP INDEX `IDX_5cf4963ae12285cda6432d5a3a` ON `course`',\n    );\n    await queryRunner.query('DROP TABLE `course`');\n    await queryRunner.query('DROP TABLE `period`');\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auxiliary1624416663574.html":{"url":"classes/Auxiliary1624416663574.html","title":"class - Auxiliary1624416663574","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auxiliary1624416663574\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1624416663574-Auxiliary.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Auxiliary1624416663574'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1624416663574-Auxiliary.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1624416663574-Auxiliary.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1624416663574-Auxiliary.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class Auxiliary1624416663574 implements MigrationInterface {\n    name = 'Auxiliary1624416663574'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `period` CHANGE `stated_at` `started_at` datetime NOT NULL\");\n        await queryRunner.query(\"CREATE TABLE `question_group_grade` (`created_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), `updated_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), `deleted_at` datetime(6) NULL, `id` int NOT NULL AUTO_INCREMENT, `title` varchar(255) NOT NULL, `class` tinyint NOT NULL DEFAULT 0, `personal` tinyint NOT NULL DEFAULT 0, `position` int NOT NULL DEFAULT '0', `exam_id` int NULL, INDEX `IX_question_group_position` (`position`), PRIMARY KEY (`id`)) ENGINE=InnoDB\");\n        await queryRunner.query(\"CREATE TABLE `professor_grade` (`user_id` int NOT NULL, `grade_id` int NOT NULL, INDEX `IDX_f2d35d0b9823628374f51931dd` (`user_id`), INDEX `IDX_df58a2a413f5647f6411002cb2` (`grade_id`), PRIMARY KEY (`user_id`, `grade_id`)) ENGINE=InnoDB\");\n        await queryRunner.query(\"CREATE TABLE `student_grade` (`user_id` int NOT NULL, `grade_id` int NOT NULL, INDEX `IDX_7540599d89cb2b6e17cc56d517` (`user_id`), INDEX `IDX_26862c959c4ecfc8f1b4a1a055` (`grade_id`), PRIMARY KEY (`user_id`, `grade_id`)) ENGINE=InnoDB\");\n        await queryRunner.query(\"ALTER TABLE `subject` DROP COLUMN `code_id`\");\n        await queryRunner.query(\"ALTER TABLE `exam_agreement` ADD `status` enum ('started', 'finished') NOT NULL DEFAULT 'started'\");\n        await queryRunner.query(\"ALTER TABLE `subject` DROP FOREIGN KEY `FK_b9db72ddc93f196bf9d79132171`\");\n        await queryRunner.query(\"ALTER TABLE `subject` CHANGE `course_id` `course_id` int NOT NULL\");\n        await queryRunner.query(\"ALTER TABLE `grade` DROP FOREIGN KEY `FK_b472107b61171823120f069fd50`\");\n        await queryRunner.query(\"ALTER TABLE `grade` DROP FOREIGN KEY `FK_d35fb46683694975ba85bcd804e`\");\n        await queryRunner.query(\"ALTER TABLE `grade` CHANGE `subject_id` `subject_id` int NOT NULL\");\n        await queryRunner.query(\"ALTER TABLE `grade` CHANGE `period_id` `period_id` int NOT NULL\");\n        await queryRunner.query(\"ALTER TABLE `subject` ADD CONSTRAINT `FK_b9db72ddc93f196bf9d79132171` FOREIGN KEY (`course_id`) REFERENCES `course`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n        await queryRunner.query(\"ALTER TABLE `grade` ADD CONSTRAINT `FK_b472107b61171823120f069fd50` FOREIGN KEY (`subject_id`) REFERENCES `subject`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n        await queryRunner.query(\"ALTER TABLE `grade` ADD CONSTRAINT `FK_d35fb46683694975ba85bcd804e` FOREIGN KEY (`period_id`) REFERENCES `period`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n        await queryRunner.query(\"ALTER TABLE `question_group_grade` ADD CONSTRAINT `FK_ba86f32978b67a878005c5af78a` FOREIGN KEY (`exam_id`) REFERENCES `exam`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n        await queryRunner.query(\"ALTER TABLE `professor_grade` ADD CONSTRAINT `FK_f2d35d0b9823628374f51931ddd` FOREIGN KEY (`user_id`) REFERENCES `user`(`id`) ON DELETE CASCADE ON UPDATE NO ACTION\");\n        await queryRunner.query(\"ALTER TABLE `professor_grade` ADD CONSTRAINT `FK_df58a2a413f5647f6411002cb28` FOREIGN KEY (`grade_id`) REFERENCES `grade`(`id`) ON DELETE CASCADE ON UPDATE NO ACTION\");\n        await queryRunner.query(\"ALTER TABLE `student_grade` ADD CONSTRAINT `FK_7540599d89cb2b6e17cc56d5170` FOREIGN KEY (`user_id`) REFERENCES `user`(`id`) ON DELETE CASCADE ON UPDATE NO ACTION\");\n        await queryRunner.query(\"ALTER TABLE `student_grade` ADD CONSTRAINT `FK_26862c959c4ecfc8f1b4a1a055c` FOREIGN KEY (`grade_id`) REFERENCES `grade`(`id`) ON DELETE CASCADE ON UPDATE NO ACTION\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `student_grade` DROP FOREIGN KEY `FK_26862c959c4ecfc8f1b4a1a055c`\");\n        await queryRunner.query(\"ALTER TABLE `student_grade` DROP FOREIGN KEY `FK_7540599d89cb2b6e17cc56d5170`\");\n        await queryRunner.query(\"ALTER TABLE `professor_grade` DROP FOREIGN KEY `FK_df58a2a413f5647f6411002cb28`\");\n        await queryRunner.query(\"ALTER TABLE `professor_grade` DROP FOREIGN KEY `FK_f2d35d0b9823628374f51931ddd`\");\n        await queryRunner.query(\"ALTER TABLE `question_group_grade` DROP FOREIGN KEY `FK_ba86f32978b67a878005c5af78a`\");\n        await queryRunner.query(\"ALTER TABLE `grade` DROP FOREIGN KEY `FK_d35fb46683694975ba85bcd804e`\");\n        await queryRunner.query(\"ALTER TABLE `grade` DROP FOREIGN KEY `FK_b472107b61171823120f069fd50`\");\n        await queryRunner.query(\"ALTER TABLE `subject` DROP FOREIGN KEY `FK_b9db72ddc93f196bf9d79132171`\");\n        await queryRunner.query(\"ALTER TABLE `grade` CHANGE `period_id` `period_id` int NULL\");\n        await queryRunner.query(\"ALTER TABLE `grade` CHANGE `subject_id` `subject_id` int NULL\");\n        await queryRunner.query(\"ALTER TABLE `grade` ADD CONSTRAINT `FK_d35fb46683694975ba85bcd804e` FOREIGN KEY (`period_id`) REFERENCES `period`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n        await queryRunner.query(\"ALTER TABLE `grade` ADD CONSTRAINT `FK_b472107b61171823120f069fd50` FOREIGN KEY (`subject_id`) REFERENCES `subject`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n        await queryRunner.query(\"ALTER TABLE `subject` CHANGE `course_id` `course_id` int NULL\");\n        await queryRunner.query(\"ALTER TABLE `subject` ADD CONSTRAINT `FK_b9db72ddc93f196bf9d79132171` FOREIGN KEY (`course_id`) REFERENCES `course`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n        await queryRunner.query(\"ALTER TABLE `exam_agreement` DROP COLUMN `status`\");\n        await queryRunner.query(\"ALTER TABLE `subject` ADD `code_id` int NOT NULL\");\n        await queryRunner.query(\"DROP INDEX `IDX_26862c959c4ecfc8f1b4a1a055` ON `student_grade`\");\n        await queryRunner.query(\"DROP INDEX `IDX_7540599d89cb2b6e17cc56d517` ON `student_grade`\");\n        await queryRunner.query(\"DROP TABLE `student_grade`\");\n        await queryRunner.query(\"DROP INDEX `IDX_df58a2a413f5647f6411002cb2` ON `professor_grade`\");\n        await queryRunner.query(\"DROP INDEX `IDX_f2d35d0b9823628374f51931dd` ON `professor_grade`\");\n        await queryRunner.query(\"DROP TABLE `professor_grade`\");\n        await queryRunner.query(\"DROP INDEX `IX_question_group_position` ON `question_group_grade`\");\n        await queryRunner.query(\"DROP TABLE `question_group_grade`\");\n        await queryRunner.query(\"ALTER TABLE `period` CHANGE `started_at` `stated_at` datetime NOT NULL\");\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuxiliaryModule.html":{"url":"modules/AuxiliaryModule.html","title":"module - AuxiliaryModule","body":"\n                   \n\n\n\n\n    Modules\n    AuxiliaryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuxiliaryModule\n\n\n\ncluster_AuxiliaryModule_exports\n\n\n\ncluster_AuxiliaryModule_providers\n\n\n\n\nGradeService \n\nGradeService \n\n\n\nPeriodService \n\nPeriodService \n\n\n\nProfessorService \n\nProfessorService \n\n\n\nStudentService \n\nStudentService \n\n\n\nAuxiliaryModule\n\nAuxiliaryModule\n\nGradeService  -->\n\nAuxiliaryModule->GradeService \n\n\n\nPeriodService  -->\n\nAuxiliaryModule->PeriodService \n\n\n\nProfessorService  -->\n\nAuxiliaryModule->ProfessorService \n\n\n\nStudentService  -->\n\nAuxiliaryModule->StudentService \n\n\n\n\n\nGradeService\n\nGradeService\n\nAuxiliaryModule -->\n\nGradeService->AuxiliaryModule\n\n\n\n\n\nPeriodService\n\nPeriodService\n\nAuxiliaryModule -->\n\nPeriodService->AuxiliaryModule\n\n\n\n\n\nProfessorService\n\nProfessorService\n\nAuxiliaryModule -->\n\nProfessorService->AuxiliaryModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAuxiliaryModule -->\n\nStudentService->AuxiliaryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auxiliary/auxiliary.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GradeService\n                        \n                        \n                            PeriodService\n                        \n                        \n                            ProfessorService\n                        \n                        \n                            StudentService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GradeService\n                        \n                        \n                            PeriodService\n                        \n                        \n                            ProfessorService\n                        \n                        \n                            StudentService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { GradeRepository } from './repositories/grade.repository';\nimport { PeriodRepository } from './repositories/period.repository';\nimport { ProfessorRepository } from './repositories/professor.repository';\nimport { StudentRepository } from './repositories/student.repository';\n\nimport { GradeService } from './services/grade.service';\nimport { PeriodService } from './services/period.service';\nimport { ProfessorService } from './services/professor.service';\nimport { StudentService } from './services/student.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      StudentRepository,\n      ProfessorRepository,\n      GradeRepository,\n      PeriodRepository,\n    ]),\n  ],\n  providers: [StudentService, ProfessorService, GradeService, PeriodService],\n  exports: [StudentService, ProfessorService, GradeService, PeriodService],\n})\nexport class AuxiliaryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BatchUser.html":{"url":"interfaces/BatchUser.html","title":"interface - BatchUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BatchUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/answer/interfaces/batch-user.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        examId\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        examId\n                                    \n                                \n                                \n                                    \n                                        examId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BatchUser {\n  userId: number;\n  examId: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CaslAbilityFactory.html":{"url":"injectables/CaslAbilityFactory.html","title":"injectable - CaslAbilityFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CaslAbilityFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/casl/factories/casl-ability.factory.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createForUser\n                        \n                        \n                    \n                \n            \n            \n                \ncreateForUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/casl/factories/casl-ability.factory.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Ability,\n  AbilityBuilder,\n  AbilityClass,\n  ExtractSubjectType,\n  InferSubjects,\n} from '@casl/ability';\nimport { Injectable } from '@nestjs/common';\n\nimport { Answer } from '../../../answer/entities/answer.entity';\nimport { Exam } from '../../../exam/entities/exam.entity';\nimport { ExamAgreement } from '../../../exam/entities/exam-agreement.entity';\nimport { User } from '../../../user/entities/user.entity';\nimport { CaslAction as Action } from '../enums/casl-action.enum';\nimport { QuestionGroup } from 'src/question-group/entities/question-group.entity';\nimport { UserRole } from 'src/user/enum/user-role.enum';\n\ntype CaslSubjects =\n  | InferSubjects\n  | 'all';\n\ntype AppAbility = Ability;\n\n@Injectable()\nexport class CaslAbilityFactory {\n  createForUser(user: User) {\n    const { can, cannot, build } = new AbilityBuilder(\n      Ability as AbilityClass,\n    );\n\n    switch (user.role) {\n      case UserRole.ADMIN:\n        can(Action.MANAGE, 'all');\n        break;\n      case UserRole.MANAGER:\n        can(Action.READ, 'all');\n        can(Action.MANAGE, QuestionGroup);\n        break;\n      default:\n        can(Action.READ, User);\n        can(Action.READ, ExamAgreement, { userId: user.id });\n    }\n\n    // User\n    can(Action.UPDATE, User, { id: user.id });\n\n    can(Action.MANAGE, Answer, {});\n\n    // ExamAgreement\n    cannot(Action.DELETE, ExamAgreement, { uniqueCode: undefined });\n\n    const examAgreementNotFinished = {\n      userId: user.id,\n      uuid: undefined,\n    };\n\n    can(Action.MANAGE, ExamAgreement, examAgreementNotFinished);\n\n    // Answer\n    can(Action.MANAGE, Answer, {\n      examAgreement: examAgreementNotFinished,\n    });\n\n    // Answer Grade\n\n    return build({\n      detectSubjectType: (item) =>\n        item.constructor as ExtractSubjectType,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaslModule.html":{"url":"modules/CaslModule.html","title":"module - CaslModule","body":"\n                   \n\n\n\n\n    Modules\n    CaslModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaslModule\n\n\n\ncluster_CaslModule_providers\n\n\n\ncluster_CaslModule_exports\n\n\n\n\nCaslAbilityFactory \n\nCaslAbilityFactory \n\n\n\nCaslModule\n\nCaslModule\n\nCaslAbilityFactory  -->\n\nCaslModule->CaslAbilityFactory \n\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\nCaslModule -->\n\nCaslAbilityFactory->CaslModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/casl/casl.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CaslAbilityFactory\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CaslAbilityFactory\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CaslAbilityFactory } from './factories/casl-ability.factory';\n\n@Module({ providers: [CaslAbilityFactory], exports: [CaslAbilityFactory] })\nexport class CaslModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CopyQuestionGroupDto.html":{"url":"classes/CopyQuestionGroupDto.html","title":"class - CopyQuestionGroupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CopyQuestionGroupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-group/dtos/copy-question-group.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                examId\n                            \n                            \n                                groupId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            examId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsPositive()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/dtos/copy-question-group.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsPositive()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/dtos/copy-question-group.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsPositive } from 'class-validator';\n\nexport class CopyQuestionGroupDto {\n  @IsPositive()\n  groupId: number;\n\n  @IsPositive()\n  examId: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nHttpExceptionFilter \n\nHttpExceptionFilter \n\n\n\nPayloadInterceptor \n\nPayloadInterceptor \n\n\n\nCoreModule\n\nCoreModule\n\nHttpExceptionFilter  -->\n\nCoreModule->HttpExceptionFilter \n\n\n\nPayloadInterceptor  -->\n\nCoreModule->PayloadInterceptor \n\n\n\n\n\nPayloadInterceptor\n\nPayloadInterceptor\n\nCoreModule -->\n\nPayloadInterceptor->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PayloadInterceptor\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HttpExceptionFilter\n                        \n                        \n                            PayloadInterceptor\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { HttpExceptionFilter } from './filters/http-exception.filter';\nimport { PayloadInterceptor } from './interceptors/payload.interceptor';\n\n@Global()\n@Module({\n  imports: [ConfigModule],\n  providers: [PayloadInterceptor, HttpExceptionFilter],\n  exports: [PayloadInterceptor, HttpExceptionFilter],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auxiliary/entities/course.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        FFEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                subjects\n                            \n                            \n                                title\n                            \n                            \n                                id\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auxiliary/entities/course.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auxiliary/entities/course.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auxiliary/entities/course.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, OneToMany } from 'typeorm';\nimport { FFEntity } from '../../core/entities/ff.entity';\nimport { Subject } from './subject.entity';\n\n@Entity('course')\nexport class Course extends FFEntity {\n  @Column({ type: 'varchar', unique: true })\n  code: string;\n\n  @Column({ type: 'varchar' })\n  title: string;\n\n  @OneToMany(() => Subject, (subject) => subject.course)\n  subjects: Subject[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAnswerDto.html":{"url":"classes/CreateAnswerDto.html","title":"class - CreateAnswerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAnswerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/answer/dto/create-answer.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                gradeId\n                            \n                            \n                                questionId\n                            \n                            \n                                    Optional\n                                score\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            gradeId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsPositive()@ValidateIf(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/answer/dto/create-answer.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsPositive()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/answer/dto/create-answer.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@Min(1)@Max(5)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/answer/dto/create-answer.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AnswerType\n\n                        \n                    \n                    \n                        \n                            Default value : AnswerType.ANSWER\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsEnum(AnswerType)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/answer/dto/create-answer.dto.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEnum,\n  IsOptional,\n  IsPositive,\n  Max,\n  Min,\n  ValidateIf,\n} from 'class-validator';\nimport { AnswerType } from '../enums/answer-type.enum';\n\nexport class CreateAnswerDto {\n  @IsOptional()\n  @Min(1)\n  @Max(5)\n  score?: number;\n\n  @IsPositive()\n  questionId: number;\n\n  @IsOptional()\n  @IsEnum(AnswerType)\n  type: AnswerType = AnswerType.ANSWER;\n\n  @IsPositive()\n  @ValidateIf((o: CreateAnswerDto) => o.type === AnswerType.ANSWER_GRADE)\n  gradeId?: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthDto.html":{"url":"classes/CreateAuthDto.html","title":"class - CreateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/create-auth.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        LoginDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@Length(PASSWORD_MIN, PASSWORD_MAX)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         LoginDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoginDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AuthDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         AuthDto:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { LoginDto } from './login.dto';\n\nexport class CreateAuthDto extends LoginDto {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateExamAgreementDto.html":{"url":"classes/CreateExamAgreementDto.html","title":"class - CreateExamAgreementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateExamAgreementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/dtos/create-exam-agreement.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                anonymous\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            anonymous\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsBoolean()@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/dtos/create-exam-agreement.dto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsBoolean, IsOptional } from 'class-validator';\nimport { ExamAgreementDto } from './exam-agreement.dto';\n\nexport class CreateExamAgreementDto extends OmitType(ExamAgreementDto, [\n  'userId',\n]) {\n  @IsOptional()\n  @IsBoolean()\n  @Type(() => Boolean)\n  anonymous?: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateExamDto.html":{"url":"classes/CreateExamDto.html","title":"class - CreateExamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateExamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/dtos/create-exam.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                allowAnonymous\n                            \n                            \n                                description\n                            \n                            \n                                endedAt\n                            \n                            \n                                startedAt\n                            \n                            \n                                    Optional\n                                targets\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            allowAnonymous\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/dtos/create-exam.dto.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/dtos/create-exam.dto.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/dtos/create-exam.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/dtos/create-exam.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExamTargetType[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsArray()@IsEnum(ExamTargetType, {each: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/dtos/create-exam.dto.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/dtos/create-exam.dto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsBoolean,\n  IsDate,\n  IsEnum,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n} from 'class-validator';\nimport { ExamTargetType } from '../enums/exam-target-type.enum';\n\nexport class CreateExamDto {\n  @IsString()\n  @IsNotEmpty()\n  title: string;\n\n  @IsString()\n  @IsNotEmpty()\n  description: string;\n\n  @IsDate()\n  @Type(() => Date)\n  startedAt: Date;\n\n  @IsDate()\n  @Type(() => Date)\n  endedAt: Date;\n\n  @IsOptional()\n  @IsBoolean()\n  allowAnonymous?: boolean;\n\n  @IsOptional()\n  @IsArray()\n  @IsEnum(ExamTargetType, {each: true})\n  targets?: ExamTargetType[];\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQuestion.html":{"url":"classes/CreateQuestion.html","title":"class - CreateQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-group/dtos/create-questions.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsPositive()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/dtos/create-questions.dto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsDefined,\n  IsOptional,\n  IsPositive,\n  ValidateNested,\n} from 'class-validator';\nimport { CreateQuestionDto } from './create-question.dto';\n\nclass CreateQuestion extends OmitType(CreateQuestionDto, ['groupId']) {\n  @IsOptional()\n  @IsPositive()\n  id?: number;\n}\n\nexport class CreateQuestionsDto {\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => CreateQuestion)\n  @IsDefined({ each: true })\n  @ArrayMinSize(1)\n  questions: CreateQuestion[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQuestionDto.html":{"url":"classes/CreateQuestionDto.html","title":"class - CreateQuestionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQuestionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-group/dtos/create-question.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                groupId\n                            \n                            \n                                    Optional\n                                imageAlt\n                            \n                            \n                                    Optional\n                                imageUrl\n                            \n                            \n                                    Optional\n                                required\n                            \n                            \n                                statement\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsPositive()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/dtos/create-question.dto.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            imageAlt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/dtos/create-question.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            imageUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsUrl()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/dtos/create-question.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            required\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: Boolean, title: 'Questão pode não ser obrigatória. Se essa propriedade não for fornecida, ela é verdadeira por padrão'})@IsBoolean()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/dtos/create-question.dto.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/dtos/create-question.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsNotEmpty,\n  IsOptional,\n  IsPositive,\n  IsString,\n  IsUrl,\n} from 'class-validator';\n\nexport class CreateQuestionDto {\n  @IsString()\n  @IsNotEmpty()\n  statement: string;\n\n  @IsOptional()\n  @IsUrl()\n  imageUrl?: string;\n\n  @IsOptional()\n  @IsString()\n  @IsNotEmpty()\n  imageAlt?: string;\n\n  @ApiProperty({\n    type: Boolean,\n    title:\n      'Questão pode não ser obrigatória. Se essa propriedade não for fornecida, ela é verdadeira por padrão',\n  })\n  @IsBoolean()\n  @IsOptional()\n  required?: boolean;\n\n  @IsPositive()\n  groupId: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQuestionGroupDto.html":{"url":"classes/CreateQuestionGroupDto.html","title":"class - CreateQuestionGroupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQuestionGroupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-group/dtos/create-question-group.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                class\n                            \n                            \n                                    Optional\n                                examId\n                            \n                            \n                                    Optional\n                                personal\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/dtos/create-question-group.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            examId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsPositive()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/dtos/create-question-group.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            personal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/dtos/create-question-group.dto.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/dtos/create-question-group.dto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsBoolean,\n  IsNotEmpty,\n  IsOptional,\n  IsPositive,\n  IsString,\n} from 'class-validator';\n\nexport class CreateQuestionGroupDto {\n  @IsString()\n  @IsNotEmpty()\n  title: string;\n\n  @IsOptional()\n  @IsBoolean()\n  class?: boolean;\n\n  @IsOptional()\n  @IsBoolean()\n  personal?: boolean;\n\n  @IsOptional()\n  @IsPositive()\n  examId?: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQuestionsDto.html":{"url":"classes/CreateQuestionsDto.html","title":"class - CreateQuestionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQuestionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-group/dtos/create-questions.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                questions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CreateQuestion[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsArray()@ValidateNested({each: true})@Type(undefined)@IsDefined({each: true})@ArrayMinSize(1)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/dtos/create-questions.dto.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsDefined,\n  IsOptional,\n  IsPositive,\n  ValidateNested,\n} from 'class-validator';\nimport { CreateQuestionDto } from './create-question.dto';\n\nclass CreateQuestion extends OmitType(CreateQuestionDto, ['groupId']) {\n  @IsOptional()\n  @IsPositive()\n  id?: number;\n}\n\nexport class CreateQuestionsDto {\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => CreateQuestion)\n  @IsDefined({ each: true })\n  @ArrayMinSize(1)\n  questions: CreateQuestion[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cpf\n                            \n                            \n                                enrollment\n                            \n                            \n                                role\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cpf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsCPF()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dtos/create-user.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enrollment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEnrollment()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dtos/create-user.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEnum(UserRole)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dtos/create-user.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEnum(UserType)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dtos/create-user.dto.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum } from 'class-validator';\nimport { IsCPF } from 'brazilian-class-validator';\nimport { PickType } from '@nestjs/swagger';\n\nimport { IsEnrollment } from '../../core/decorators/is-enrollment.decorator';\nimport { UserType } from '../enum/user-type.enum';\nimport { CreateAuthDto } from '../../auth/dtos/create-auth.dto';\nimport { UserRole } from '../enum/user-role.enum';\n\nexport class CreateUserDto extends PickType(CreateAuthDto, ['password']) {\n  @IsCPF()\n  cpf: string;\n\n  @IsEnrollment()\n  enrollment: string;\n\n  @IsEnum(UserType)\n  type: UserType;\n\n  @IsEnum(UserRole)\n  role: UserRole;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CsvLine.html":{"url":"interfaces/CsvLine.html","title":"interface - CsvLine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CsvLine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exportation/interfaces/csv-line.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Código Único\n                                \n                                \n                                            Optional\n                                        Disciplina\n                                \n                                \n                                        Grupo de Questões\n                                \n                                \n                                        Matrícula\n                                \n                                \n                                        Nota\n                                \n                                \n                                            Optional\n                                        Observação\n                                \n                                \n                                        Pessoal\n                                \n                                \n                                        Questão\n                                \n                                \n                                        Tipo de Usuário\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Código Único\n                                    \n                                \n                                \n                                    \n                                        Código Único:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Disciplina\n                                    \n                                \n                                \n                                    \n                                        Disciplina:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Grupo de Questões\n                                    \n                                \n                                \n                                    \n                                        Grupo de Questões:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Matrícula\n                                    \n                                \n                                \n                                    \n                                        Matrícula:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Nota\n                                    \n                                \n                                \n                                    \n                                        Nota:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Observação\n                                    \n                                \n                                \n                                    \n                                        Observação:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Pessoal\n                                    \n                                \n                                \n                                    \n                                        Pessoal:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Questão\n                                    \n                                \n                                \n                                    \n                                        Questão:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Tipo de Usuário\n                                    \n                                \n                                \n                                    \n                                        Tipo de Usuário:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CsvLine {\n  'Grupo de Questões': string;\n  'Tipo de Usuário': string;\n  Disciplina?: string;\n  Pessoal: string;\n  Questão: string;\n  Matrícula: string;\n  Nota: string;\n  'Código Único': string;\n  Observação?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CsvLineRow.html":{"url":"interfaces/CsvLineRow.html","title":"interface - CsvLineRow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CsvLineRow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exportation/interfaces/csv-line-row.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        anonymous\n                                \n                                \n                                        group_id\n                                \n                                \n                                        group_title\n                                \n                                \n                                        is_class\n                                \n                                \n                                        is_personal\n                                \n                                \n                                            Optional\n                                        observation\n                                \n                                \n                                        question_id\n                                \n                                \n                                        question_statement\n                                \n                                \n                                            Optional\n                                        score\n                                \n                                \n                                            Optional\n                                        subject_title\n                                \n                                \n                                        unique_code\n                                \n                                \n                                        user_enrollment\n                                \n                                \n                                        user_type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anonymous\n                                    \n                                \n                                \n                                    \n                                        anonymous:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group_id\n                                    \n                                \n                                \n                                    \n                                        group_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group_title\n                                    \n                                \n                                \n                                    \n                                        group_title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_class\n                                    \n                                \n                                \n                                    \n                                        is_class:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_personal\n                                    \n                                \n                                \n                                    \n                                        is_personal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        observation\n                                    \n                                \n                                \n                                    \n                                        observation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        question_id\n                                    \n                                \n                                \n                                    \n                                        question_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        question_statement\n                                    \n                                \n                                \n                                    \n                                        question_statement:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                    \n                                \n                                \n                                    \n                                        score:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject_title\n                                    \n                                \n                                \n                                    \n                                        subject_title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unique_code\n                                    \n                                \n                                \n                                    \n                                        unique_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_enrollment\n                                    \n                                \n                                \n                                    \n                                        user_enrollment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_type\n                                    \n                                \n                                \n                                    \n                                        user_type:     \"Professor\" | \"Student\" | \"User\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Professor\" | \"Student\" | \"User\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CsvLineRow {\n  score?: string;\n  group_id: number;\n  group_title: string;\n  is_class: boolean;\n  is_personal: boolean;\n  question_id: number;\n  question_statement: string;\n  user_enrollment: string;\n  user_type: 'Professor' | 'Student' | 'User';\n  anonymous: boolean;\n  subject_title?: string;\n  unique_code: string;\n  observation?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomLogger.html":{"url":"injectables/CustomLogger.html","title":"injectable - CustomLogger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logger/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Logger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger, Injectable, Scope } from '@nestjs/common';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class CustomLogger extends Logger {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exam.html":{"url":"classes/Exam.html","title":"class - Exam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/entities/exam.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        FFEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                agreements\n                            \n                            \n                                allowAnonymous\n                            \n                            \n                                description\n                            \n                            \n                                endedAt\n                            \n                            \n                                groups\n                            \n                            \n                                period\n                            \n                            \n                                periodId\n                            \n                            \n                                startedAt\n                            \n                            \n                                status\n                            \n                            \n                                    Optional\n                                targets\n                            \n                            \n                                title\n                            \n                            \n                                id\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sortItems\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    start\n                                \n                                \n                                    end\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            agreements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ExamAgreement[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/entities/exam.entity.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allowAnonymous\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'bool', default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/entities/exam.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/entities/exam.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'datetime'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/entities/exam.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QuestionGroup[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/entities/exam.entity.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            period\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Period\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/entities/exam.entity.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            periodId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/entities/exam.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'datetime'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/entities/exam.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExamStatus\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'enum', enum: ExamStatus})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/entities/exam.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ExamTarget[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany(undefined)@JoinTable()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/entities/exam.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/entities/exam.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:13\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortItems\n                        \n                        \n                    \n                \n            \n            \n                \nsortItems()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AfterLoad()\n                \n            \n\n            \n                \n                    Defined in src/exam/entities/exam.entity.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        start\n                    \n                \n\n                \n                    \n                        getstart()\n                    \n                \n                            \n                                \n                                    Defined in src/exam/entities/exam.entity.ts:58\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        end\n                    \n                \n\n                \n                    \n                        getend()\n                    \n                \n                            \n                                \n                                    Defined in src/exam/entities/exam.entity.ts:62\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Period } from 'src/auxiliary/entities/period.entity';\nimport { QuestionGroup } from 'src/question-group/entities/question-group.entity';\nimport {\n  AfterLoad,\n  Column,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n} from 'typeorm';\nimport { FFEntity } from '../../core/entities/ff.entity';\nimport { ExamStatus } from '../enums/exam-status.enum';\nimport { ExamAgreement } from './exam-agreement.entity';\nimport { ExamTarget } from './exam-target.entity';\n\n@Entity('exam')\nexport class Exam extends FFEntity {\n  @Column({ type: 'text' })\n  title: string;\n\n  @Column({ type: 'text' })\n  description: string;\n\n  @Column({ type: 'datetime' })\n  startedAt: Date;\n\n  @Column({ type: 'datetime' })\n  endedAt: Date;\n\n  @Column({ type: 'bool', default: false })\n  allowAnonymous: boolean;\n\n  @Column({ type: 'enum', enum: ExamStatus })\n  status: ExamStatus;\n\n  @Column({ type: 'int' })\n  periodId: number;\n\n  @ManyToMany(() => ExamTarget)\n  @JoinTable()\n  targets?: ExamTarget[];\n\n  @ManyToOne(() => Period)\n  period: Period;\n\n  @OneToMany(() => QuestionGroup, (group) => group.exam)\n  groups: QuestionGroup[];\n\n  @OneToMany(() => ExamAgreement, (agreement) => agreement.exam)\n  agreements: ExamAgreement[];\n\n  @AfterLoad()\n  sortItems() {\n    this.groups = this.groups?.sort((a, b) => a.position - b.position) ?? [];\n  }\n\n  get start(): Date {\n    return this.startedAt;\n  }\n\n  get end(): Date {\n    return this.endedAt;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Exam1620478273991.html":{"url":"classes/Exam1620478273991.html","title":"class - Exam1620478273991","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Exam1620478273991\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1620478273991-Exam.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Exam1620478273991'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1620478273991-Exam.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1620478273991-Exam.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1620478273991-Exam.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class Exam1620478273991 implements MigrationInterface {\n    name = 'Exam1620478273991'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `exam` CHANGE `allow_anonymous` `allow_anonymous` tinyint NOT NULL DEFAULT 0\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `exam` CHANGE `allow_anonymous` `allow_anonymous` tinyint NOT NULL\");\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExamAgreement.html":{"url":"classes/ExamAgreement.html","title":"class - ExamAgreement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExamAgreement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/entities/exam-agreement.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        FFEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                anonymous\n                            \n                            \n                                exam\n                            \n                            \n                                examId\n                            \n                            \n                                    Optional\n                                observation\n                            \n                            \n                                status\n                            \n                            \n                                uniqueCode\n                            \n                            \n                                    Optional\n                                uniqueCodeSendedAt\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                            \n                                id\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _generateUniqueCode\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasFinishedExam\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            anonymous\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'boolean', default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/entities/exam-agreement.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Exam\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/entities/exam-agreement.entity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            examId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/entities/exam-agreement.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            observation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/entities/exam-agreement.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExamAgreementStatus\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'enum', enum: ExamAgreementStatus, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/entities/exam-agreement.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uniqueCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({unique: true, length: 36})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/entities/exam-agreement.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            uniqueCodeSendedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'datetime', nullable: true})@Exclude()@ApiHideProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/entities/exam-agreement.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/entities/exam-agreement.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/entities/exam-agreement.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:13\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            _generateUniqueCode\n                        \n                        \n                    \n                \n            \n            \n                \n_generateUniqueCode()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeInsert()\n                \n            \n\n            \n                \n                    Defined in src/exam/entities/exam-agreement.entity.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasFinishedExam\n                    \n                \n\n                \n                    \n                        gethasFinishedExam()\n                    \n                \n                            \n                                \n                                    Defined in src/exam/entities/exam-agreement.entity.ts:46\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FFEntity } from '../../core/entities/ff.entity';\nimport { BeforeInsert, Column, Entity, ManyToOne } from 'typeorm';\nimport { User } from 'src/user/entities/user.entity';\nimport { Exam } from './exam.entity';\nimport { ExamAgreementStatus } from '../enums/exam-agreement-status.enum';\nimport { Exclude, Expose } from 'class-transformer';\nimport { ApiHideProperty } from '@nestjs/swagger';\nimport { padStart } from 'lodash';\n\n@Entity('exam_agreement')\nexport class ExamAgreement extends FFEntity {\n  @Column({ unique: true, length: 36 })\n  uniqueCode: string;\n\n  @Column({ type: 'datetime', nullable: true })\n  @Exclude()\n  @ApiHideProperty()\n  uniqueCodeSendedAt?: Date;\n\n  @Column({ type: 'boolean', default: false })\n  anonymous: boolean;\n\n  @Column({ type: 'text', nullable: true })\n  observation?: string;\n\n  @Column({\n    type: 'enum',\n    enum: ExamAgreementStatus,\n    default: ExamAgreementStatus.STARTED,\n  })\n  status: ExamAgreementStatus;\n\n  @Column({ type: 'int' })\n  userId: number;\n\n  @Column({ type: 'int' })\n  examId: number;\n\n  @ManyToOne(() => User)\n  user: User;\n\n  @ManyToOne(() => Exam)\n  exam: Exam;\n\n  @Expose()\n  get hasFinishedExam(): boolean {\n    return this.status === ExamAgreementStatus.FINISHED;\n  }\n\n  @BeforeInsert()\n  _generateUniqueCode() {\n    this.uniqueCode = padStart(`${Math.round(Math.random() * 6379)}`, 8, '0');\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExamAgreement1622332886234.html":{"url":"classes/ExamAgreement1622332886234.html","title":"class - ExamAgreement1622332886234","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExamAgreement1622332886234\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1622332886234-ExamAgreement.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ExamAgreement1622332886234'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1622332886234-ExamAgreement.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1622332886234-ExamAgreement.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1622332886234-ExamAgreement.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class ExamAgreement1622332886234 implements MigrationInterface {\n  name = 'ExamAgreement1622332886234';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      'ALTER TABLE `exam_agreement` ADD `exam_id` int NOT NULL',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `exam_agreement` CHANGE `uuid` `uuid` varchar(36) NOT NULL',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `exam_agreement` ADD CONSTRAINT `FK_20bfb4e7c97aa20956be86c6beb` FOREIGN KEY (`user_id`) REFERENCES `user`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `exam_agreement` ADD CONSTRAINT `FK_7bdc7fbb138980e5471e2a19366` FOREIGN KEY (`exam_id`) REFERENCES `exam`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION',\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      'ALTER TABLE `exam_agreement` DROP FOREIGN KEY `FK_7bdc7fbb138980e5471e2a19366`',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `exam_agreement` DROP FOREIGN KEY `FK_20bfb4e7c97aa20956be86c6beb`',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `exam_agreement` CHANGE `uuid` `uuid` varchar(255) NOT NULL',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `exam_agreement` DROP COLUMN `exam_id`',\n    );\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExamAgreementAnonymousDefault1622334780336.html":{"url":"classes/ExamAgreementAnonymousDefault1622334780336.html","title":"class - ExamAgreementAnonymousDefault1622334780336","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExamAgreementAnonymousDefault1622334780336\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1622334780336-ExamAgreementAnonymousDefault.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ExamAgreementAnonymousDefault1622334780336'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1622334780336-ExamAgreementAnonymousDefault.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1622334780336-ExamAgreementAnonymousDefault.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1622334780336-ExamAgreementAnonymousDefault.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class ExamAgreementAnonymousDefault1622334780336\n  implements MigrationInterface {\n  name = 'ExamAgreementAnonymousDefault1622334780336';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      'ALTER TABLE `exam_agreement` CHANGE `anonymous` `anonymous` tinyint NOT NULL DEFAULT 0',\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      'ALTER TABLE `exam_agreement` CHANGE `anonymous` `anonymous` tinyint NOT NULL',\n    );\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ExamAgreementController.html":{"url":"controllers/ExamAgreementController.html","title":"controller - ExamAgreementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ExamAgreementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/controllers/exam-agreement.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                exam-agreement\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAgreement\n                            \n                            \n                                    Async\n                                updateAgreemment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createAgreement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAgreement(createAgreementDto: CreateExamAgreementDto, user: ExamAgreementUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/exam/controllers/exam-agreement.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAgreementDto\n                                    \n                                                CreateExamAgreementDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                ExamAgreementUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateAgreemment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAgreemment(user: ExamUser, queryDto: UpdateExamAgreementQueryDto, updateAgreementDto: UpdateExamAgreementDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@ApiOkResponse({type: ExamAgreement})\n                \n            \n\n            \n                \n                    Defined in src/exam/controllers/exam-agreement.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                ExamUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryDto\n                                    \n                                                UpdateExamAgreementQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAgreementDto\n                                    \n                                                UpdateExamAgreementDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, Put, Query, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiOkResponse, ApiTags } from '@nestjs/swagger';\nimport { JwtGuard } from 'src/auth/guards/jwt.guard';\nimport { GetUser } from 'src/user/decoratos/get-user.decorator';\nimport { CreateExamAgreementDto } from '../dtos/create-exam-agreement.dto';\nimport {\n  UpdateExamAgreementDto,\n  UpdateExamAgreementQueryDto,\n} from '../dtos/update-exam-agreement.dto';\nimport { ExamAgreement } from '../entities/exam-agreement.entity';\nimport { ExamAgreementUser } from '../interfaces/exam-agreement-user.interface';\nimport { ExamUser } from '../interfaces/exam-user.interface';\nimport { ExamAgreementService } from '../services/exam-agreement.service';\n\n@Controller('exam-agreement')\n@UseGuards(JwtGuard)\n@ApiBearerAuth()\n@ApiTags('ExamAgreement')\nexport class ExamAgreementController {\n  constructor(private readonly examAgreementService: ExamAgreementService) {}\n\n  @Post()\n  async createAgreement(\n    @Body() createAgreementDto: CreateExamAgreementDto,\n    @GetUser() user: ExamAgreementUser,\n  ): Promise {\n    return this.examAgreementService.createAgreement(createAgreementDto, user);\n  }\n\n  @Put()\n  @ApiOkResponse({ type: ExamAgreement })\n  async updateAgreemment(\n    @GetUser() user: ExamUser,\n    @Query() queryDto: UpdateExamAgreementQueryDto,\n    @Body() updateAgreementDto: UpdateExamAgreementDto,\n  ): Promise {\n    return this.examAgreementService.updateAgreement(\n      { ...queryDto, user },\n      updateAgreementDto,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExamAgreementDto.html":{"url":"classes/ExamAgreementDto.html","title":"class - ExamAgreementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExamAgreementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/dtos/exam-agreement.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                examId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            examId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsPositive()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/dtos/exam-agreement.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiHideProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/dtos/exam-agreement.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiHideProperty } from '@nestjs/swagger';\nimport { IsPositive } from 'class-validator';\n\nexport class ExamAgreementDto {\n  @ApiHideProperty()\n  userId: number;\n\n  @IsPositive()\n  examId: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExamAgreementObservation1622417032753.html":{"url":"classes/ExamAgreementObservation1622417032753.html","title":"class - ExamAgreementObservation1622417032753","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExamAgreementObservation1622417032753\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1622417032753-ExamAgreementObservation.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ExamAgreementObservation1622417032753'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1622417032753-ExamAgreementObservation.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1622417032753-ExamAgreementObservation.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1622417032753-ExamAgreementObservation.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class ExamAgreementObservation1622417032753\n  implements MigrationInterface {\n  name = 'ExamAgreementObservation1622417032753';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      'ALTER TABLE `exam_agreement` ADD `observation` text NULL',\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      'ALTER TABLE `exam_agreement` DROP COLUMN `observation`',\n    );\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExamAgreementRepository.html":{"url":"classes/ExamAgreementRepository.html","title":"class - ExamAgreementRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExamAgreementRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/repositories/exam-agreement.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseRepository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository } from 'typeorm';\nimport { BaseRepository } from 'typeorm-transactional-cls-hooked';\nimport { ExamAgreement } from '../entities/exam-agreement.entity';\n\n@EntityRepository(ExamAgreement)\nexport class ExamAgreementRepository extends BaseRepository {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExamAgreementService.html":{"url":"injectables/ExamAgreementService.html","title":"injectable - ExamAgreementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExamAgreementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/services/exam-agreement.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agreementsByDateInterval\n                            \n                            \n                                    Async\n                                createAgreement\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                finishExam\n                            \n                            \n                                getByUser\n                            \n                            \n                                    Private\n                                    Async\n                                sendAgreementEmail\n                            \n                            \n                                    Async\n                                updateAgreement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: ExamAgreementRepository, examService: ExamService, sendEmailService: SendEmailService, logger: CustomLogger)\n                    \n                \n                        \n                            \n                                Defined in src/exam/services/exam-agreement.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ExamAgreementRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        examService\n                                                  \n                                                        \n                                                                        ExamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sendEmailService\n                                                  \n                                                        \n                                                                        SendEmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        CustomLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            agreementsByDateInterval\n                        \n                        \n                    \n                \n            \n            \n                \nagreementsByDateInterval(start: Date, end: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/exam/services/exam-agreement.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createAgreement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAgreement(createAgreementDto: CreateExamAgreementDto, user: ExamAgreementUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/exam/services/exam-agreement.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAgreementDto\n                                    \n                                                CreateExamAgreementDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                ExamAgreementUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(findDto: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/exam/services/exam-agreement.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    findDto\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            finishExam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    finishExam(agreement: ExamAgreement)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/exam/services/exam-agreement.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    agreement\n                                    \n                                                ExamAgreement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetByUser(user: ExamUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/exam/services/exam-agreement.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                ExamUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            sendAgreementEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendAgreementEmail(email: string, agreement: ExamAgreement)\n                \n            \n\n\n            \n                \n                    Defined in src/exam/services/exam-agreement.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    agreement\n                                    \n                                                ExamAgreement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateAgreement\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAgreement(queryDto: UpdateExamAgreementQueryDto, updateAgreementDto: UpdateExamAgreementDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/exam/services/exam-agreement.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryDto\n                                    \n                                                UpdateExamAgreementQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAgreementDto\n                                    \n                                                UpdateExamAgreementDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  forwardRef,\n  Inject,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { SendEmailService } from 'src/infra/services/send-email.service';\nimport { CustomLogger } from 'src/logger/logger.service';\n\nimport { Between } from 'typeorm';\nimport { Transactional } from 'typeorm-transactional-cls-hooked';\nimport { CreateExamAgreementDto } from '../dtos/create-exam-agreement.dto';\nimport {\n  UpdateExamAgreementDto,\n  UpdateExamAgreementQueryDto,\n} from '../dtos/update-exam-agreement.dto';\nimport { ExamAgreement } from '../entities/exam-agreement.entity';\nimport { ExamAgreementStatus } from '../enums/exam-agreement-status.enum';\nimport { ExamAgreementUser } from '../interfaces/exam-agreement-user.interface';\nimport { ExamUser } from '../interfaces/exam-user.interface';\nimport { ExamAgreementRepository } from '../repositories/exam-agreement.repository';\nimport { ExamService } from './exam.service';\n\n@Injectable()\nexport class ExamAgreementService {\n  constructor(\n    @InjectRepository(ExamAgreementRepository)\n    private readonly repository: ExamAgreementRepository,\n    @Inject(forwardRef(() => ExamService))\n    private readonly examService: ExamService,\n    private readonly sendEmailService: SendEmailService,\n    private readonly logger: CustomLogger,\n  ) {}\n\n  @Transactional()\n  async createAgreement(\n    createAgreementDto: CreateExamAgreementDto,\n    user: ExamAgreementUser,\n  ): Promise {\n    const exam = await this.examService.findOne(createAgreementDto.examId);\n    const alreadyAgreed = await this.repository.findOne({\n      where: { exam, user },\n    });\n\n    if (alreadyAgreed) {\n      throw new ConflictException('already agreed');\n    }\n\n    const agreement = this.repository.create({\n      ...createAgreementDto,\n      userId: user.id,\n    });\n\n    if (user.email) {\n      await this.sendAgreementEmail(user.email, agreement);\n    }\n\n    return this.repository.save(agreement);\n  }\n\n  private async sendAgreementEmail(\n    email: string,\n    agreement: ExamAgreement,\n  ): Promise {\n    try {\n      await this.sendEmailService.sendAgreementEmail({\n        user: { email },\n        agreement,\n      });\n      agreement.uniqueCodeSendedAt = new Date();\n    } catch (e) {\n      this.logger.error(e);\n    }\n  }\n\n  @Transactional()\n  async updateAgreement(\n    queryDto: UpdateExamAgreementQueryDto,\n    updateAgreementDto: UpdateExamAgreementDto,\n  ): Promise {\n    const agreement = await this.repository.findOne({\n      where: {\n        examId: queryDto.examId,\n        userId: queryDto.user.id,\n      },\n    });\n\n    if (!agreement) {\n      throw new NotFoundException(queryDto);\n    }\n\n    if (agreement.hasFinishedExam) {\n      delete updateAgreementDto.anonymous;\n    }\n\n    return this.repository.save(\n      this.repository.merge(agreement, updateAgreementDto),\n    );\n  }\n\n  agreementsByDateInterval(start: Date, end: Date): Promise {\n    return this.repository.find({ where: { createdAt: Between(start, end) } });\n  }\n\n  @Transactional()\n  getByUser(user: ExamUser): Promise {\n    return this.repository.find({\n      where: { userId: user.id },\n      relations: ['exam'],\n    });\n  }\n\n  async findOne(findDto: {\n    userId: number;\n    examId: number;\n  }): Promise {\n    const agreement = await this.repository.findOne({\n      where: findDto,\n      relations: ['exam'],\n    });\n\n    if (!agreement) {\n      throw new NotFoundException(findDto);\n    }\n\n    return agreement;\n  }\n\n  @Transactional()\n  async finishExam(agreement: ExamAgreement): Promise {\n    agreement.status = ExamAgreementStatus.FINISHED;\n\n    return this.repository.save(agreement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExamAgreementUniqueCode1625001091462.html":{"url":"classes/ExamAgreementUniqueCode1625001091462.html","title":"class - ExamAgreementUniqueCode1625001091462","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExamAgreementUniqueCode1625001091462\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1625001091463-ExamAgreementUniqueCode.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'GracefulUniqueCodeOnExamAgreement1625001091462'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1625001091463-ExamAgreementUniqueCode.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1625001091463-ExamAgreementUniqueCode.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1625001091463-ExamAgreementUniqueCode.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class ExamAgreementUniqueCode1625001091462\n  implements MigrationInterface\n{\n  name = 'GracefulUniqueCodeOnExamAgreement1625001091462';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      'DROP INDEX `IDX_2b38bb607ef3e86920e9bd0163` ON `exam_agreement`',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `exam_agreement` CHANGE `uuid` `unique_code` varchar(36) NOT NULL',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `exam_agreement` ADD UNIQUE INDEX `IDX_040052dd4f7f2aa588ac15c22e` (`unique_code`)',\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      'ALTER TABLE `exam_agreement` DROP INDEX `IDX_040052dd4f7f2aa588ac15c22e`',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `exam_agreement` CHANGE `unique_code` `uuid` varchar(36) NOT NULL',\n    );\n    await queryRunner.query(\n      'CREATE UNIQUE INDEX `IDX_2b38bb607ef3e86920e9bd0163` ON `exam_agreement` (`uuid`)',\n    );\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html":{"url":"classes/ExamAgreementUniqueCodeSendedAt1625002603968.html","title":"class - ExamAgreementUniqueCodeSendedAt1625002603968","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExamAgreementUniqueCodeSendedAt1625002603968\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1625002603969-ExamAgreementUniqueCodeSendedAt.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ExamAgreementUniqueCodeSendedAt1625002603968'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1625002603969-ExamAgreementUniqueCodeSendedAt.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1625002603969-ExamAgreementUniqueCodeSendedAt.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1625002603969-ExamAgreementUniqueCodeSendedAt.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class ExamAgreementUniqueCodeSendedAt1625002603968\n  implements MigrationInterface\n{\n  name = 'ExamAgreementUniqueCodeSendedAt1625002603968';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      'ALTER TABLE `exam_agreement` ADD `unique_code_sended_at` datetime NULL',\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      'ALTER TABLE `exam_agreement` DROP COLUMN `unique_code_sended_at`',\n    );\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExamAgreementUser.html":{"url":"interfaces/ExamAgreementUser.html","title":"interface - ExamAgreementUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExamAgreementUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/interfaces/exam-agreement-user.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasGrade\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasGrade\n                        \n                        \n                    \n                \n            \n            \n                \nhasGrade()\n                \n            \n\n\n            \n                \n                    Defined in src/exam/interfaces/exam-agreement-user.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ExamAgreementUser {\n  id: number;\n  hasGrade(): boolean;\n  email?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ExamController.html":{"url":"controllers/ExamController.html","title":"controller - ExamController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ExamController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/controllers/exam.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                exam\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findPersonal\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createExamDto: CreateExamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOkResponse({type: Exam})\n                \n            \n\n            \n                \n                    Defined in src/exam/controllers/exam.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createExamDto\n                                    \n                                                CreateExamDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/exam/controllers/exam.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/exam/controllers/exam.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findPersonal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findPersonal(user: ExamUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')@ApiOkResponse({type: ExamPersonalResult})\n                \n            \n\n            \n                \n                    Defined in src/exam/controllers/exam.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                ExamUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/exam/controllers/exam.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateExamDto: UpdateExamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/exam/controllers/exam.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateExamDto\n                                    \n                                                UpdateExamDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Delete,\n  UseGuards,\n  ParseIntPipe,\n  Put,\n} from '@nestjs/common';\nimport { ExamService } from '../services/exam.service';\nimport { CreateExamDto } from '../dtos/create-exam.dto';\nimport { UpdateExamDto } from '../dtos/update-exam.dto';\nimport { JwtGuard } from 'src/auth/guards/jwt.guard';\nimport { ApiBearerAuth, ApiOkResponse, ApiTags } from '@nestjs/swagger';\nimport { Exam } from '../entities/exam.entity';\nimport { GetUser } from 'src/user/decoratos/get-user.decorator';\nimport { ExamUser } from '../interfaces/exam-user.interface';\nimport { ExamPersonalResult } from '../models/exam-personal-result.model';\n\n@Controller('exam')\n@ApiTags('Exam')\n@UseGuards(JwtGuard)\n@ApiBearerAuth()\nexport class ExamController {\n  constructor(private readonly examService: ExamService) {}\n\n  @Post()\n  @ApiOkResponse({ type: Exam })\n  async create(@Body() createExamDto: CreateExamDto): Promise {\n    return this.examService.create(createExamDto);\n  }\n\n  @Get()\n  @ApiOkResponse({ type: [Exam] })\n  async findAll(): Promise {\n    return this.examService.findAll();\n  }\n\n  @Get('me')\n  @ApiOkResponse({ type: ExamPersonalResult })\n  async findPersonal(@GetUser() user: ExamUser): Promise {\n    return this.examService.findPersonal(user);\n  }\n\n  @Get(':id')\n  async findOne(@Param('id', ParseIntPipe) id: number): Promise {\n    return this.examService.findOne(id);\n  }\n\n  @Put(':id')\n  async update(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() updateExamDto: UpdateExamDto,\n  ): Promise {\n    return this.examService.update(id, updateExamDto);\n  }\n\n  @Delete(':id')\n  async remove(@Param('id', ParseIntPipe) id: number): Promise {\n    return this.examService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExamModule.html":{"url":"modules/ExamModule.html","title":"module - ExamModule","body":"\n                   \n\n\n\n\n    Modules\n    ExamModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExamModule\n\n\n\ncluster_ExamModule_imports\n\n\n\ncluster_ExamModule_providers\n\n\n\ncluster_ExamModule_exports\n\n\n\n\nAuxiliaryModule\n\nAuxiliaryModule\n\n\n\nExamModule\n\nExamModule\n\nExamModule -->\n\nAuxiliaryModule->ExamModule\n\n\n\n\n\nInfraModule\n\nInfraModule\n\nExamModule -->\n\nInfraModule->ExamModule\n\n\n\n\n\nExamAgreementService \n\nExamAgreementService \n\nExamAgreementService  -->\n\nExamModule->ExamAgreementService \n\n\n\n\n\nExamService \n\nExamService \n\nExamService  -->\n\nExamModule->ExamService \n\n\n\n\n\nExamAgreementService\n\nExamAgreementService\n\nExamModule -->\n\nExamAgreementService->ExamModule\n\n\n\n\n\nExamService\n\nExamService\n\nExamModule -->\n\nExamService->ExamModule\n\n\n\n\n\nExamTargetNodeFactory\n\nExamTargetNodeFactory\n\nExamModule -->\n\nExamTargetNodeFactory->ExamModule\n\n\n\n\n\nExamTargetService\n\nExamTargetService\n\nExamModule -->\n\nExamTargetService->ExamModule\n\n\n\n\n\nExamTargetTree\n\nExamTargetTree\n\nExamModule -->\n\nExamTargetTree->ExamModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/exam/exam.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExamAgreementService\n                        \n                        \n                            ExamService\n                        \n                        \n                            ExamTargetNodeFactory\n                        \n                        \n                            ExamTargetService\n                        \n                        \n                            ExamTargetTree\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ExamController\n                        \n                        \n                            ExamTargetController\n                        \n                        \n                            ExamAgreementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuxiliaryModule\n                        \n                        \n                            InfraModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExamAgreementService\n                        \n                        \n                            ExamService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { ExamService } from './services/exam.service';\nimport { ExamController } from './controllers/exam.controller';\nimport { ExamRepository } from './repositories/exam.repository';\nimport { ExamTargetRepository } from './repositories/exam-target.repository';\nimport { ExamTargetService } from './services/exam-target.service';\nimport { ExamTargetController } from './controllers/exam-target.controller';\nimport { ExamAgreementService } from './services/exam-agreement.service';\nimport { ExamAgreementRepository } from './repositories/exam-agreement.repository';\nimport { ExamAgreementController } from './controllers/exam-agreement.controller';\nimport { ExamTargetTree } from './providers/exam-target-tree.provider';\nimport { ExamTargetNodeFactory } from './factories/exam-target-node.factory';\nimport { AuxiliaryModule } from 'src/auxiliary/auxiliary.module';\nimport { InfraModule } from 'src/infra/infra.module';\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      ExamRepository,\n      ExamTargetRepository,\n      ExamAgreementRepository,\n    ]),\n    AuxiliaryModule,\n    InfraModule,\n  ],\n  controllers: [ExamController, ExamTargetController, ExamAgreementController],\n  providers: [\n    ExamService,\n    ExamTargetService,\n    ExamAgreementService,\n    ExamTargetTree,\n    ExamTargetNodeFactory,\n  ],\n  exports: [ExamService, ExamAgreementService],\n})\nexport class ExamModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExamPersonalResult.html":{"url":"classes/ExamPersonalResult.html","title":"class - ExamPersonalResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExamPersonalResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/models/exam-personal-result.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alreadyAgreed\n                            \n                            \n                                answered\n                            \n                            \n                                canAgree\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alreadyAgreed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Exam[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/exam/models/exam-personal-result.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answered\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Exam[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/exam/models/exam-personal-result.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canAgree\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Exam[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/exam/models/exam-personal-result.model.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exam } from '../entities/exam.entity';\n\nexport class ExamPersonalResult {\n  alreadyAgreed: Exam[];\n  canAgree: Exam[];\n  answered: Exam[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExamRepository.html":{"url":"classes/ExamRepository.html","title":"class - ExamRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExamRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/repositories/exam.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseRepository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByTargets\n                            \n                            \n                                    Async\n                                findByUser\n                            \n                            \n                                    Private\n                                loadRelations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByTargets(undefined: FindExamByUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/exam/repositories/exam.repository.ts:25\n                \n            \n\n\n            \n                \n                    SELECT DISTINCT exam.*\nFROM exam\nLEFT JOIN exam_targets_exam_target et\n  ON exam.id = et.exam_id\nINNER JOIN exam_target target\n  on et.exam_target_id = target.id AND target.type IN :targets\nWHERE\n  (exam.id NOT IN :ids)\n  (exam.status = \"ACTIVE\") AND\n  (exam.created_at BETWEEN :start AND :end) AND\n  (exam.deleted_at IS NULL)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                FindExamByUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUser(user: ExamUser)\n                \n            \n\n\n            \n                \n                    Defined in src/exam/repositories/exam.repository.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                ExamUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadRelations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadRelations(query: SelectQueryBuilder)\n                \n            \n\n\n            \n                \n                    Defined in src/exam/repositories/exam.repository.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                SelectQueryBuilder\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SelectQueryBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, SelectQueryBuilder } from 'typeorm';\nimport { BaseRepository } from 'typeorm-transactional-cls-hooked';\nimport { FindExamByUserDto } from '../dtos/find-exam-by-user.dto';\nimport { ExamTarget } from '../entities/exam-target.entity';\nimport { Exam } from '../entities/exam.entity';\nimport { ExamAgreementStatus } from '../enums/exam-agreement-status.enum';\nimport { ExamStatus } from '../enums/exam-status.enum';\nimport { ExamUser } from '../interfaces/exam-user.interface';\n\n@EntityRepository(Exam)\nexport class ExamRepository extends BaseRepository {\n  /**\n   * SELECT DISTINCT exam.*\n   * FROM exam\n   * LEFT JOIN exam_targets_exam_target et\n   *  ON exam.id = et.exam_id\n   * INNER JOIN exam_target target\n   *  on et.exam_target_id = target.id AND target.type IN :targets\n   * WHERE\n   *  (exam.id NOT IN :ids)\n   *  (exam.status = \"ACTIVE\") AND\n   *  (exam.created_at BETWEEN :start AND :end) AND\n   *  (exam.deleted_at IS NULL)\n   */\n  async findByTargets({\n    ignoreExams,\n    targets,\n  }: FindExamByUserDto): Promise {\n    const query = this.createQueryBuilder('exam');\n\n    query\n      .distinct(true)\n      .leftJoin('exam_targets_exam_target', 'et', 'exam.id = et.exam_id')\n      .leftJoin(\n        ExamTarget,\n        'target',\n        'et.exam_target_id = target.id AND target.type IN (:...targets)',\n        { targets },\n      )\n      .where('exam.status = :status', { status: ExamStatus.ACTIVE })\n      .andWhere(':date BETWEEN exam.startedAt AND exam.endedAt', {\n        date: new Date(),\n      });\n\n    if (ignoreExams.length) {\n      query.andWhere('exam.id NOT IN (:...ids)', {\n        ids: ignoreExams.map((el) => el.id),\n      });\n    }\n    // .andWhere('exam.created_at BETWEEN :start AND :end', {start})\n\n    return this.loadRelations(query).getMany();\n  }\n\n  async findByUser(user: ExamUser): Promise {\n    const query = this.createQueryBuilder('exam');\n\n    query\n      .innerJoinAndSelect('exam.agreements', 'agreement')\n      .where('agreement.userId = :userId', { userId: user.id })\n      .andWhere(\n        '(agreement.status = :answered OR (agreement.status = :defaultAgreementStatus AND :date BETWEEN exam.startedAt AND exam.endedAt))',\n        {\n          answered: ExamAgreementStatus.FINISHED,\n          defaultAgreementStatus: ExamAgreementStatus.STARTED,\n          date: new Date(),\n        },\n      );\n\n    return this.loadRelations(query).getMany();\n  }\n\n  private loadRelations(\n    query: SelectQueryBuilder,\n  ): SelectQueryBuilder {\n    return query\n      .innerJoinAndSelect('exam.period', 'exam_period')\n      .leftJoinAndSelect('exam.targets', 'exam_target');\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExamService.html":{"url":"injectables/ExamService.html","title":"injectable - ExamService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/services/exam.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                relations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findPersonal\n                            \n                            \n                                    Private\n                                    Async\n                                newExam\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: ExamRepository, targetService: ExamTargetService, periodService: PeriodService)\n                    \n                \n                        \n                            \n                                Defined in src/exam/services/exam.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ExamRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        targetService\n                                                  \n                                                        \n                                                                        ExamTargetService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        periodService\n                                                  \n                                                        \n                                                                        PeriodService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createExamDto: CreateExamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/exam/services/exam.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createExamDto\n                                    \n                                                CreateExamDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/exam/services/exam.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/exam/services/exam.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findPersonal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findPersonal(user: ExamUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/exam/services/exam.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                ExamUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            newExam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newExam(dto: CreateExamDto | UpdateExamDto)\n                \n            \n\n\n            \n                \n                    Defined in src/exam/services/exam.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                            CreateExamDto | UpdateExamDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/exam/services/exam.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateExamDto: UpdateExamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/exam/services/exam.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateExamDto\n                                    \n                                                UpdateExamDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            relations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'groups',\n    'period',\n    'agreements',\n    'targets',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/exam/services/exam.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { groupBy, first } from 'lodash';\nimport { PeriodService } from 'src/auxiliary/services/period.service';\nimport { SoftDeleteResult } from 'src/core/interfaces/soft-delete-result.interface';\nimport { Transactional } from 'typeorm-transactional-cls-hooked';\nimport { CreateExamDto } from '../dtos/create-exam.dto';\nimport { UpdateExamDto } from '../dtos/update-exam.dto';\nimport { Exam } from '../entities/exam.entity';\nimport { ExamAgreementStatus } from '../enums/exam-agreement-status.enum';\nimport { EXAM_NOT_FOUND } from '../exam.constants';\nimport { ExamUser } from '../interfaces/exam-user.interface';\nimport { ExamPersonalResult } from '../models/exam-personal-result.model';\nimport { ExamRepository } from '../repositories/exam.repository';\nimport { ExamTargetService } from './exam-target.service';\n\n@Injectable()\nexport class ExamService {\n  private static readonly relations = [\n    'groups',\n    'period',\n    'agreements',\n    'targets',\n  ];\n\n  constructor(\n    @InjectRepository(ExamRepository)\n    private readonly repository: ExamRepository,\n    private readonly targetService: ExamTargetService,\n    private readonly periodService: PeriodService,\n  ) {}\n\n  private async newExam(dto: CreateExamDto | UpdateExamDto): Promise {\n    const { targets, ...entityLike } = dto;\n    const exam = this.repository.create(entityLike);\n\n    if (targets) {\n      const targetMap = await this.targetService.getTargetMap();\n      exam.targets = targets.map((target) => targetMap.get(target)!);\n    }\n\n    return exam;\n  }\n\n  @Transactional()\n  async create(createExamDto: CreateExamDto): Promise {\n    const exam = await this.newExam(createExamDto);\n    exam.period = await this.periodService.getPeriodByInterval(exam);\n\n    return this.repository.save(exam);\n  }\n\n  findAll(): Promise {\n    return this.repository.find({ relations: ExamService.relations });\n  }\n\n  async findOne(id: number): Promise {\n    const exam = await this.repository.findOne(id, {\n      relations: ExamService.relations,\n    });\n    if (!exam) {\n      throw new NotFoundException({ id }, EXAM_NOT_FOUND);\n    }\n\n    return exam;\n  }\n\n  @Transactional()\n  async findPersonal(user: ExamUser): Promise {\n    const agreed = await this.repository.findByUser(user);\n\n    const targets = this.targetService.getTargetsForUser(user.type);\n\n    const canAgree = await this.repository.findByTargets({\n      ignoreExams: agreed,\n      targets,\n    });\n\n    const {\n      [ExamAgreementStatus.STARTED]: alreadyAgreed = [],\n      [ExamAgreementStatus.FINISHED]: answered = [],\n    } = groupBy(agreed, (exam) => first(exam.agreements)?.status);\n\n    return { alreadyAgreed, answered, canAgree };\n  }\n\n  @Transactional()\n  async update(id: number, updateExamDto: UpdateExamDto) {\n    let exam = await this.findOne(id);\n\n    exam = this.repository.merge(exam, await this.newExam(updateExamDto));\n\n    return this.repository.save(exam);\n  }\n\n  @Transactional()\n  async remove(id: number): Promise {\n    const result: SoftDeleteResult = await this.repository.softDelete(id);\n    if (!result.raw.affectedRows) {\n      throw new NotFoundException({ id }, EXAM_NOT_FOUND);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExamTarget.html":{"url":"classes/ExamTarget.html","title":"class - ExamTarget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExamTarget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/entities/exam-target.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        FFEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                            \n                                id\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExamTargetType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'enum', enum: ExamTargetType, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/entities/exam-target.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { FFEntity } from 'src/core/entities/ff.entity';\nimport { Column, Entity } from 'typeorm';\nimport { ExamTargetType } from '../enums/exam-target-type.enum';\n\n@Entity('exam_target')\nexport class ExamTarget extends FFEntity {\n  @Column({ type: 'enum', enum: ExamTargetType, unique: true })\n  type: ExamTargetType;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExamTarget1622326106015.html":{"url":"classes/ExamTarget1622326106015.html","title":"class - ExamTarget1622326106015","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExamTarget1622326106015\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1622326106015-ExamTarget.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ExamTarget1622326106015'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1622326106015-ExamTarget.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1622326106015-ExamTarget.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1622326106015-ExamTarget.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nconst targets = [\"Student\", \"Professor\"];\n\nexport class ExamTarget1622326106015 implements MigrationInterface {\n  name = 'ExamTarget1622326106015';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      'DROP INDEX `IX_question_group_target` ON `question_group`',\n    );\n    await queryRunner.query(\n      \"CREATE TABLE `exam_target` (`created_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), `updated_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), `deleted_at` datetime(6) NULL, `id` int NOT NULL AUTO_INCREMENT, `type` enum ('Student', 'Professor') NOT NULL, UNIQUE INDEX `IDX_988f784cc581e38b7ed4943006` (`type`), PRIMARY KEY (`id`)) ENGINE=InnoDB\",\n    );\n    await Promise.all(targets.map(target => queryRunner.query('INSERT INTO `exam_target` (`type`) VALUES (?)', [target])));\n    await queryRunner.query(\n      'CREATE TABLE `exam_targets_exam_target` (`exam_id` int NOT NULL, `exam_target_id` int NOT NULL, INDEX `IDX_4a22969058fa5105ad6bee583f` (`exam_id`), INDEX `IDX_af1604ea5493f65a6c8d70d98e` (`exam_target_id`), PRIMARY KEY (`exam_id`, `exam_target_id`)) ENGINE=InnoDB',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `question_group` DROP COLUMN `target`',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `exam_targets_exam_target` ADD CONSTRAINT `FK_4a22969058fa5105ad6bee583f1` FOREIGN KEY (`exam_id`) REFERENCES `exam`(`id`) ON DELETE CASCADE ON UPDATE NO ACTION',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `exam_targets_exam_target` ADD CONSTRAINT `FK_af1604ea5493f65a6c8d70d98ed` FOREIGN KEY (`exam_target_id`) REFERENCES `exam_target`(`id`) ON DELETE CASCADE ON UPDATE NO ACTION',\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      'ALTER TABLE `exam_targets_exam_target` DROP FOREIGN KEY `FK_af1604ea5493f65a6c8d70d98ed`',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `exam_targets_exam_target` DROP FOREIGN KEY `FK_4a22969058fa5105ad6bee583f1`',\n    );\n    await queryRunner.query(\n      \"ALTER TABLE `question_group` ADD `target` enum ('Student', 'Professor') NULL\",\n    );\n    await queryRunner.query(\n      'DROP INDEX `IDX_af1604ea5493f65a6c8d70d98e` ON `exam_targets_exam_target`',\n    );\n    await queryRunner.query(\n      'DROP INDEX `IDX_4a22969058fa5105ad6bee583f` ON `exam_targets_exam_target`',\n    );\n    await queryRunner.query('DROP TABLE `exam_targets_exam_target`');\n    await queryRunner.query(\n      'DROP INDEX `IDX_988f784cc581e38b7ed4943006` ON `exam_target`',\n    );\n    await queryRunner.query('DROP TABLE `exam_target`');\n    await queryRunner.query(\n      'CREATE INDEX `IX_question_group_target` ON `question_group` (`target`)',\n    );\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExamTargetAdd1622378888497.html":{"url":"classes/ExamTargetAdd1622378888497.html","title":"class - ExamTargetAdd1622378888497","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExamTargetAdd1622378888497\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1622378888497-ExamTargetAdd.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ExamTargetAdd1622378888497'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1622378888497-ExamTargetAdd.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1622378888497-ExamTargetAdd.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1622378888497-ExamTargetAdd.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nconst addTargets = ['Course', 'Grade'];\n\nexport class ExamTargetAdd1622378888497 implements MigrationInterface {\n  name = 'ExamTargetAdd1622378888497';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      \"ALTER TABLE `exam_target` CHANGE `type` `type` enum ('Student', 'Professor', 'Course', 'Grade') NOT NULL\",\n    );\n    await Promise.all(\n      addTargets.map((target) =>\n        queryRunner.query('INSERT INTO exam_target (`type`) VALUES (?)', [\n          target,\n        ]),\n      ),\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `DELETE FROM exam_target WHERE type IN (${addTargets\n        .map((_) => '?')\n        .join(', ')})`,\n      [...addTargets],\n    );\n    await queryRunner.query(\n      \"ALTER TABLE `exam_target` CHANGE `type` `type` enum ('Student', 'Professor') NOT NULL\",\n    );\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ExamTargetController.html":{"url":"controllers/ExamTargetController.html","title":"controller - ExamTargetController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ExamTargetController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/controllers/exam-target.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                exam-target\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getForUser\n                            \n                            \n                                    Async\n                                getTargets\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetForUser(user: ExamUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user')@ApiExcludeEndpoint()\n                \n            \n\n            \n                \n                    Defined in src/exam/controllers/exam-target.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                ExamUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargets()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: undefined, schema: undefined})\n                \n            \n\n            \n                \n                    Defined in src/exam/controllers/exam-target.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from '@nestjs/common';\nimport { ApiExcludeEndpoint, ApiOkResponse, ApiTags } from '@nestjs/swagger';\nimport { JwtGuard } from 'src/auth/guards/jwt.guard';\nimport { GetUser } from 'src/user/decoratos/get-user.decorator';\nimport { ExamTargetType } from '../enums/exam-target-type.enum';\nimport { ExamUser } from '../interfaces/exam-user.interface';\nimport { ExamTargetService } from '../services/exam-target.service';\n\n@Controller('exam-target')\n@ApiTags('ExamTarget')\n@UseGuards(JwtGuard)\nexport class ExamTargetController {\n  constructor(private readonly targetService: ExamTargetService) {}\n\n  @Get()\n  @ApiOkResponse({\n    type: [String],\n    schema: { example: Object.values(ExamTargetType) },\n  })\n  async getTargets(): Promise {\n    return this.targetService.getTargets();\n  }\n\n  @Get('user')\n  @ApiExcludeEndpoint()\n  getForUser(@GetUser() user: ExamUser) {\n    return this.targetService.getTargetsForUser(user.type);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExamTargetManagerDto.html":{"url":"interfaces/ExamTargetManagerDto.html","title":"interface - ExamTargetManagerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExamTargetManagerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/dtos/exam-target-manager.dto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        targets\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targets\n                                    \n                                \n                                \n                                    \n                                        targets:         ExamTargetType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExamTargetType[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ExamTargetType } from '../enums/exam-target-type.enum';\n\nexport interface ExamTargetManagerDto {\n  targets?: ExamTargetType[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExamTargetNode.html":{"url":"classes/ExamTargetNode.html","title":"class - ExamTargetNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExamTargetNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/models/exam-target-node.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childs\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dfs\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isLeaf\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            childs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ExamTargetNode[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/exam/models/exam-target-node.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExamTargetType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/exam/models/exam-target-node.model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dfs\n                        \n                        \n                    \n                \n            \n            \n                \ndfs(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/exam/models/exam-target-node.model.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Path\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isLeaf\n                    \n                \n\n                \n                    \n                        getisLeaf()\n                    \n                \n                            \n                                \n                                    Defined in src/exam/models/exam-target-node.model.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ExamTargetType } from '../enums/exam-target-type.enum';\n\ntype Path = ExamTargetNode[] | undefined;\n\nexport class ExamTargetNode {\n  childs: ExamTargetNode[];\n  type: ExamTargetType;\n\n  get isLeaf(): boolean {\n    return !this.childs.length;\n  }\n\n  dfs(type: string): Path {\n    if (this.type === type) {\n      return [this];\n    }\n    if (this.isLeaf) return;\n    for (const node of this.childs) {\n      const partialPath = node.dfs(type);\n      if (partialPath) {\n        return [this, ...partialPath];\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExamTargetNodeFactory.html":{"url":"injectables/ExamTargetNodeFactory.html","title":"injectable - ExamTargetNodeFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExamTargetNodeFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/factories/exam-target-node.factory.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generate\n                        \n                        \n                    \n                \n            \n            \n                \ngenerate(schema: ExamTargetNodeSchema)\n                \n            \n\n\n            \n                \n                    Defined in src/exam/factories/exam-target-node.factory.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schema\n                                    \n                                                ExamTargetNodeSchema\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ExamTargetNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ExamTargetType } from '../enums/exam-target-type.enum';\nimport { ExamTargetNode } from '../models/exam-target-node.model';\n\ninterface ExamTargetNodeSchema {\n  type: ExamTargetType;\n  childs?: ExamTargetNodeSchema[];\n}\n\n@Injectable()\nexport class ExamTargetNodeFactory {\n  generate(schema: ExamTargetNodeSchema): ExamTargetNode {\n    const node = new ExamTargetNode();\n    node.type = schema.type;\n\n    node.childs = schema.childs?.map((node) => this.generate(node)) ?? [];\n\n    return node;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExamTargetNodeSchema.html":{"url":"interfaces/ExamTargetNodeSchema.html","title":"interface - ExamTargetNodeSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExamTargetNodeSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/factories/exam-target-node.factory.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        childs\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        childs\n                                    \n                                \n                                \n                                    \n                                        childs:         ExamTargetNodeSchema[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExamTargetNodeSchema[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         ExamTargetType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExamTargetType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ExamTargetType } from '../enums/exam-target-type.enum';\nimport { ExamTargetNode } from '../models/exam-target-node.model';\n\ninterface ExamTargetNodeSchema {\n  type: ExamTargetType;\n  childs?: ExamTargetNodeSchema[];\n}\n\n@Injectable()\nexport class ExamTargetNodeFactory {\n  generate(schema: ExamTargetNodeSchema): ExamTargetNode {\n    const node = new ExamTargetNode();\n    node.type = schema.type;\n\n    node.childs = schema.childs?.map((node) => this.generate(node)) ?? [];\n\n    return node;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExamTargetRepository.html":{"url":"classes/ExamTargetRepository.html","title":"class - ExamTargetRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExamTargetRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/repositories/exam-target.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseRepository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository } from 'typeorm';\nimport { BaseRepository } from 'typeorm-transactional-cls-hooked';\nimport { ExamTarget } from '../entities/exam-target.entity';\n\n@EntityRepository(ExamTarget)\nexport class ExamTargetRepository extends BaseRepository {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExamTargetService.html":{"url":"injectables/ExamTargetService.html","title":"injectable - ExamTargetService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExamTargetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/services/exam-target.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _targetMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTargetMap\n                            \n                            \n                                    Async\n                                getTargets\n                            \n                            \n                                getTargetsForUser\n                            \n                            \n                                    Private\n                                    Async\n                                loadTargetMap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: ExamTargetRepository, tree: ExamTargetTree)\n                    \n                \n                        \n                            \n                                Defined in src/exam/services/exam-target.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ExamTargetRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tree\n                                                  \n                                                        \n                                                                        ExamTargetTree\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTargetMap\n                        \n                        \n                    \n                \n            \n            \n                \ngetTargetMap()\n                \n            \n\n\n            \n                \n                    Defined in src/exam/services/exam-target.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargets()\n                \n            \n\n\n            \n                \n                    Defined in src/exam/services/exam-target.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTargetsForUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetTargetsForUser(target: string)\n                \n            \n\n\n            \n                \n                    Defined in src/exam/services/exam-target.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ExamTargetType[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            loadTargetMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadTargetMap()\n                \n            \n\n\n            \n                \n                    Defined in src/exam/services/exam-target.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _targetMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ReadonlyMap\n\n                        \n                    \n                        \n                            \n                                    Defined in src/exam/services/exam-target.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport _ = require('lodash');\n\nimport { ExamTarget } from '../entities/exam-target.entity';\nimport { ExamTargetType } from '../enums/exam-target-type.enum';\nimport { ExamTargetTree } from '../providers/exam-target-tree.provider';\nimport { ExamTargetRepository } from '../repositories/exam-target.repository';\n\n@Injectable()\nexport class ExamTargetService {\n  private _targetMap?: ReadonlyMap;\n\n  constructor(\n    @InjectRepository(ExamTargetRepository)\n    private readonly repository: ExamTargetRepository,\n    private readonly tree: ExamTargetTree,\n  ) {\n    this.loadTargetMap();\n  }\n\n  private async loadTargetMap(): Promise {\n    const targets = await this.repository.find();\n\n    this._targetMap = new Map(\n      targets.map((target) => [target.type, target]),\n    );\n  }\n\n  getTargetMap(): Promise> {\n    return new Promise((resolve, reject) => {\n      if (!this._targetMap) {\n        return this.loadTargetMap()\n          .then(() => resolve(_.cloneDeep(this._targetMap!)))\n          .catch((e) => reject(e));\n      }\n\n      resolve(_.cloneDeep(this._targetMap));\n    });\n  }\n\n  async getTargets(): Promise {\n    const map = await this.getTargetMap();\n\n    return Array.from(map.values()).map((target) => target.type);\n  }\n\n  getTargetsForUser(target: string): ExamTargetType[] {\n    return this.tree.queryTarget(target).map((p) => p.type);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExamTargetTree.html":{"url":"injectables/ExamTargetTree.html","title":"injectable - ExamTargetTree","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExamTargetTree\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/providers/exam-target-tree.provider.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                queryTarget\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(targetNodeFactory: ExamTargetNodeFactory)\n                    \n                \n                        \n                            \n                                Defined in src/exam/providers/exam-target-tree.provider.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        targetNodeFactory\n                                                  \n                                                        \n                                                                        ExamTargetNodeFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryTarget\n                        \n                        \n                    \n                \n            \n            \n                \nqueryTarget(target: string)\n                \n            \n\n\n            \n                \n                    Defined in src/exam/providers/exam-target-tree.provider.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ExamTargetNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            root\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExamTargetNode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/exam/providers/exam-target-tree.provider.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { ExamTargetType } from '../enums/exam-target-type.enum';\nimport { ExamTargetNodeFactory } from '../factories/exam-target-node.factory';\nimport { ExamTargetNode } from '../models/exam-target-node.model';\n\n@Injectable()\nexport class ExamTargetTree {\n  private readonly root: ExamTargetNode;\n\n  constructor(targetNodeFactory: ExamTargetNodeFactory) {\n    this.root = targetNodeFactory.generate({\n      type: ExamTargetType.COURSE,\n      childs: [\n        {\n          type: ExamTargetType.GRADE,\n          childs: [\n            { type: ExamTargetType.PROFESSOR },\n            { type: ExamTargetType.STUDENT },\n          ],\n        },\n      ],\n    });\n  }\n\n  queryTarget(target: string): ExamTargetNode[] {\n    const path = this.root.dfs(target);\n\n    if (!path) {\n      throw new NotFoundException(this.root, target);\n    }\n\n    return path;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExamTitle1621036457247.html":{"url":"classes/ExamTitle1621036457247.html","title":"class - ExamTitle1621036457247","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExamTitle1621036457247\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1621036457247-ExamTitle.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ExamTitle1621036457247'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1621036457247-ExamTitle.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1621036457247-ExamTitle.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1621036457247-ExamTitle.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class ExamTitle1621036457247 implements MigrationInterface {\n    name = 'ExamTitle1621036457247'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `exam` CHANGE `text` `title` text NOT NULL\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `exam` CHANGE `title` `text` text NOT NULL\");\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExamUser.html":{"url":"interfaces/ExamUser.html","title":"interface - ExamUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExamUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/interfaces/exam-user.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         UserType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserType } from '../../user/enum/user-type.enum';\n\nexport interface ExamUser {\n  id: number;\n  type: UserType;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ExportationController.html":{"url":"controllers/ExportationController.html","title":"controller - ExportationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ExportationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exportation/exportation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                export\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportToCsv\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            exportToCsv\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exportToCsv(examId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/csv/:examId')\n                \n            \n\n            \n                \n                    Defined in src/exportation/exportation.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    examId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  ParseIntPipe,\n  Post,\n  Param,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { JwtGuard } from 'src/auth/guards/jwt.guard';\nimport { ExportationService } from './exportation.service';\n\n@Controller('export')\n@ApiTags('Exportation')\n@UseGuards(JwtGuard)\n@ApiBearerAuth()\nexport class ExportationController {\n  constructor(private readonly service: ExportationService) {}\n  @Post('/csv/:examId')\n  async exportToCsv(@Param('examId', ParseIntPipe) examId: number) {\n    return this.service.exportToCsv(examId);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExportationModule.html":{"url":"modules/ExportationModule.html","title":"module - ExportationModule","body":"\n                   \n\n\n\n\n    Modules\n    ExportationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExportationModule\n\n\n\ncluster_ExportationModule_providers\n\n\n\ncluster_ExportationModule_imports\n\n\n\ncluster_ExportationModule_exports\n\n\n\n\nInfraModule\n\nInfraModule\n\n\n\nExportationModule\n\nExportationModule\n\nExportationModule -->\n\nInfraModule->ExportationModule\n\n\n\n\n\nExportationService \n\nExportationService \n\nExportationService  -->\n\nExportationModule->ExportationService \n\n\n\n\n\nExportationRepository\n\nExportationRepository\n\nExportationModule -->\n\nExportationRepository->ExportationModule\n\n\n\n\n\nExportationService\n\nExportationService\n\nExportationModule -->\n\nExportationService->ExportationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/exportation/exportation.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExportationRepository\n                        \n                        \n                            ExportationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ExportationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InfraModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExportationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { InfraModule } from 'src/infra/infra.module';\nimport { ExportationController } from './exportation.controller';\nimport { ExportationRepository } from './exportation.repository';\nimport { ExportationService } from './exportation.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature(), InfraModule],\n  providers: [ExportationService, ExportationRepository],\n  exports: [ExportationService],\n  controllers: [ExportationController],\n})\nexport class ExportationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExportationRepository.html":{"url":"injectables/ExportationRepository.html","title":"injectable - ExportationRepository","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExportationRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exportation/exportation.repository.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCsvLines\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/exportation/exportation.repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCsvLines\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCsvLines(examId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/exportation/exportation.repository.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    examId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CsvLine } from './interfaces/csv-line.interface';\nimport { Connection } from 'typeorm';\nimport { InjectConnection } from '@nestjs/typeorm';\nimport { Injectable } from '@nestjs/common';\nimport { CsvLineRow } from './interfaces/csv-line-row.interface';\nimport { userTypeMap } from './maps/user-type.map';\n\n@Injectable()\nexport class ExportationRepository {\n  constructor(@InjectConnection() private readonly connection: Connection) {}\n\n  async getCsvLines(examId: number): Promise {\n    const queryRunner = this.connection.createQueryRunner();\n\n    const csvLines: CsvLineRow[] = await queryRunner.query(\n      `\n      SELECT DISTINCT\n          ea.exam_id AS 'exam_id',\n          ea.id AS 'exam_agreement_id',\n          ea.anonymous AS 'anonymous',\n          ea.observation AS 'observation',\n          ea.uuid AS 'unique_code',\n          qg.title AS 'group_title',\n          qg.class AS 'is_class',\n          qg.personal AS 'is_personal',\n          qg.id AS 'group_id',\n          q.id AS 'question_id',\n          q.statement AS 'question_statement',\n          a.id AS 'answer_id',\n          a.score AS 'score',\n          s.title AS 'subject_title',\n          u.enrollment AS 'user_enrollment',\n          u.type AS 'user_type'\n      FROM\n          exam_agreement ea\n      INNER JOIN \\`user\\` u ON\n          u.id = ea.user_id\n      INNER JOIN answer a ON\n          a.exam_agreement_id = ea.id\n      LEFT JOIN grade g ON\n          g.id = a.grade_id\n      LEFT JOIN subject s ON\n          s.id = g.subject_id\n      INNER JOIN question q ON\n          q.id = a.question_id\n      INNER JOIN question_group qg ON\n          qg.id = q.group_id\n      WHERE\n          ea.exam_id = ? AND ea.deleted_at IS NULL\n      ORDER BY\n          ea.id ASC,\n          qg.id ASC,\n          q.id ASC\n      `,\n      [examId],\n    );\n\n    return csvLines.map((csvLine) => {\n      return {\n        'Grupo de Questões': csvLine.group_title,\n        Disciplina: csvLine.subject_title,\n        Pessoal: csvLine.is_personal ? 'Sim' : 'Não',\n        Questão: csvLine.question_statement,\n        Matrícula: csvLine.anonymous ? 'Anônimo' : csvLine.user_enrollment,\n        'Tipo de Usuário': userTypeMap.get(csvLine.user_type)!,\n        Nota: csvLine.score ?? 'Não se aplica',\n        Observação: csvLine.observation,\n        'Código Único': csvLine.unique_code,\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExportationService.html":{"url":"injectables/ExportationService.html","title":"injectable - ExportationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ExportationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exportation/exportation.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                createCsv\n                            \n                            \n                                    Async\n                                exportToCsv\n                            \n                            \n                                    Private\n                                getFileName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: ExportationRepository, uploadService: UploaderService)\n                    \n                \n                        \n                            \n                                Defined in src/exportation/exportation.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ExportationRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uploadService\n                                                  \n                                                        \n                                                                        UploaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            createCsv\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCsv(csvLines: CsvLine[])\n                \n            \n\n\n            \n                \n                    Defined in src/exportation/exportation.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    csvLines\n                                    \n                                                CsvLine[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            exportToCsv\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exportToCsv(examId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/exportation/exportation.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    examId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFileName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFileName(examId: number, exportationType: ExportationType)\n                \n            \n\n\n            \n                \n                    Defined in src/exportation/exportation.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    examId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    exportationType\n                                    \n                                                ExportationType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport ObjectsToCsv from 'objects-to-csv';\n\nimport { ExportationRepository } from './exportation.repository';\n\nimport { ExportationType } from './enums/exportation-type.enum';\nimport { CsvLine } from './interfaces/csv-line.interface';\nimport { UploaderService } from 'src/infra/services/uploader.service';\n\n@Injectable()\nexport class ExportationService {\n  constructor(\n    private readonly repository: ExportationRepository,\n    private readonly uploadService: UploaderService,\n  ) {}\n\n  private getFileName(\n    examId: number,\n    exportationType: ExportationType,\n  ): string {\n    const fileDate = new Date()\n      .toLocaleDateString('pt-BR')\n      .replace(/\\//gu, '-');\n    const filePrefix = process.env.EXPORTED_FILE_PREFIX || 'exportation';\n    return `${exportationType}_${examId}_${filePrefix}_${fileDate}.csv`;\n  }\n\n  private async createCsv(csvLines: CsvLine[]): Promise {\n    const builder = new ObjectsToCsv(csvLines);\n\n    return Buffer.from(await builder.toString());\n  }\n\n  async exportToCsv(examId: number): Promise {\n    const csvLines: CsvLine[] = await this.repository.getCsvLines(examId);\n\n    if (!csvLines.length) {\n      throw new NotFoundException('Nothing to export');\n    }\n\n    const fileName = this.getFileName(examId, ExportationType.AVALIACAO);\n    const data = await this.createCsv(csvLines);\n\n    return this.uploadService.upload(\n      {\n        buffer: data,\n        originalname: fileName,\n        mimetype: 'text/csv',\n        size: data.length,\n        encoding: 'utf8',\n        noRandomName: true,\n      },\n      'exports',\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FFEntity.html":{"url":"classes/FFEntity.html","title":"class - FFEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FFEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/entities/ff.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TimestampEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/core/entities/ff.entity.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PrimaryGeneratedColumn } from 'typeorm';\nimport { TimestampEntity } from './timestamp.entity';\n\nexport class FFEntity extends TimestampEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileSendDto.html":{"url":"interfaces/FileSendDto.html","title":"interface - FileSendDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileSendDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/dtos/file-send.dto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        buffer\n                                \n                                \n                                        encoding\n                                \n                                \n                                        mimetype\n                                \n                                \n                                            Optional\n                                        noRandomName\n                                \n                                \n                                        originalname\n                                \n                                \n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buffer\n                                    \n                                \n                                \n                                    \n                                        buffer:     Buffer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Buffer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        encoding\n                                    \n                                \n                                \n                                    \n                                        encoding:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimetype\n                                    \n                                \n                                \n                                    \n                                        mimetype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noRandomName\n                                    \n                                \n                                \n                                    \n                                        noRandomName:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalname\n                                    \n                                \n                                \n                                    \n                                        originalname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FileSendDto {\n  originalname: string;\n  encoding: string;\n  mimetype: string;\n  buffer: Buffer;\n  size: number;\n  noRandomName?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindExamByUserDto.html":{"url":"interfaces/FindExamByUserDto.html","title":"interface - FindExamByUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FindExamByUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/dtos/find-exam-by-user.dto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ignoreExams\n                                \n                                \n                                        targets\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreExams\n                                    \n                                \n                                \n                                    \n                                        ignoreExams:         Exam[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Exam[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targets\n                                    \n                                \n                                \n                                    \n                                        targets:         ExamTargetType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExamTargetType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exam } from '../entities/exam.entity';\nimport { ExamTargetType } from '../enums/exam-target-type.enum';\nexport interface FindExamByUserDto {\n  ignoreExams: Exam[];\n  targets: ExamTargetType[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindPersonalDto.html":{"url":"classes/FindPersonalDto.html","title":"class - FindPersonalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindPersonalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-group/dtos/find-personal.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                examId\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            examId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/dtos/find-personal.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserToFind | User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/dtos/find-personal.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserToFind } from 'src/auxiliary/types/user-to-find.type';\nimport { User } from 'src/user/entities/user.entity';\n\nexport class FindPersonalDto {\n  examId: number;\n  user: UserToFind | User;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseAdmin.html":{"url":"injectables/FirebaseAdmin.html","title":"injectable - FirebaseAdmin","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseAdmin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/firebase/firebase-admin/providers/firebase-admin.provider.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                app\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                appCheck\n                            \n                            \n                                auth\n                            \n                            \n                                database\n                            \n                            \n                                delete\n                            \n                            \n                                firestore\n                            \n                            \n                                installations\n                            \n                            \n                                instanceId\n                            \n                            \n                                machineLearning\n                            \n                            \n                                messaging\n                            \n                            \n                                projectManagement\n                            \n                            \n                                remoteConfig\n                            \n                            \n                                securityRules\n                            \n                            \n                                storage\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: FirebaseModuleOptions)\n                    \n                \n                        \n                            \n                                Defined in src/firebase/firebase-admin/providers/firebase-admin.provider.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        FirebaseModuleOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            appCheck\n                        \n                        \n                    \n                \n            \n            \n                \nappCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/firebase-admin/providers/firebase-admin.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     firebase.appCheck.AppCheck\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            auth\n                        \n                        \n                    \n                \n            \n            \n                \nauth()\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/firebase-admin/providers/firebase-admin.provider.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         firebase.auth.Auth\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            database\n                        \n                        \n                    \n                \n            \n            \n                \ndatabase(url?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/firebase-admin/providers/firebase-admin.provider.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     firebase.database.Database\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/firebase-admin/providers/firebase-admin.provider.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            firestore\n                        \n                        \n                    \n                \n            \n            \n                \nfirestore()\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/firebase-admin/providers/firebase-admin.provider.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     firebase.firestore.Firestore\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            installations\n                        \n                        \n                    \n                \n            \n            \n                \ninstallations()\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/firebase-admin/providers/firebase-admin.provider.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     firebase.installations.Installations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            instanceId\n                        \n                        \n                    \n                \n            \n            \n                \ninstanceId()\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/firebase-admin/providers/firebase-admin.provider.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     firebase.instanceId.InstanceId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            machineLearning\n                        \n                        \n                    \n                \n            \n            \n                \nmachineLearning()\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/firebase-admin/providers/firebase-admin.provider.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     firebase.machineLearning.MachineLearning\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            messaging\n                        \n                        \n                    \n                \n            \n            \n                \nmessaging()\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/firebase-admin/providers/firebase-admin.provider.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     firebase.messaging.Messaging\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            projectManagement\n                        \n                        \n                    \n                \n            \n            \n                \nprojectManagement()\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/firebase-admin/providers/firebase-admin.provider.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     firebase.projectManagement.ProjectManagement\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remoteConfig\n                        \n                        \n                    \n                \n            \n            \n                \nremoteConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/firebase-admin/providers/firebase-admin.provider.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     firebase.remoteConfig.RemoteConfig\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            securityRules\n                        \n                        \n                    \n                \n            \n            \n                \nsecurityRules()\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/firebase-admin/providers/firebase-admin.provider.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     firebase.securityRules.SecurityRules\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            storage\n                        \n                        \n                    \n                \n            \n            \n                \nstorage()\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/firebase-admin/providers/firebase-admin.provider.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     firebase.storage.Storage\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            app\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     firebase.app.App\n\n                        \n                    \n                        \n                            \n                                    Defined in src/firebase/firebase-admin/providers/firebase-admin.provider.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/firebase/firebase-admin/providers/firebase-admin.provider.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in src/firebase/firebase-admin/providers/firebase-admin.provider.ts:28\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport firebase from 'firebase-admin';\nimport { FIREBASE_OPTIONS } from '../firebase-admin.constants';\nimport { FirebaseModuleOptions } from '../../interfaces';\n\n@Injectable()\nexport class FirebaseAdmin implements firebase.app.App {\n  private readonly app: firebase.app.App;\n\n  constructor(@Inject(FIREBASE_OPTIONS) options: FirebaseModuleOptions) {\n    this.app = firebase.initializeApp({\n      databaseURL: options.databaseURL,\n      storageBucket: options.storageBucket,\n      credential: firebase.credential.cert(options.cert),\n    });\n  }\n  appCheck(): firebase.appCheck.AppCheck {\n    throw new Error('Method not implemented.');\n  }\n  installations(): firebase.installations.Installations {\n    throw new Error('Method not implemented.');\n  }\n\n  get name(): string {\n    return this.app.name;\n  }\n\n  get options(): firebase.AppOptions {\n    return this.app.options;\n  }\n\n  auth(): firebase.auth.Auth {\n    return this.app.auth();\n  }\n\n  database(url?: string): firebase.database.Database {\n    return this.app.database(url);\n  }\n\n  firestore(): firebase.firestore.Firestore {\n    return this.app.firestore();\n  }\n\n  instanceId(): firebase.instanceId.InstanceId {\n    return this.app.instanceId();\n  }\n\n  machineLearning(): firebase.machineLearning.MachineLearning {\n    return this.app.machineLearning();\n  }\n\n  messaging(): firebase.messaging.Messaging {\n    return this.app.messaging();\n  }\n\n  projectManagement(): firebase.projectManagement.ProjectManagement {\n    return this.app.projectManagement();\n  }\n\n  remoteConfig(): firebase.remoteConfig.RemoteConfig {\n    return this.app.remoteConfig();\n  }\n\n  securityRules(): firebase.securityRules.SecurityRules {\n    return this.app.securityRules();\n  }\n\n  storage(): firebase.storage.Storage {\n    return this.app.storage();\n  }\n\n  delete(): Promise {\n    return this.app.delete();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FirebaseAdminModule.html":{"url":"modules/FirebaseAdminModule.html","title":"module - FirebaseAdminModule","body":"\n                   \n\n\n\n\n    Modules\n    FirebaseAdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FirebaseAdminModule\n\n\n\ncluster_FirebaseAdminModule_exports\n\n\n\ncluster_FirebaseAdminModule_providers\n\n\n\n\nFirebaseAdmin \n\nFirebaseAdmin \n\n\n\nFirebaseAdminModule\n\nFirebaseAdminModule\n\nFirebaseAdmin  -->\n\nFirebaseAdminModule->FirebaseAdmin \n\n\n\n\n\nFirebaseAdmin\n\nFirebaseAdmin\n\nFirebaseAdminModule -->\n\nFirebaseAdmin->FirebaseAdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/firebase/firebase-admin/firebase-admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FirebaseAdmin\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FirebaseAdmin\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: FirebaseModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/firebase-admin/firebase-admin.module.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                FirebaseModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRootAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootAsync(options: FirebaseAsyncModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/firebase-admin/firebase-admin.module.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                FirebaseAsyncModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule, Provider } from '@nestjs/common';\nimport {\n  FirebaseAsyncModuleOptions,\n  FirebaseModuleOptions,\n} from '../interfaces';\nimport { FirebaseAdmin } from './providers/firebase-admin.provider';\nimport { FIREBASE_OPTIONS } from './firebase-admin.constants';\n\n@Module({ providers: [FirebaseAdmin], exports: [FirebaseAdmin] })\nexport class FirebaseAdminModule {\n  private static readonly exports = [FirebaseAdmin];\n  private static readonly providers: Provider[] = [FirebaseAdmin];\n\n  static forRoot(options: FirebaseModuleOptions): DynamicModule {\n    return {\n      module: FirebaseAdminModule,\n      providers: [\n        {\n          provide: FIREBASE_OPTIONS,\n          useValue: options,\n        },\n        ...this.providers,\n      ],\n    };\n  }\n\n  static forRootAsync(options: FirebaseAsyncModuleOptions): DynamicModule {\n    return {\n      module: FirebaseAdminModule,\n      imports: options.imports ?? [],\n      providers: [\n        {\n          provide: FIREBASE_OPTIONS,\n          useFactory: options.useFactory,\n          inject: options.inject ?? [],\n        },\n        ...this.providers,\n      ],\n      exports: this.exports,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseAsyncModuleOptions.html":{"url":"interfaces/FirebaseAsyncModuleOptions.html","title":"interface - FirebaseAsyncModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirebaseAsyncModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/firebase/interfaces/firebase-async-module-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import firebase from 'firebase-admin';\nimport { ModuleMetadata } from '@nestjs/common';\n\nexport interface FirebaseModuleOptions {\n  cert: firebase.ServiceAccount;\n  databaseURL?: string;\n  storageBucket?: string;\n}\n\nexport interface FirebaseAsyncModuleOptions\n  extends Pick {\n  useFactory: (\n    ...args: any[]\n  ) => FirebaseModuleOptions | Promise;\n  inject?: any[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseAuthDecodedToken.html":{"url":"interfaces/FirebaseAuthDecodedToken.html","title":"interface - FirebaseAuthDecodedToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirebaseAuthDecodedToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/firebase/interfaces/firebase-auth-decoded-token.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        emailVerified\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emailVerified\n                                    \n                                \n                                \n                                    \n                                        emailVerified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FirebaseAuthDecodedToken {\n  emailVerified?: boolean;\n  email?: string;\n  uid: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseAuthService.html":{"url":"injectables/FirebaseAuthService.html","title":"injectable - FirebaseAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/firebase/services/firebase-auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                firebaseAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getUser\n                            \n                            \n                                updateUser\n                            \n                            \n                                    Async\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseAdmin: FirebaseAdmin)\n                    \n                \n                        \n                            \n                                Defined in src/firebase/services/firebase-auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseAdmin\n                                                  \n                                                        \n                                                                        FirebaseAdmin\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \ncreateUser(createDto: firebase.auth.CreateRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/services/firebase-auth.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createDto\n                                    \n                                            firebase.auth.CreateRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUser(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/services/firebase-auth.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetUser(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/services/firebase-auth.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUser(uid: string, updateDto: firebase.auth.UpdateRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/services/firebase-auth.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                            firebase.auth.UpdateRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/services/firebase-auth.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            firebaseAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         firebase.auth.Auth\n\n                        \n                    \n                        \n                            \n                                    Defined in src/firebase/services/firebase-auth.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport firebase from 'firebase-admin';\n\nimport { FirebaseAuthDecodedToken } from '../interfaces/firebase-auth-decoded-token.interface';\nimport { FirebaseAdmin } from '../firebase-admin';\n\n@Injectable()\nexport class FirebaseAuthService {\n  private readonly firebaseAuth: firebase.auth.Auth;\n  constructor(firebaseAdmin: FirebaseAdmin) {\n    this.firebaseAuth = firebaseAdmin.auth();\n  }\n\n  async verifyToken(token: string): Promise {\n    try {\n      const decoded = await this.firebaseAuth.verifyIdToken(token);\n      return {\n        uid: decoded.uid,\n        email: decoded.email,\n        emailVerified: decoded.email_verified,\n      };\n    } catch (err) {\n      return null;\n    }\n  }\n\n  getUser(uid: string): Promise {\n    return this.firebaseAuth.getUser(uid);\n  }\n\n  createUser(\n    createDto: firebase.auth.CreateRequest,\n  ): Promise {\n    return this.firebaseAuth.createUser(createDto);\n  }\n\n  updateUser(\n    uid: string,\n    updateDto: firebase.auth.UpdateRequest,\n  ): Promise {\n    return this.firebaseAuth.updateUser(uid, updateDto);\n  }\n\n  deleteUser(uid: string): Promise {\n    return this.firebaseAuth.deleteUser(uid);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseCloudMessagingService.html":{"url":"injectables/FirebaseCloudMessagingService.html","title":"injectable - FirebaseCloudMessagingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseCloudMessagingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/firebase/services/firebase-cloud-messaging.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                fcm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendToDevice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseAdmin: FirebaseAdmin)\n                    \n                \n                        \n                            \n                                Defined in src/firebase/services/firebase-cloud-messaging.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseAdmin\n                                                  \n                                                        \n                                                                        FirebaseAdmin\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendToDevice\n                        \n                        \n                    \n                \n            \n            \n                \nsendToDevice(token: string, message: firebase.messaging.MessagingPayload, options?: firebase.messaging.MessagingOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/services/firebase-cloud-messaging.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                            firebase.messaging.MessagingPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            firebase.messaging.MessagingOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            fcm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     firebase.messaging.Messaging\n\n                        \n                    \n                        \n                            \n                                    Defined in src/firebase/services/firebase-cloud-messaging.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport firebase from 'firebase-admin';\nimport { FirebaseAdmin } from '../firebase-admin';\n\n@Injectable()\nexport class FirebaseCloudMessagingService {\n  private readonly fcm: firebase.messaging.Messaging;\n  constructor(firebaseAdmin: FirebaseAdmin) {\n    this.fcm = firebaseAdmin.messaging();\n  }\n\n  sendToDevice(\n    token: string,\n    message: firebase.messaging.MessagingPayload,\n    options?: firebase.messaging.MessagingOptions,\n  ): Promise {\n    return this.fcm.sendToDevice(token, message, options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseFirestoreService.html":{"url":"injectables/FirebaseFirestoreService.html","title":"injectable - FirebaseFirestoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseFirestoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/firebase/services/firebase-firestore.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                firestore\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCollection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseAdmin: FirebaseAdmin)\n                    \n                \n                        \n                            \n                                Defined in src/firebase/services/firebase-firestore.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseAdmin\n                                                  \n                                                        \n                                                                        FirebaseAdmin\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCollection\n                        \n                        \n                    \n                \n            \n            \n                \ngetCollection(collection: string)\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/services/firebase-firestore.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collection\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FirebaseFirestoreCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            firestore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     firebase.firestore.Firestore\n\n                        \n                    \n                        \n                            \n                                    Defined in src/firebase/services/firebase-firestore.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport firebase from 'firebase-admin';\nimport { FirebaseAdmin } from '../firebase-admin';\nimport { FirebaseFirestoreCollection } from '../types/firebase-firestore-collection.type';\n\n@Injectable()\nexport class FirebaseFirestoreService {\n  private readonly firestore: firebase.firestore.Firestore;\n\n  constructor(firebaseAdmin: FirebaseAdmin) {\n    this.firestore = firebaseAdmin.firestore();\n  }\n\n  getCollection(collection: string): FirebaseFirestoreCollection {\n    return this.firestore.collection(collection);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FirebaseModule.html":{"url":"modules/FirebaseModule.html","title":"module - FirebaseModule","body":"\n                   \n\n\n\n\n    Modules\n    FirebaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FirebaseModule\n\n\n\ncluster_FirebaseModule_exports\n\n\n\ncluster_FirebaseModule_providers\n\n\n\n\nFirebaseAuthService \n\nFirebaseAuthService \n\n\n\nFirebaseCloudMessagingService \n\nFirebaseCloudMessagingService \n\n\n\nFirebaseModule\n\nFirebaseModule\n\nFirebaseAuthService  -->\n\nFirebaseModule->FirebaseAuthService \n\n\n\nFirebaseCloudMessagingService  -->\n\nFirebaseModule->FirebaseCloudMessagingService \n\n\n\n\n\nFirebaseAuthService\n\nFirebaseAuthService\n\nFirebaseModule -->\n\nFirebaseAuthService->FirebaseModule\n\n\n\n\n\nFirebaseCloudMessagingService\n\nFirebaseCloudMessagingService\n\nFirebaseModule -->\n\nFirebaseCloudMessagingService->FirebaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/firebase/firebase.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FirebaseAuthService\n                        \n                        \n                            FirebaseCloudMessagingService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FirebaseAuthService\n                        \n                        \n                            FirebaseCloudMessagingService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: FirebaseModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/firebase.module.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                FirebaseModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRootAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootAsync(options: FirebaseAsyncModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/firebase.module.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                FirebaseAsyncModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module, Provider } from '@nestjs/common';\n\nimport { FirebaseAuthService } from './services/firebase-auth.service';\nimport { FirebaseCloudMessagingService } from './services/firebase-cloud-messaging.service';\nimport {\n  FirebaseAsyncModuleOptions,\n  FirebaseModuleOptions,\n} from './interfaces/firebase-async-module-options.interface';\nimport { FirebaseAdminModule } from './firebase-admin/firebase-admin.module';\nimport { FirebaseStorageService, FirebaseFirestoreService } from './services';\n\n@Module({\n  providers: [FirebaseAuthService, FirebaseCloudMessagingService],\n  exports: [FirebaseAuthService, FirebaseCloudMessagingService],\n})\nexport class FirebaseModule {\n  private static readonly providers: Provider[] = [\n    FirebaseAuthService,\n    FirebaseCloudMessagingService,\n    FirebaseStorageService,\n    FirebaseFirestoreService,\n  ];\n\n  private static readonly exports: Provider[] = [\n    FirebaseAuthService,\n    FirebaseCloudMessagingService,\n    FirebaseStorageService,\n    FirebaseFirestoreService,\n  ];\n\n  static forRoot(options: FirebaseModuleOptions): DynamicModule {\n    return {\n      module: FirebaseModule,\n      global: true,\n      imports: [FirebaseAdminModule.forRoot(options)],\n      providers: [...this.providers],\n      exports: this.exports,\n    };\n  }\n\n  static forRootAsync(options: FirebaseAsyncModuleOptions): DynamicModule {\n    return {\n      module: FirebaseModule,\n      global: true,\n      imports: [FirebaseAdminModule.forRootAsync(options)],\n      providers: [...this.providers],\n      exports: this.exports,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseModuleOptions.html":{"url":"interfaces/FirebaseModuleOptions.html","title":"interface - FirebaseModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirebaseModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/firebase/interfaces/firebase-async-module-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cert\n                                \n                                \n                                            Optional\n                                        databaseURL\n                                \n                                \n                                            Optional\n                                        storageBucket\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cert\n                                    \n                                \n                                \n                                    \n                                        cert:     firebase.ServiceAccount\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     firebase.ServiceAccount\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        databaseURL\n                                    \n                                \n                                \n                                    \n                                        databaseURL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageBucket\n                                    \n                                \n                                \n                                    \n                                        storageBucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import firebase from 'firebase-admin';\nimport { ModuleMetadata } from '@nestjs/common';\n\nexport interface FirebaseModuleOptions {\n  cert: firebase.ServiceAccount;\n  databaseURL?: string;\n  storageBucket?: string;\n}\n\nexport interface FirebaseAsyncModuleOptions\n  extends Pick {\n  useFactory: (\n    ...args: any[]\n  ) => FirebaseModuleOptions | Promise;\n  inject?: any[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseStorageService.html":{"url":"injectables/FirebaseStorageService.html","title":"injectable - FirebaseStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/firebase/services/firebase-storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseAdmin: FirebaseAdmin)\n                    \n                \n                        \n                            \n                                Defined in src/firebase/services/firebase-storage.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseAdmin\n                                                  \n                                                        \n                                                                        FirebaseAdmin\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(path: string, undefined: FirebaseStorageUploadDto)\n                \n            \n\n\n            \n                \n                    Defined in src/firebase/services/firebase-storage.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                FirebaseStorageUploadDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            storage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     firebase.storage.Storage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/firebase/services/firebase-storage.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import firebase from 'firebase-admin';\nimport { Injectable } from '@nestjs/common';\n\nimport { FirebaseAdmin } from '../firebase-admin';\nimport { FirebaseStorageUploadDto } from '../dtos/firebase-storage-upload.dto';\n\n@Injectable()\nexport class FirebaseStorageService {\n  private readonly storage: firebase.storage.Storage;\n\n  constructor(firebaseAdmin: FirebaseAdmin) {\n    this.storage = firebaseAdmin.storage();\n  }\n\n  async upload(\n    path: string,\n    { data, contentType, publicFile, bucket }: FirebaseStorageUploadDto,\n  ): Promise {\n    const file = this.storage.bucket(bucket).file(path);\n    await file.save(data, {\n      gzip: true,\n      contentType,\n      public: publicFile,\n      metadata: {\n        cacheControl: 'public, max-age=31536000',\n      },\n    });\n    return file.publicUrl();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseStorageUploadDto.html":{"url":"interfaces/FirebaseStorageUploadDto.html","title":"interface - FirebaseStorageUploadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirebaseStorageUploadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/firebase/dtos/firebase-storage-upload.dto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bucket\n                                \n                                \n                                        contentType\n                                \n                                \n                                        data\n                                \n                                \n                                        publicFile\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucket\n                                    \n                                \n                                \n                                    \n                                        bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contentType\n                                    \n                                \n                                \n                                    \n                                        contentType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     Buffer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Buffer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publicFile\n                                    \n                                \n                                \n                                    \n                                        publicFile:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FirebaseStorageUploadDto {\n  data: Buffer;\n  contentType: string;\n  publicFile: boolean;\n  bucket?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseUploader.html":{"url":"injectables/FirebaseUploader.html","title":"injectable - FirebaseUploader","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseUploader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/services/firebase-uploader.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getName\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: FirebaseStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/infra/services/firebase-uploader.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        FirebaseStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getName(fileDto: FileSendDto, path: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/services/firebase-uploader.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileDto\n                                    \n                                                FileSendDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(fileDto: FileSendDto, path: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/services/firebase-uploader.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fileDto\n                                    \n                                                FileSendDto\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { randomBytes } from 'crypto';\nimport { FirebaseStorageService } from 'src/firebase';\nimport { FileSendDto } from '../dtos/file-send.dto';\nimport { UploaderService } from './uploader.service';\n\n@Injectable()\nexport class FirebaseUploader implements UploaderService {\n  constructor(private readonly storageService: FirebaseStorageService) {}\n\n  private getName(fileDto: FileSendDto, path: string): string {\n    if (fileDto.noRandomName) {\n      return `${path}/${fileDto.originalname}`;\n    }\n\n    return `${path}/${randomBytes(32).toString('hex')}`;\n  }\n\n  async upload(fileDto: FileSendDto, path = ''): Promise {\n    return this.storageService.upload(this.getName(fileDto, path).replace(/^\\//u, ''), {\n      data: fileDto.buffer,\n      contentType: fileDto.mimetype,\n      publicFile: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html":{"url":"classes/GracefulUniqueCodeOnExamAgreement1625001565001.html","title":"class - GracefulUniqueCodeOnExamAgreement1625001565001","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GracefulUniqueCodeOnExamAgreement1625001565001\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1625001565002-GracefulUniqueCodeOnExamAgreement.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1625001565002-GracefulUniqueCodeOnExamAgreement.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1625001565002-GracefulUniqueCodeOnExamAgreement.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class GracefulUniqueCodeOnExamAgreement1625001565001\n  implements MigrationInterface\n{\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      'UPDATE `exam_agreement` SET `unique_code` = LPAD(CONVERT(ROUND(RAND() * 6379), CHAR), 8, \"0\")',\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      'UPDATE `exam_agreement` SET `unique_code` = UUID()',\n    );\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Grade.html":{"url":"classes/Grade.html","title":"class - Grade","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Grade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auxiliary/entities/grade.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        FFEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answers\n                            \n                            \n                                period\n                            \n                            \n                                periodId\n                            \n                            \n                                professors\n                            \n                            \n                                students\n                            \n                            \n                                subject\n                            \n                            \n                                subjectId\n                            \n                            \n                                id\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AnswerGrade[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auxiliary/entities/grade.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            period\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Period\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auxiliary/entities/grade.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            periodId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auxiliary/entities/grade.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            professors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Professor[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany(undefined)@JoinTable({name: 'professor_grade'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auxiliary/entities/grade.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            students\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Student[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany(undefined)@JoinTable({name: 'student_grade'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auxiliary/entities/grade.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auxiliary/entities/grade.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subjectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auxiliary/entities/grade.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AnswerGrade } from 'src/answer/entities/answer-grade.entity';\nimport {\n  Column,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n} from 'typeorm';\n\nimport { FFEntity } from '../../core/entities/ff.entity';\nimport { Period } from './period.entity';\nimport { Professor } from './professor.entity';\nimport { Student } from './student.entity';\nimport { Subject } from './subject.entity';\n\n@Entity('grade')\nexport class Grade extends FFEntity {\n  @Column({ type: 'int' })\n  subjectId: number;\n\n  @Column({ type: 'int' })\n  periodId: number;\n\n  @ManyToOne(() => Subject)\n  subject: Subject;\n\n  @ManyToOne(() => Period)\n  period: Period;\n\n  @OneToMany(() => AnswerGrade, (answer) => answer.grade)\n  answers: AnswerGrade[];\n\n  @ManyToMany(() => Student)\n  @JoinTable({ name: 'student_grade' })\n  students: Student[];\n\n  @ManyToMany(() => Professor)\n  @JoinTable({ name: 'professor_grade' })\n  professors: Professor[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GradeIndex1624560625346.html":{"url":"classes/GradeIndex1624560625346.html","title":"class - GradeIndex1624560625346","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GradeIndex1624560625346\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1624560625346-GradeIndex.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'GradeIndex1624560625346'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1624560625346-GradeIndex.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1624560625346-GradeIndex.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1624560625346-GradeIndex.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class GradeIndex1624560625346 implements MigrationInterface {\n    name = 'GradeIndex1624560625346'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"CREATE INDEX `IX_question_group_class_examId` ON `question_group` (`class`, `exam_id`)\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"DROP INDEX `IX_question_group_class_examId` ON `question_group`\");\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GradeRepository.html":{"url":"classes/GradeRepository.html","title":"class - GradeRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GradeRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auxiliary/repositories/grade.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseRepository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findByUserAndPeriod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findByUserAndPeriod\n                        \n                        \n                    \n                \n            \n            \n                \nfindByUserAndPeriod(user: UserToFind, period: Period)\n                \n            \n\n\n            \n                \n                    Defined in src/auxiliary/repositories/grade.repository.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserToFind\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    period\n                                    \n                                                Period\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository } from 'typeorm';\nimport { BaseRepository } from 'typeorm-transactional-cls-hooked';\nimport { Grade } from '../entities/grade.entity';\nimport { Period } from '../entities/period.entity';\nimport { Professor } from '../entities/professor.entity';\nimport { Student } from '../entities/student.entity';\nimport { UserToFind } from '../types/user-to-find.type';\n\n@EntityRepository(Grade)\nexport class GradeRepository extends BaseRepository {\n  findByUserAndPeriod(user: UserToFind, period: Period): Promise {\n    const query = this.createQueryBuilder('grade');\n\n    if (user instanceof Student) {\n      query.innerJoin('grade.students', 'user');\n    }\n\n    if (user instanceof Professor) {\n      query.innerJoin('grade.professors', 'user');\n    }\n\n    query\n      .innerJoinAndSelect('grade.subject', 'subject')\n      .where('grade.periodId = :periodId', { periodId: period.id })\n      .andWhere('user.id = :userId', { userId: user.id });\n\n    return query.getMany();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GradeService.html":{"url":"injectables/GradeService.html","title":"injectable - GradeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GradeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auxiliary/services/grade.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findByUserAndPeriod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gradeRepository: GradeRepository)\n                    \n                \n                        \n                            \n                                Defined in src/auxiliary/services/grade.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gradeRepository\n                                                  \n                                                        \n                                                                        GradeRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/auxiliary/services/grade.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findByUserAndPeriod\n                        \n                        \n                    \n                \n            \n            \n                \nfindByUserAndPeriod(user: UserToFind, period: Period)\n                \n            \n\n\n            \n                \n                    Defined in src/auxiliary/services/grade.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserToFind\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    period\n                                    \n                                                Period\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Grade } from '../entities/grade.entity';\nimport { Period } from '../entities/period.entity';\nimport { GradeRepository } from '../repositories/grade.repository';\nimport type { UserToFind } from '../types/user-to-find.type';\n\n@Injectable()\nexport class GradeService {\n  constructor(\n    @InjectRepository(GradeRepository)\n    private readonly gradeRepository: GradeRepository,\n  ) {}\n\n  findAll(): Promise {\n    return this.gradeRepository.find();\n  }\n\n  findByUserAndPeriod(user: UserToFind, period: Period): Promise {\n    return this.gradeRepository.findByUserAndPeriod(user, period);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filters/http-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/core/filters/http-exception.filter.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('HttpExceptionFilter')\n                        \n                    \n                        \n                            \n                                    Defined in src/core/filters/http-exception.filter.ts:31\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/core/filters/http-exception.filter.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  Logger,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\n\nimport * as sentry from '@sentry/node';\nimport { ConfigService } from '@nestjs/config';\n\ninterface IException {\n  statusCode: number;\n  timestamp: string;\n  path: string;\n  stack?: any;\n  message: any;\n  name?: string;\n  body?: any;\n}\n\ninterface IClassValidatorException {\n  statusCode: number;\n  error: string;\n  message: string[];\n}\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  private readonly logger = new Logger('HttpExceptionFilter');\n  constructor(private readonly configService: ConfigService) {}\n\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n    exception.initMessage();\n    const ex: IException = {\n      statusCode: status,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n      message: exception.message,\n    };\n    const NODE_ENV = this.configService.get('NODE_ENV');\n    if (NODE_ENV !== 'production') {\n      ex.stack = exception.stack;\n      ex.name = exception.name;\n    }\n    // Only emit to Sentry exceptions that dont have code 4xx\n    const sendToSentry =\n      this.configService.get('SKIP_SENTRY') !== 'true' &&\n      NODE_ENV !== 'testing' &&\n      (status = 500);\n\n    if (sendToSentry) {\n      sentry.captureException(exception);\n    } else {\n      this.logger.error('Catched');\n      console.error(exception);\n    }\n\n    if (status === 400) {\n      const classValidatorEx = exception.getResponse() as IClassValidatorException;\n      ex.message = classValidatorEx.message;\n      ex.name = classValidatorEx.error;\n      ex.body = request.body;\n    }\n\n    response.status(status).send(ex);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IClassValidatorException.html":{"url":"interfaces/IClassValidatorException.html","title":"interface - IClassValidatorException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IClassValidatorException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filters/http-exception.filter.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        message\n                                \n                                \n                                        statusCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  Logger,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\n\nimport * as sentry from '@sentry/node';\nimport { ConfigService } from '@nestjs/config';\n\ninterface IException {\n  statusCode: number;\n  timestamp: string;\n  path: string;\n  stack?: any;\n  message: any;\n  name?: string;\n  body?: any;\n}\n\ninterface IClassValidatorException {\n  statusCode: number;\n  error: string;\n  message: string[];\n}\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  private readonly logger = new Logger('HttpExceptionFilter');\n  constructor(private readonly configService: ConfigService) {}\n\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n    exception.initMessage();\n    const ex: IException = {\n      statusCode: status,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n      message: exception.message,\n    };\n    const NODE_ENV = this.configService.get('NODE_ENV');\n    if (NODE_ENV !== 'production') {\n      ex.stack = exception.stack;\n      ex.name = exception.name;\n    }\n    // Only emit to Sentry exceptions that dont have code 4xx\n    const sendToSentry =\n      this.configService.get('SKIP_SENTRY') !== 'true' &&\n      NODE_ENV !== 'testing' &&\n      (status = 500);\n\n    if (sendToSentry) {\n      sentry.captureException(exception);\n    } else {\n      this.logger.error('Catched');\n      console.error(exception);\n    }\n\n    if (status === 400) {\n      const classValidatorEx = exception.getResponse() as IClassValidatorException;\n      ex.message = classValidatorEx.message;\n      ex.name = classValidatorEx.error;\n      ex.body = request.body;\n    }\n\n    response.status(status).send(ex);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEntity.html":{"url":"interfaces/IEntity.html","title":"interface - IEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1624416663575-SeedAuxiliary1.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { addMonths, endOfMonth, startOfMonth } from 'date-fns';\nimport { MigrationInterface, QueryRunner } from 'typeorm';\nimport faker = require('faker');\nimport bcrypt = require('bcryptjs');\n\ninterface IEntity {\n  id: number;\n}\n\nconst defaultName = 'Gerado';\nconst student = {\n  cpf: '50172241065',\n  enrollment: '989898',\n};\n\nexport class SeedAuxiliary1624412129413 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      'INSERT INTO `period` (`name`, `started_at`, `ended_at`) VALUES (?, ?, ?)',\n      [\n        defaultName,\n        startOfMonth(new Date()),\n        endOfMonth(addMonths(new Date(), 5)),\n      ],\n    );\n    const [\n      period,\n    ]: IEntity[] = await queryRunner.query(\n      'SELECT `id` FROM `period` WHERE `name` = ?',\n      [defaultName],\n    );\n\n    await queryRunner.query(\n      'INSERT INTO `course` (`code`, `title`) VALUES (?, ?)',\n      [defaultName, faker.random.alphaNumeric(20)],\n    );\n    const [\n      course,\n    ]: IEntity[] = await queryRunner.query(\n      'SELECT `id` FROM `course` WHERE `code` = ?',\n      [defaultName],\n    );\n\n    await queryRunner.query(\n      'INSERT INTO `subject` (`code`, `title`, `course_id`) VALUES (?, ?, ?)',\n      [defaultName, faker.random.alpha({ count: 20, upcase: true }), course.id],\n    );\n    const [\n      subject,\n    ]: IEntity[] = await queryRunner.query(\n      'SELECT `id` FROM `subject` WHERE `code` = ?',\n      [defaultName],\n    );\n\n    await queryRunner.query(\n      'INSERT INTO `grade` (`subject_id`, `period_id`) VALUES (?, ?)',\n      [subject.id, period.id],\n    );\n    const [\n      grade,\n    ]: IEntity[] = await queryRunner.query(\n      'SELECT `id` FROM `grade` WHERE `subject_id` = ? AND `period_id` = ?',\n      [subject.id, period.id],\n    );\n\n    const salt = await bcrypt.genSalt();\n    const password = await bcrypt.hash(process.env.ADMIN_PASSWORD!, salt);\n\n    await queryRunner.query(\n      'INSERT INTO `auth` (`login`, `password`, `salt`) VALUES (?, ?, ?)',\n      [student.enrollment, password, salt],\n    );\n    await queryRunner.query(\n      'INSERT INTO `user` (`enrollment`, `cpf`, `type`, `role`) VALUES (?, ?, ?, ?)',\n      [student.enrollment, student.cpf, 'Student', 'manager'],\n    );\n    const [\n      user,\n    ]: IEntity[] = await queryRunner.query(\n      'SELECT `id` FROM `user` WHERE `enrollment` = ?',\n      [student.enrollment],\n    );\n\n    await queryRunner.query(\n      'INSERT INTO `student_grade` (`user_id`, `grade_id`) VALUES (?, ?)',\n      [user.id, grade.id],\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    const [\n      user,\n    ]: IEntity[] = await queryRunner.query(\n      'SELECT `id` FROM `user` WHERE `enrollment` = ?',\n      [student.enrollment],\n    );\n    await queryRunner.query('DELETE FROM `student_grade` WHERE `user_id` = ?', [\n      user.id,\n    ]);\n    await queryRunner.query('DELETE FROM `user` WHERE `enrollment` = ?', [\n      student.enrollment,\n    ]);\n    await queryRunner.query('DELETE FROM `auth` WHERE `login` = ?', [\n      student.enrollment,\n    ]);\n\n    const [\n      period,\n    ]: IEntity[] = await queryRunner.query(\n      'SELECT `id` FROM `period` WHERE `name` = ?',\n      [defaultName],\n    );\n    const [\n      course,\n    ]: IEntity[] = await queryRunner.query(\n      'SELECT `id` FROM `course` WHERE `code` = ?',\n      [defaultName],\n    );\n    const [\n      subject,\n    ]: IEntity[] = await queryRunner.query(\n      'SELECT `id` FROM `subject` WHERE `code` = ?',\n      [defaultName],\n    );\n    const [\n      grade,\n    ]: IEntity[] = await queryRunner.query(\n      'SELECT `id` FROM `grade` WHERE `subject_id` = ? AND `period_id` = ?',\n      [subject.id, period.id],\n    );\n\n    await queryRunner.query('DELETE FROM `subject` WHERE `id` = ?', [\n      subject.id,\n    ]);\n    await queryRunner.query('DELETE FROM `course` WHERE `id` = ?', [course.id]);\n    await queryRunner.query('DELETE FROM `grade` WHERE `id` = ?', [grade.id]);\n    await queryRunner.query('DELETE FROM `period` WHERE `id` = ?', [period.id]);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IException.html":{"url":"interfaces/IException.html","title":"interface - IException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filters/http-exception.filter.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        body\n                                \n                                \n                                        message\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                        path\n                                \n                                \n                                            Optional\n                                        stack\n                                \n                                \n                                        statusCode\n                                \n                                \n                                        timestamp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stack\n                                    \n                                \n                                \n                                    \n                                        stack:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  Logger,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\n\nimport * as sentry from '@sentry/node';\nimport { ConfigService } from '@nestjs/config';\n\ninterface IException {\n  statusCode: number;\n  timestamp: string;\n  path: string;\n  stack?: any;\n  message: any;\n  name?: string;\n  body?: any;\n}\n\ninterface IClassValidatorException {\n  statusCode: number;\n  error: string;\n  message: string[];\n}\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  private readonly logger = new Logger('HttpExceptionFilter');\n  constructor(private readonly configService: ConfigService) {}\n\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n    exception.initMessage();\n    const ex: IException = {\n      statusCode: status,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n      message: exception.message,\n    };\n    const NODE_ENV = this.configService.get('NODE_ENV');\n    if (NODE_ENV !== 'production') {\n      ex.stack = exception.stack;\n      ex.name = exception.name;\n    }\n    // Only emit to Sentry exceptions that dont have code 4xx\n    const sendToSentry =\n      this.configService.get('SKIP_SENTRY') !== 'true' &&\n      NODE_ENV !== 'testing' &&\n      (status = 500);\n\n    if (sendToSentry) {\n      sentry.captureException(exception);\n    } else {\n      this.logger.error('Catched');\n      console.error(exception);\n    }\n\n    if (status === 400) {\n      const classValidatorEx = exception.getResponse() as IClassValidatorException;\n      ex.message = classValidatorEx.message;\n      ex.name = classValidatorEx.error;\n      ex.body = request.body;\n    }\n\n    response.status(status).send(ex);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfraModule.html":{"url":"modules/InfraModule.html","title":"module - InfraModule","body":"\n                   \n\n\n\n\n    Modules\n    InfraModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InfraModule\n\n\n\ncluster_InfraModule_providers\n\n\n\ncluster_InfraModule_imports\n\n\n\ncluster_InfraModule_exports\n\n\n\n\nFirebaseModule\n\nFirebaseModule\n\n\n\nInfraModule\n\nInfraModule\n\nInfraModule -->\n\nFirebaseModule->InfraModule\n\n\n\n\n\nMailerService \n\nMailerService \n\nMailerService  -->\n\nInfraModule->MailerService \n\n\n\n\n\nSendEmailService \n\nSendEmailService \n\nSendEmailService  -->\n\nInfraModule->SendEmailService \n\n\n\n\n\nTemplateService \n\nTemplateService \n\nTemplateService  -->\n\nInfraModule->TemplateService \n\n\n\n\n\nUploaderService \n\nUploaderService \n\nUploaderService  -->\n\nInfraModule->UploaderService \n\n\n\n\n\nSendEmailService\n\nSendEmailService\n\nInfraModule -->\n\nSendEmailService->InfraModule\n\n\n\n\n\nTemplateService\n\nTemplateService\n\nInfraModule -->\n\nTemplateService->InfraModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infra/infra.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SendEmailService\n                        \n                        \n                            TemplateService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UploadController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FirebaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailerService\n                        \n                        \n                            SendEmailService\n                        \n                        \n                            TemplateService\n                        \n                        \n                            UploaderService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { createTransport } from 'nodemailer';\nimport { FirebaseModule } from 'src/firebase';\nimport { UploadController } from './controllers/upload.controller';\nimport { NODEMAILER_TRANSPORTER } from './infra.constants';\nimport { FirebaseUploader } from './services/firebase-uploader.service';\nimport { MailerService } from './services/mailer.service';\nimport { NodeMailerService } from './services/nodemailer.service';\nimport { SendEmailService } from './services/send-email.service';\nimport { TemplateService } from './services/template.service';\nimport { UploaderService } from './services/uploader.service';\n\n@Module({\n  imports: [\n    ConfigModule,\n    FirebaseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) =>\n        configService.get('firebase')!,\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [\n    { provide: UploaderService, useClass: FirebaseUploader },\n    {\n      provide: NODEMAILER_TRANSPORTER,\n      useFactory: (configService: ConfigService) =>\n        createTransport(configService.get('nodemailer')),\n      inject: [ConfigService],\n    },\n    { provide: MailerService, useClass: NodeMailerService },\n    TemplateService,\n    SendEmailService,\n  ],\n  controllers: [UploadController],\n  exports: [UploaderService, MailerService, TemplateService, SendEmailService],\n})\nexport class InfraModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtGuard.html":{"url":"injectables/JwtGuard.html","title":"injectable - JwtGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/jwt-payload.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  type: string;\n  uid: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, userService: UserService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtModuleOptions } from '@nestjs/jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport { jwtConfigKey } from '../../config';\n\nimport { UserService } from '../../user/user.service';\nimport { AuthService } from '../auth.service';\nimport { JwtPayload } from '../interfaces/jwt-payload.interface';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly userService: UserService,\n    configService: ConfigService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: true,\n      secretOrKey: configService.get(jwtConfigKey)!.secret,\n    });\n  }\n\n  async validate(payload: JwtPayload): Promise {\n    const auth = await this.authService.findAuth({ login: payload.uid });\n    if (!auth) {\n      throw new UnauthorizedException();\n    }\n\n    const user = await this.userService.findSpecializedUser({\n      enrollment: payload.uid,\n    });\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nCustomLogger \n\nCustomLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nCustomLogger  -->\n\nLoggerModule->CustomLogger \n\n\n\n\n\nCustomLogger\n\nCustomLogger\n\nLoggerModule -->\n\nCustomLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/logger/logger.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomLogger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CustomLogger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { CustomLogger } from './logger.service';\n\n@Global()\n@Module({\n  providers: [CustomLogger],\n  exports: [CustomLogger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/login.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AuthDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@Length(PASSWORD_MIN, PASSWORD_MAX)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dtos/login.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         AuthDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         AuthDto:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, Length } from 'class-validator';\nimport { PASSWORD_MAX, PASSWORD_MIN } from '../auth.constants';\nimport { AuthDto } from './auth.dto';\n\nexport class LoginDto extends AuthDto {\n  @IsString()\n  @Length(PASSWORD_MIN, PASSWORD_MAX)\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailerService.html":{"url":"classes/MailerService.html","title":"class - MailerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/services/mailer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(sendMailDto: SendMailDto)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/services/mailer.service.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sendMailDto\n                                    \n                                                SendMailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SendMailDto } from '../dtos/send-mail.dto';\n\nexport abstract class MailerService {\n  abstract send(sendMailDto: SendMailDto): Promise;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NodeMailerService.html":{"url":"injectables/NodeMailerService.html","title":"injectable - NodeMailerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NodeMailerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/services/nodemailer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transporter: Transporter, configService: ConfigService, logger: CustomLogger)\n                    \n                \n                        \n                            \n                                Defined in src/infra/services/nodemailer.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transporter\n                                                  \n                                                        \n                                                                    Transporter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        CustomLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(sendMailDto: SendMailDto)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/services/nodemailer.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sendMailDto\n                                    \n                                                SendMailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Transporter } from 'nodemailer';\nimport { CustomLogger } from 'src/logger/logger.service';\n\nimport { SendMailDto } from '../dtos/send-mail.dto';\nimport { NODEMAILER_TRANSPORTER } from '../infra.constants';\nimport { MailerService } from './mailer.service';\n\n@Injectable()\nexport class NodeMailerService implements MailerService {\n  constructor(\n    @Inject(NODEMAILER_TRANSPORTER) private readonly transporter: Transporter,\n    private readonly configService: ConfigService,\n    private readonly logger: CustomLogger,\n  ) {\n    this.logger.setContext('NodeMailerService');\n  }\n\n  async send(sendMailDto: SendMailDto): Promise {\n    const envelope = {\n      from: `UNEB Form `,\n      to: sendMailDto.to,\n    };\n    this.logger.log(\n      await this.transporter.sendMail({\n        ...sendMailDto,\n        ...envelope,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PayloadInterceptor.html":{"url":"injectables/PayloadInterceptor.html","title":"injectable - PayloadInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PayloadInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interceptors/payload.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(_: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/core/interceptors/payload.interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class PayloadInterceptor implements NestInterceptor {\n  intercept(_: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(map((data) => ({ data })));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Period.html":{"url":"classes/Period.html","title":"class - Period","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Period\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auxiliary/entities/period.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        FFEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                endedAt\n                            \n                            \n                                exams\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                startedAt\n                            \n                            \n                                id\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'datetime'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auxiliary/entities/period.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Exam[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auxiliary/entities/period.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auxiliary/entities/period.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'datetime'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auxiliary/entities/period.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { FFEntity } from 'src/core/entities/ff.entity';\nimport { Exam } from 'src/exam/entities/exam.entity';\nimport { Column, Entity, Index, OneToMany } from 'typeorm';\n\n@Entity('period')\n@Index('IX_period_started_at_ended_at', ['startedAt', 'endedAt'])\nexport class Period extends FFEntity {\n  @Column({ type: 'varchar', nullable: true })\n  name?: string;\n\n  @Column({ type: 'datetime' })\n  startedAt: Date;\n\n  @Column({ type: 'datetime' })\n  endedAt: Date;\n\n  @OneToMany(() => Exam, (exam) => exam.period)\n  exams: Exam[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PeriodIndex1624547816204.html":{"url":"classes/PeriodIndex1624547816204.html","title":"class - PeriodIndex1624547816204","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PeriodIndex1624547816204\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1624547816204-PeriodIndex.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'PeriodIndex1624547816204'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1624547816204-PeriodIndex.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1624547816204-PeriodIndex.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1624547816204-PeriodIndex.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class PeriodIndex1624547816204 implements MigrationInterface {\n    name = 'PeriodIndex1624547816204'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `exam` DROP FOREIGN KEY `FK_ba483ad17eb41fb181aa3a77d4f`\");\n        await queryRunner.query(\"ALTER TABLE `exam` CHANGE `period_id` `period_id` int NOT NULL\");\n        await queryRunner.query(\"CREATE INDEX `IX_period_started_at_ended_at` ON `period` (`started_at`, `ended_at`)\");\n        await queryRunner.query(\"ALTER TABLE `exam` ADD CONSTRAINT `FK_ba483ad17eb41fb181aa3a77d4f` FOREIGN KEY (`period_id`) REFERENCES `period`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `exam` DROP FOREIGN KEY `FK_ba483ad17eb41fb181aa3a77d4f`\");\n        await queryRunner.query(\"DROP INDEX `IX_period_started_at_ended_at` ON `period`\");\n        await queryRunner.query(\"ALTER TABLE `exam` CHANGE `period_id` `period_id` int NULL\");\n        await queryRunner.query(\"ALTER TABLE `exam` ADD CONSTRAINT `FK_ba483ad17eb41fb181aa3a77d4f` FOREIGN KEY (`period_id`) REFERENCES `period`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PeriodRepository.html":{"url":"classes/PeriodRepository.html","title":"class - PeriodRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PeriodRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auxiliary/repositories/period.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseRepository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository } from 'typeorm';\nimport { BaseRepository } from 'typeorm-transactional-cls-hooked';\nimport { Period } from '../entities/period.entity';\n\n@EntityRepository(Period)\nexport class PeriodRepository extends BaseRepository {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PeriodService.html":{"url":"injectables/PeriodService.html","title":"injectable - PeriodService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PeriodService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auxiliary/services/period.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                getLastPeriod\n                            \n                            \n                                    Async\n                                getPeriodByInterval\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(periodRepository: PeriodRepository)\n                    \n                \n                        \n                            \n                                Defined in src/auxiliary/services/period.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        periodRepository\n                                                  \n                                                        \n                                                                        PeriodRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/auxiliary/services/period.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getLastPeriod\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLastPeriod()\n                \n            \n\n\n            \n                \n                    Defined in src/auxiliary/services/period.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPeriodByInterval\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPeriodByInterval(undefined: Interval)\n                \n            \n\n\n            \n                \n                    Defined in src/auxiliary/services/period.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            Interval\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { LessThan, LessThanOrEqual, MoreThanOrEqual } from 'typeorm';\nimport { Period } from '../entities/period.entity';\nimport { PeriodRepository } from '../repositories/period.repository';\n\n@Injectable()\nexport class PeriodService {\n  constructor(\n    @InjectRepository(PeriodRepository)\n    private readonly periodRepository: PeriodRepository,\n  ) {}\n\n  findAll(): Promise {\n    return this.periodRepository.find();\n  }\n\n  // bool _rangeOverlapping(\n  //   Duration startA,\n  //   Duration endA,\n  //   Duration startB,\n  //   Duration endB,\n  // ) {\n  //   return (startA = startB);\n  // }\n\n  async getLastPeriod(): Promise {\n    const period = await this.periodRepository.findOne({\n      where: {\n        startedAt: MoreThanOrEqual(new Date()),\n        endedAt: LessThanOrEqual(new Date()),\n      },\n    });\n\n    if (!period) {\n      throw new NotFoundException('period not found for given date');\n    }\n\n    return period;\n  }\n\n  async getPeriodByInterval({ start, end }: Interval): Promise {\n    const period = await this.periodRepository.findOne({\n      where: {\n        startedAt: LessThan(end),\n        endedAt: MoreThanOrEqual(start),\n      },\n    });\n\n    if (!period) {\n      throw new NotFoundException('period not found for given date');\n    }\n\n    return period;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonalQuestionGroup.html":{"url":"injectables/PersonalQuestionGroup.html","title":"injectable - PersonalQuestionGroup","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PersonalQuestionGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-group/providers/personal-group.provider.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPersonal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: QuestionGroupRepository, gradeService: GradeService)\n                    \n                \n                        \n                            \n                                Defined in src/question-group/providers/personal-group.provider.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        QuestionGroupRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gradeService\n                                                  \n                                                        \n                                                                        GradeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPersonal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPersonal(user: Student | Professor, exam: Exam)\n                \n            \n\n\n            \n                \n                    Defined in src/question-group/providers/personal-group.provider.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            Student | Professor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    exam\n                                    \n                                                Exam\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Professor } from 'src/auxiliary/entities/professor.entity';\nimport { Student } from 'src/auxiliary/entities/student.entity';\nimport { GradeService } from 'src/auxiliary/services/grade.service';\nimport { Exam } from 'src/exam/entities/exam.entity';\nimport { QuestionGroupGrade } from '../dtos/question-group-grade.dto';\nimport { QuestionGroup } from '../entities/question-group.entity';\nimport { questionGroupRelations } from '../question.constants';\nimport { QuestionGroupRepository } from '../repositories/question-group.repository';\n\n@Injectable()\nexport class PersonalQuestionGroup {\n  constructor(\n    @InjectRepository(QuestionGroupRepository)\n    private readonly repository: QuestionGroupRepository,\n    private readonly gradeService: GradeService,\n  ) {}\n\n  async getPersonal(\n    user: Student | Professor,\n    exam: Exam,\n  ): Promise {\n    const grades = await this.gradeService.findByUserAndPeriod(\n      user,\n      exam.period,\n    );\n    if (!grades.length) {\n      return [];\n    }\n\n    const groupGrades = await this.repository.find({\n      where: { class: true, exam },\n      relations: questionGroupRelations,\n    });\n\n    return groupGrades\n      .reduce(\n        (result, group) => [\n          ...result,\n          ...grades.map((grade) => {\n            const groupGrade = Object.assign(new QuestionGroupGrade(), group);\n            groupGrade.grade = grade;\n            return groupGrade;\n          }),\n        ],\n        new Array(),\n      )\n      .sort((a, b) => a.id - b.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Professor.html":{"url":"classes/Professor.html","title":"class - Professor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Professor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auxiliary/entities/professor.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        User\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                professorGrades\n                            \n                            \n                                cpf\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                enrollment\n                            \n                            \n                                examAgreements\n                            \n                            \n                                role\n                            \n                            \n                                type\n                            \n                            \n                                id\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    grades\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            professorGrades\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany(undefined, {lazy: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auxiliary/entities/professor.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cpf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', unique: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         User\n\n                                \n                            \n                        \n                            \n                                    Defined in         User:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', unique: true, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         User\n\n                                \n                            \n                        \n                            \n                                    Defined in         User:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enrollment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', unique: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         User\n\n                                \n                            \n                        \n                            \n                                    Defined in         User:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            examAgreements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ExamAgreement[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         User\n\n                                \n                            \n                        \n                            \n                                    Defined in         User:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'enum', default: undefined, enum: UserRole})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         User\n\n                                \n                            \n                        \n                            \n                                    Defined in         User:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'enum', enum: UserType})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         User\n\n                                \n                            \n                        \n                            \n                                    Defined in         User:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        grades\n                    \n                \n\n                \n                    \n                        getgrades()\n                    \n                \n                            \n                                \n                                    Defined in src/auxiliary/entities/professor.entity.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ChildEntity, ManyToMany } from 'typeorm';\nimport { User } from '../../user/entities/user.entity';\nimport { Grade } from './grade.entity';\n\n@ChildEntity()\nexport class Professor extends User {\n  @ManyToMany(() => Grade, { lazy: true })\n  professorGrades: Promise;\n\n  get grades(): Promise {\n    return this.professorGrades;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfessorRepository.html":{"url":"classes/ProfessorRepository.html","title":"class - ProfessorRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfessorRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auxiliary/repositories/professor.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseRepository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository } from 'typeorm';\nimport { BaseRepository } from 'typeorm-transactional-cls-hooked';\nimport { Professor } from '../entities/professor.entity';\n\n@EntityRepository(Professor)\nexport class ProfessorRepository extends BaseRepository {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfessorService.html":{"url":"injectables/ProfessorService.html","title":"injectable - ProfessorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfessorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auxiliary/services/professor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createStudent\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: ProfessorRepository)\n                    \n                \n                        \n                            \n                                Defined in src/auxiliary/services/professor.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ProfessorRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createStudent\n                        \n                        \n                    \n                \n            \n            \n                \ncreateStudent(createDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/auxiliary/services/professor.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(userDto: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auxiliary/services/professor.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserDto } from 'src/user/dtos/user.dto';\nimport { Transactional } from 'typeorm-transactional-cls-hooked';\n\nimport { CreateUserDto } from '../../user/dtos/create-user.dto';\nimport { Professor } from '../entities/professor.entity';\nimport { ProfessorRepository } from '../repositories/professor.repository';\n\n@Injectable()\nexport class ProfessorService {\n  constructor(\n    @InjectRepository(ProfessorRepository)\n    private readonly repository: ProfessorRepository,\n  ) {}\n\n  @Transactional()\n  createStudent(createDto: CreateUserDto): Promise {\n    const professor = this.repository.create(createDto);\n\n    return this.repository.save(professor);\n  }\n\n  findOne(userDto: UserDto): Promise {\n    return this.repository.findOne({ ...userDto });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Question.html":{"url":"classes/Question.html","title":"class - Question","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Question\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-group/entities/question.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        FFEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answers\n                            \n                            \n                                group\n                            \n                            \n                                groupId\n                            \n                            \n                                    Optional\n                                imageAlt\n                            \n                            \n                                    Optional\n                                imageUrl\n                            \n                            \n                                position\n                            \n                            \n                                required\n                            \n                            \n                                statement\n                            \n                            \n                                id\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Answer[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/entities/question.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QuestionGroup\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/entities/question.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/entities/question.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            imageAlt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/entities/question.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            imageUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/entities/question.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Index('IX_question_position')@Column({type: 'int', default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/entities/question.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            required\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'bool', default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/entities/question.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/entities/question.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Answer } from 'src/answer/entities/answer.entity';\nimport { FFEntity } from 'src/core/entities/ff.entity';\nimport { QuestionGroup } from 'src/question-group/entities/question-group.entity';\nimport { Column, Entity, Index, ManyToOne, OneToMany } from 'typeorm';\n\n@Entity()\nexport class Question extends FFEntity {\n  @Column({ type: 'text' })\n  statement: string;\n\n  @Column({ type: 'text', nullable: true })\n  imageUrl?: string;\n\n  @Column({ type: 'varchar', nullable: true })\n  imageAlt?: string;\n\n  @Column({ type: 'bool', default: true })\n  required: boolean;\n\n  @Column({ type: 'int' })\n  groupId: number;\n\n  @Index('IX_question_position')\n  @Column({ type: 'int', default: 0 })\n  position: number;\n\n  @ManyToOne(() => QuestionGroup)\n  group: QuestionGroup;\n\n  @OneToMany(() => Answer, (answer) => answer.question)\n  answers: Answer[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/QuestionController.html":{"url":"controllers/QuestionController.html","title":"controller - QuestionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  QuestionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-group/controllers/question.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                question\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createQuestion\n                            \n                            \n                                    Async\n                                createQuestions\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                reorder\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createQuestion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createQuestion(createQuestionDto: CreateQuestionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOkResponse({type: Question})\n                \n            \n\n            \n                \n                    Defined in src/question-group/controllers/question.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createQuestionDto\n                                    \n                                                CreateQuestionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createQuestions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createQuestions(groupId: number, createQuestionsDto: CreateQuestionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':groupId')@ApiOkResponse({type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/question-group/controllers/question.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groupId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createQuestionsDto\n                                    \n                                                CreateQuestionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(findDto: QuestionFindDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/question-group/controllers/question.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    findDto\n                                    \n                                                QuestionFindDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({type: Question})@ApiNotFoundResponse()\n                \n            \n\n            \n                \n                    Defined in src/question-group/controllers/question.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOkResponse()@ApiNotFoundResponse()\n                \n            \n\n            \n                \n                    Defined in src/question-group/controllers/question.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            reorder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reorder(reorderQuesitonDto: ReorderQuestionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@ApiOkResponse({type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/question-group/controllers/question.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reorderQuesitonDto\n                                    \n                                                ReorderQuestionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateQuestionDto: UpdateQuestionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiOkResponse({type: Question})@ApiNotFoundResponse()\n                \n            \n\n            \n                \n                    Defined in src/question-group/controllers/question.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateQuestionDto\n                                    \n                                                UpdateQuestionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  Put,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiNotFoundResponse, ApiOkResponse, ApiTags } from '@nestjs/swagger';\nimport { JwtGuard } from '../../auth/guards/jwt.guard';\n\nimport { CreateQuestionDto } from '../dtos/create-question.dto';\nimport { QuestionFindDto } from '../dtos/question-find.dto';\nimport { ReorderQuestionDto } from '../dtos/reorder-question.dto';\nimport { UpdateQuestionDto } from '../dtos/update-question.dto';\nimport { Question } from '../entities/question.entity';\nimport { QuestionService } from '../services/question.service';\nimport { CreateQuestionsDto } from '../dtos/create-questions.dto';\n\n@Controller('question')\n@ApiTags('Question')\n@UseGuards(JwtGuard)\nexport class QuestionController {\n  constructor(private readonly questionService: QuestionService) {}\n\n  @Post()\n  @ApiOkResponse({ type: Question })\n  async createQuestion(\n    @Body() createQuestionDto: CreateQuestionDto,\n  ): Promise {\n    return this.questionService.createQuestion(createQuestionDto);\n  }\n\n  @Post(':groupId')\n  @ApiOkResponse({ type: [Question] })\n  async createQuestions(\n    @Param('groupId', ParseIntPipe) groupId: number,\n    @Body() createQuestionsDto: CreateQuestionsDto,\n  ): Promise {\n    return this.questionService.createQuestions(groupId, createQuestionsDto);\n  }\n\n  @Get()\n  @ApiOkResponse({ type: [Question] })\n  async find(@Query() findDto: QuestionFindDto) {\n    return this.questionService.find(findDto);\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: Question })\n  @ApiNotFoundResponse()\n  async findOne(@Param('id', ParseIntPipe) id: number): Promise {\n    return this.questionService.findOne(id);\n  }\n\n  @Put(':id')\n  @ApiOkResponse({ type: Question })\n  @ApiNotFoundResponse()\n  async update(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() updateQuestionDto: UpdateQuestionDto,\n  ): Promise {\n    return this.questionService.update(id, updateQuestionDto);\n  }\n\n  @Patch()\n  @ApiOkResponse({ type: [Question] })\n  async reorder(\n    @Body() reorderQuesitonDto: ReorderQuestionDto,\n  ): Promise {\n    return this.questionService.reorder(reorderQuesitonDto);\n  }\n\n  @Delete(':id')\n  @ApiOkResponse()\n  @ApiNotFoundResponse()\n  async remove(@Param('id', ParseIntPipe) id: number): Promise {\n    return this.questionService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuestionFindDto.html":{"url":"classes/QuestionFindDto.html","title":"class - QuestionFindDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuestionFindDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-group/dtos/question-find.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                groupId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            groupId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsPositive()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/dtos/question-find.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsPositive } from 'class-validator';\n\nexport class QuestionFindDto {\n  @IsPositive()\n  @IsOptional()\n  groupId?: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuestionGroup.html":{"url":"classes/QuestionGroup.html","title":"class - QuestionGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuestionGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-group/entities/question-group.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        FFEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                exam\n                            \n                            \n                                examId\n                            \n                            \n                                personal\n                            \n                            \n                                position\n                            \n                            \n                                questions\n                            \n                            \n                                title\n                            \n                            \n                                id\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sortItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'bool', default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/entities/question-group.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Exam\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/entities/question-group.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            examId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/entities/question-group.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            personal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'bool', default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/entities/question-group.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Index('IX_question_group_position')@Column({type: 'int', default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/entities/question-group.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Question[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/entities/question-group.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/entities/question-group.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:13\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortItems\n                        \n                        \n                    \n                \n            \n            \n                \nsortItems()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AfterLoad()\n                \n            \n\n            \n                \n                    Defined in src/question-group/entities/question-group.entity.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FFEntity } from 'src/core/entities/ff.entity';\nimport { Exam } from 'src/exam/entities/exam.entity';\nimport {\n  AfterLoad,\n  Column,\n  Entity,\n  Index,\n  ManyToOne,\n  OneToMany,\n} from 'typeorm';\nimport { Question } from './question.entity';\n\n@Entity()\n@Index('IX_question_group_class_examId', ['class', 'examId'])\nexport class QuestionGroup extends FFEntity {\n  @Column({ type: 'varchar' })\n  title: string;\n\n  // TODO: juntar essas flags em um enum\n  @Column({ type: 'bool', default: false })\n  class: boolean;\n\n  @Column({ type: 'bool', default: false })\n  personal: boolean;\n\n  @Index('IX_question_group_position')\n  @Column({ type: 'int', default: 0 })\n  position: number;\n\n  @Column({ type: 'int', nullable: true })\n  examId: number;\n\n  @OneToMany(() => Question, (question) => question.group)\n  questions: Question[];\n\n  @ManyToOne(() => Exam)\n  exam: Exam;\n\n  @AfterLoad()\n  sortItems() {\n    this.questions =\n      this.questions?.sort((a, b) => a.position - b.position) ?? [];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuestionGroup1620179231630.html":{"url":"classes/QuestionGroup1620179231630.html","title":"class - QuestionGroup1620179231630","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuestionGroup1620179231630\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1620179231630-QuestionGroup.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'QuestionGroup1620179231630'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1620179231630-QuestionGroup.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1620179231630-QuestionGroup.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1620179231630-QuestionGroup.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class QuestionGroup1620179231630 implements MigrationInterface {\n    name = 'QuestionGroup1620179231630'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"CREATE TABLE `question` (`created_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), `updated_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), `deleted_at` datetime(6) NULL, `id` int NOT NULL AUTO_INCREMENT, `statement` text NOT NULL, `image_url` text NOT NULL, `image_alt` varchar(255) NOT NULL DEFAULT '', `required` tinyint NOT NULL DEFAULT 1, `group_id` int NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB\");\n        await queryRunner.query(\"CREATE TABLE `question_group` (`created_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), `updated_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), `deleted_at` datetime(6) NULL, `id` int NOT NULL AUTO_INCREMENT, `title` varchar(255) NOT NULL, `class` tinyint NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB\");\n        await queryRunner.query(\"ALTER TABLE `question` ADD CONSTRAINT `FK_3b2789ae1c494ff1bf8dd4d4607` FOREIGN KEY (`group_id`) REFERENCES `question_group`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `question` DROP FOREIGN KEY `FK_3b2789ae1c494ff1bf8dd4d4607`\");\n        await queryRunner.query(\"DROP TABLE `question_group`\");\n        await queryRunner.query(\"DROP TABLE `question`\");\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/QuestionGroupController.html":{"url":"controllers/QuestionGroupController.html","title":"controller - QuestionGroupController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  QuestionGroupController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-group/controllers/question-group.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                question-group\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                copy\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findPersonal\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                reorder\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    copy(copyQuestionGroupDto: CopyQuestionGroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@ApiOkResponse({type: QuestionGroup})@ApiNotFoundResponse()\n                \n            \n\n            \n                \n                    Defined in src/question-group/controllers/question-group.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    copyQuestionGroupDto\n                                    \n                                                CopyQuestionGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createQuestionGroupDto: CreateQuestionGroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOkResponse({type: QuestionGroup})\n                \n            \n\n            \n                \n                    Defined in src/question-group/controllers/question-group.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createQuestionGroupDto\n                                    \n                                                CreateQuestionGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/question-group/controllers/question-group.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({type: QuestionGroup})@ApiNotFoundResponse()\n                \n            \n\n            \n                \n                    Defined in src/question-group/controllers/question-group.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findPersonal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findPersonal(examId: number, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me/:examId')@ApiOkResponse({type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/question-group/controllers/question-group.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    examId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOkResponse()@ApiNotFoundResponse()\n                \n            \n\n            \n                \n                    Defined in src/question-group/controllers/question-group.controller.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            reorder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reorder(reorderQuestionGroupDto: ReorderQuestionGroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@ApiOkResponse({type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/question-group/controllers/question-group.controller.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reorderQuestionGroupDto\n                                    \n                                                ReorderQuestionGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateQuestionGroupDto: UpdateQuestionGroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiOkResponse({type: QuestionGroup})@ApiNotFoundResponse()\n                \n            \n\n            \n                \n                    Defined in src/question-group/controllers/question-group.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateQuestionGroupDto\n                                    \n                                                UpdateQuestionGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Delete,\n  UseGuards,\n  ParseIntPipe,\n  Put,\n  Patch,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { JwtGuard } from '../../auth/guards/jwt.guard';\n\nimport { QuestionGroupService } from '../services/question-group.service';\nimport { CreateQuestionGroupDto } from '../dtos/create-question-group.dto';\nimport { UpdateQuestionGroupDto } from '../dtos/update-question-group.dto';\nimport { QuestionGroup } from '../entities/question-group.entity';\nimport { CopyQuestionGroupDto } from '../dtos/copy-question-group.dto';\nimport { ReorderQuestionGroupDto } from '../dtos/reorder-question-group.dto';\nimport { GetUser } from 'src/user/decoratos/get-user.decorator';\nimport { User } from 'src/user/entities/user.entity';\n\n@Controller('question-group')\n@ApiTags('QuestionGroup')\n@UseGuards(JwtGuard)\n@ApiBearerAuth()\nexport class QuestionGroupController {\n  constructor(private readonly questionGroupService: QuestionGroupService) {}\n\n  @Post()\n  @ApiOkResponse({ type: QuestionGroup })\n  async create(\n    @Body() createQuestionGroupDto: CreateQuestionGroupDto,\n  ): Promise {\n    return this.questionGroupService.create(createQuestionGroupDto);\n  }\n\n  @Get()\n  @ApiOkResponse({ type: [QuestionGroup] })\n  async findAll(): Promise {\n    return this.questionGroupService.findAll();\n  }\n\n  @Get('me/:examId')\n  @ApiOkResponse({ type: [QuestionGroup] })\n  async findPersonal(\n    @Param('examId', ParseIntPipe) examId: number,\n    @GetUser() user: User,\n  ): Promise {\n    return this.questionGroupService.findPersonal({ examId, user });\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: QuestionGroup })\n  @ApiNotFoundResponse()\n  async findOne(@Param('id', ParseIntPipe) id: number): Promise {\n    return this.questionGroupService.findOne(id);\n  }\n\n  @Put(':id')\n  @ApiOkResponse({ type: QuestionGroup })\n  @ApiNotFoundResponse()\n  async update(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() updateQuestionGroupDto: UpdateQuestionGroupDto,\n  ): Promise {\n    return this.questionGroupService.update(id, updateQuestionGroupDto);\n  }\n\n  @Put()\n  @ApiOkResponse({ type: QuestionGroup })\n  @ApiNotFoundResponse()\n  async copy(\n    @Body() copyQuestionGroupDto: CopyQuestionGroupDto,\n  ): Promise {\n    return this.questionGroupService.copy(copyQuestionGroupDto);\n  }\n\n  @Patch()\n  @ApiOkResponse({ type: [QuestionGroup] })\n  async reorder(\n    @Body() reorderQuestionGroupDto: ReorderQuestionGroupDto,\n  ): Promise {\n    return this.questionGroupService.reorder(reorderQuestionGroupDto);\n  }\n\n  @Delete(':id')\n  @ApiOkResponse()\n  @ApiNotFoundResponse()\n  async remove(@Param('id', ParseIntPipe) id: number): Promise {\n    return this.questionGroupService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuestionGroupGrade.html":{"url":"classes/QuestionGroupGrade.html","title":"class - QuestionGroupGrade","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuestionGroupGrade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-group/dtos/question-group-grade.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        QuestionGroup\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                grade\n                            \n                            \n                                class\n                            \n                            \n                                exam\n                            \n                            \n                                examId\n                            \n                            \n                                personal\n                            \n                            \n                                position\n                            \n                            \n                                questions\n                            \n                            \n                                title\n                            \n                            \n                                id\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sortItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grade\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Grade\n\n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/dtos/question-group-grade.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'bool', default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionGroup\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionGroup:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Exam\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionGroup\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionGroup:37\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            examId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int', nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionGroup\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionGroup:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            personal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'bool', default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionGroup\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionGroup:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Index('IX_question_group_position')@Column({type: 'int', default: 0})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionGroup\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionGroup:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Question[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionGroup\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionGroup:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         QuestionGroup\n\n                                \n                            \n                        \n                            \n                                    Defined in         QuestionGroup:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:13\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortItems\n                        \n                        \n                    \n                \n            \n            \n                \nsortItems()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AfterLoad()\n                \n            \n\n            \n                \n                    Inherited from         QuestionGroup\n\n                \n            \n            \n                \n                        Defined in         QuestionGroup:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Grade } from 'src/auxiliary/entities/grade.entity';\nimport { QuestionGroup } from '../entities/question-group.entity';\n\nexport class QuestionGroupGrade extends QuestionGroup {\n  grade: Grade;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuestionGroupGradeRemove1624883202213.html":{"url":"classes/QuestionGroupGradeRemove1624883202213.html","title":"class - QuestionGroupGradeRemove1624883202213","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuestionGroupGradeRemove1624883202213\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1624883202214-QuestionGroupGradeRemove.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'QuestionGroupGradeRemove1624883202213'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1624883202214-QuestionGroupGradeRemove.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1624883202214-QuestionGroupGradeRemove.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1624883202214-QuestionGroupGradeRemove.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class QuestionGroupGradeRemove1624883202213\n  implements MigrationInterface\n{\n  name = 'QuestionGroupGradeRemove1624883202213';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query('DROP TABLE `question_group_grade`');\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      \"CREATE TABLE `question_group_grade` (`created_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), `updated_at` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), `deleted_at` datetime(6) NULL, `id` int NOT NULL AUTO_INCREMENT, `title` varchar(255) NOT NULL, `class` tinyint NOT NULL DEFAULT 0, `personal` tinyint NOT NULL DEFAULT 0, `position` int NOT NULL DEFAULT '0', `exam_id` int NULL, INDEX `IX_question_group_position` (`position`), PRIMARY KEY (`id`)) ENGINE=InnoDB\",\n    );\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuestionGroupModule.html":{"url":"modules/QuestionGroupModule.html","title":"module - QuestionGroupModule","body":"\n                   \n\n\n\n\n    Modules\n    QuestionGroupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QuestionGroupModule\n\n\n\ncluster_QuestionGroupModule_exports\n\n\n\ncluster_QuestionGroupModule_providers\n\n\n\ncluster_QuestionGroupModule_imports\n\n\n\n\nAuxiliaryModule\n\nAuxiliaryModule\n\n\n\nQuestionGroupModule\n\nQuestionGroupModule\n\nQuestionGroupModule -->\n\nAuxiliaryModule->QuestionGroupModule\n\n\n\n\n\nExamModule\n\nExamModule\n\nQuestionGroupModule -->\n\nExamModule->QuestionGroupModule\n\n\n\n\n\nQuestionService \n\nQuestionService \n\nQuestionService  -->\n\nQuestionGroupModule->QuestionService \n\n\n\n\n\nPersonalQuestionGroup\n\nPersonalQuestionGroup\n\nQuestionGroupModule -->\n\nPersonalQuestionGroup->QuestionGroupModule\n\n\n\n\n\nQuestionGroupService\n\nQuestionGroupService\n\nQuestionGroupModule -->\n\nQuestionGroupService->QuestionGroupModule\n\n\n\n\n\nQuestionService\n\nQuestionService\n\nQuestionGroupModule -->\n\nQuestionService->QuestionGroupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/question-group/question-group.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PersonalQuestionGroup\n                        \n                        \n                            QuestionGroupService\n                        \n                        \n                            QuestionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            QuestionGroupController\n                        \n                        \n                            QuestionController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuxiliaryModule\n                        \n                        \n                            ExamModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            QuestionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { QuestionGroupService } from './services/question-group.service';\nimport { QuestionGroupController } from './controllers/question-group.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { QuestionGroupRepository } from './repositories/question-group.repository';\nimport { QuestionController } from './controllers/question.controller';\nimport { ExamModule } from '../exam/exam.module';\nimport { QuestionService } from './services/question.service';\nimport { QuestionRepository } from './repositories/question.repository';\nimport { PersonalQuestionGroup } from './providers/personal-group.provider';\nimport { AuxiliaryModule } from 'src/auxiliary/auxiliary.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([QuestionGroupRepository, QuestionRepository]),\n    ExamModule,\n    AuxiliaryModule,\n  ],\n  controllers: [QuestionGroupController, QuestionController],\n  providers: [QuestionGroupService, PersonalQuestionGroup, QuestionService],\n  exports: [QuestionService],\n})\nexport class QuestionGroupModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuestionGroupRepository.html":{"url":"classes/QuestionGroupRepository.html","title":"class - QuestionGroupRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuestionGroupRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-group/repositories/question-group.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseRepository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository } from \"typeorm\";\nimport { BaseRepository } from \"typeorm-transactional-cls-hooked\";\nimport { QuestionGroup } from \"../entities/question-group.entity\";\n\n@EntityRepository(QuestionGroup)\nexport class QuestionGroupRepository extends BaseRepository {}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionGroupService.html":{"url":"injectables/QuestionGroupService.html","title":"injectable - QuestionGroupService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuestionGroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-group/services/question-group.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                copy\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findPersonal\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                reorder\n                            \n                            \n                                    Private\n                                    Async\n                                setExamAndPosition\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: QuestionGroupRepository, examService: ExamService, questionService: QuestionService, personalGroup: PersonalQuestionGroup)\n                    \n                \n                        \n                            \n                                Defined in src/question-group/services/question-group.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        QuestionGroupRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        examService\n                                                  \n                                                        \n                                                                        ExamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        personalGroup\n                                                  \n                                                        \n                                                                        PersonalQuestionGroup\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    copy(copyQuestionGroupDto: CopyQuestionGroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/question-group/services/question-group.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    copyQuestionGroupDto\n                                    \n                                                CopyQuestionGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createQuestionGroupDto: CreateQuestionGroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/question-group/services/question-group.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createQuestionGroupDto\n                                    \n                                                CreateQuestionGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/question-group/services/question-group.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/question-group/services/question-group.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findPersonal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findPersonal(undefined: FindPersonalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/question-group/services/question-group.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                FindPersonalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/question-group/services/question-group.service.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            reorder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reorder(undefined: ReorderQuestionGroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/question-group/services/question-group.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ReorderQuestionGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            setExamAndPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setExamAndPosition(questionGroup: QuestionGroup, examId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/question-group/services/question-group.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    questionGroup\n                                    \n                                                QuestionGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    examId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateQuestionGroupDto: UpdateQuestionGroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/question-group/services/question-group.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateQuestionGroupDto\n                                    \n                                                UpdateQuestionGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { In } from 'typeorm';\n\nimport { SoftDeleteResult } from 'src/core/interfaces/soft-delete-result.interface';\nimport { ExamService } from 'src/exam/services/exam.service';\nimport { Transactional } from 'typeorm-transactional-cls-hooked';\nimport { CopyQuestionGroupDto } from '../dtos/copy-question-group.dto';\nimport { CreateQuestionGroupDto } from '../dtos/create-question-group.dto';\nimport { ReorderQuestionGroupDto } from '../dtos/reorder-question-group.dto';\nimport { UpdateQuestionGroupDto } from '../dtos/update-question-group.dto';\nimport { QuestionGroup } from '../entities/question-group.entity';\nimport { questionGroupNotFound } from '../question-group.constants';\nimport { QuestionService } from './question.service';\nimport { QuestionGroupRepository } from '../repositories/question-group.repository';\nimport { last } from 'src/core/utils/last.util';\nimport { FindPersonalDto } from '../dtos/find-personal.dto';\nimport { PersonalQuestionGroup } from '../providers/personal-group.provider';\nimport { Student } from 'src/auxiliary/entities/student.entity';\nimport { Professor } from 'src/auxiliary/entities/professor.entity';\nimport { questionGroupRelations } from '../question.constants';\n\n@Injectable()\nexport class QuestionGroupService {\n  constructor(\n    @InjectRepository(QuestionGroupRepository)\n    private readonly repository: QuestionGroupRepository,\n    private readonly examService: ExamService,\n    private readonly questionService: QuestionService,\n    private readonly personalGroup: PersonalQuestionGroup,\n  ) {}\n\n  private async setExamAndPosition(\n    questionGroup: QuestionGroup,\n    examId: number,\n  ) {\n    questionGroup.exam = await this.examService.findOne(examId);\n\n    questionGroup.position =\n      (last(questionGroup.exam.groups)?.position ?? -1) + 1;\n  }\n\n  @Transactional()\n  async create(\n    createQuestionGroupDto: CreateQuestionGroupDto,\n  ): Promise {\n    const questionGroup = this.repository.create(createQuestionGroupDto);\n    if (createQuestionGroupDto.examId) {\n      await this.setExamAndPosition(\n        questionGroup,\n        createQuestionGroupDto.examId,\n      );\n    }\n    return this.repository.save(questionGroup);\n  }\n\n  findAll(): Promise {\n    return this.repository.find({ relations: questionGroupRelations});\n  }\n\n  async findOne(id: number): Promise {\n    const questionGroup = await this.repository.findOne({\n      where: { id },\n      relations: questionGroupRelations,\n    });\n\n    if (!questionGroup) {\n      throw new NotFoundException({ id }, questionGroupNotFound);\n    }\n\n    return questionGroup;\n  }\n\n  @Transactional()\n  async update(\n    id: number,\n    updateQuestionGroupDto: UpdateQuestionGroupDto,\n  ): Promise {\n    let questionGroup = await this.findOne(id);\n\n    if (\n      updateQuestionGroupDto.examId &&\n      updateQuestionGroupDto.examId !== questionGroup.examId\n    ) {\n      await this.setExamAndPosition(\n        questionGroup,\n        updateQuestionGroupDto.examId,\n      );\n    }\n\n    questionGroup = this.repository.merge(\n      questionGroup,\n      updateQuestionGroupDto,\n    );\n\n    return this.repository.save(questionGroup);\n  }\n\n  @Transactional()\n  async copy(\n    copyQuestionGroupDto: CopyQuestionGroupDto,\n  ): Promise {\n    const toCopy = await this.findOne(copyQuestionGroupDto.groupId);\n    const exam = await this.examService.findOne(copyQuestionGroupDto.examId);\n\n    const group = await this.repository.save(\n      this.repository.create({\n        ...toCopy,\n        questions: [],\n        exam,\n        id: undefined,\n      }),\n    );\n\n    group.questions = await this.questionService.copyToGroup(\n      group,\n      toCopy.questions,\n    );\n\n    return group;\n  }\n\n  @Transactional()\n  async reorder({\n    examId,\n    groupIds,\n  }: ReorderQuestionGroupDto): Promise {\n    const groups = await this.repository.find({\n      where: { examId, id: In(groupIds) },\n    });\n\n    const groupIdPositionMap: ReadonlyMap = new Map(\n      groupIds.map((id, position) => [id, position]),\n    );\n\n    return (\n      await Promise.all(\n        groups.map(async (group) => {\n          group.position = groupIdPositionMap.get(group.id) ?? 0;\n          await this.repository.update(group.id, { position: group.position });\n          return group;\n        }),\n      )\n    ).sort((a, b) => a.position - b.position);\n  }\n\n  async findPersonal({\n    examId,\n    user,\n  }: FindPersonalDto): Promise {\n    const exam = await this.examService.findOne(examId);\n\n    const result = await this.repository.find({\n      where: { exam, class: false },\n      relations: questionGroupRelations,\n    });\n\n    if (user instanceof Student || user instanceof Professor) {\n      const personalGroups = await this.personalGroup.getPersonal(user, exam);\n      result.push(...personalGroups);\n    }\n\n    return result;\n  }\n\n  @Transactional()\n  async remove(id: number): Promise {\n    const result: SoftDeleteResult = await this.repository.softDelete(id);\n\n    if (!result.raw.affectedRows) {\n      throw new NotFoundException({ id }, questionGroupNotFound);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuestionGroupTarget1621992475274.html":{"url":"classes/QuestionGroupTarget1621992475274.html","title":"class - QuestionGroupTarget1621992475274","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuestionGroupTarget1621992475274\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1621992475274-QuestionGroupTarget.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'QuestionGroupTarget1621992475274'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1621992475274-QuestionGroupTarget.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1621992475274-QuestionGroupTarget.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1621992475274-QuestionGroupTarget.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class QuestionGroupTarget1621992475274 implements MigrationInterface {\n  name = 'QuestionGroupTarget1621992475274';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      \"ALTER TABLE `question_group` ADD `target` enum ('Student', 'Professor') NULL\",\n    );\n    await queryRunner.query(\n      'DROP INDEX `IDX_31ef2b4d30675d0c15056b7f6e` ON `user`',\n    );\n    await queryRunner.query('ALTER TABLE `user` DROP COLUMN `type`');\n    await queryRunner.query(\n      \"ALTER TABLE `user` ADD `type` enum ('Professor', 'Student', 'User') NOT NULL\",\n    );\n    await queryRunner.query(\n      'CREATE INDEX `IX_question_group_target` ON `question_group` (`target`)',\n    );\n    await queryRunner.query(\n      'CREATE INDEX `IDX_31ef2b4d30675d0c15056b7f6e` ON `user` (`type`)',\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      'DROP INDEX `IDX_31ef2b4d30675d0c15056b7f6e` ON `user`',\n    );\n    await queryRunner.query(\n      'DROP INDEX `IX_question_group_target` ON `question_group`',\n    );\n    await queryRunner.query('ALTER TABLE `user` DROP COLUMN `type`');\n    await queryRunner.query(\n      'ALTER TABLE `user` ADD `type` varchar(255) NOT NULL',\n    );\n    await queryRunner.query(\n      'CREATE INDEX `IDX_31ef2b4d30675d0c15056b7f6e` ON `user` (`type`)',\n    );\n    await queryRunner.query(\n      'ALTER TABLE `question_group` DROP COLUMN `target`',\n    );\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuestionGroupUser.html":{"url":"interfaces/QuestionGroupUser.html","title":"interface - QuestionGroupUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QuestionGroupUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-group/interfaces/question-group-user.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QuestionGroupUser {\n  id: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuestionImage1620477869366.html":{"url":"classes/QuestionImage1620477869366.html","title":"class - QuestionImage1620477869366","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuestionImage1620477869366\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1620477869366-QuestionImage.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'QuestionImage1620477869366'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1620477869366-QuestionImage.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1620477869366-QuestionImage.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1620477869366-QuestionImage.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class QuestionImage1620477869366 implements MigrationInterface {\n    name = 'QuestionImage1620477869366'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `question` DROP FOREIGN KEY `FK_3b2789ae1c494ff1bf8dd4d4607`\");\n        await queryRunner.query(\"ALTER TABLE `question` CHANGE `image_url` `image_url` text NULL\");\n        await queryRunner.query(\"ALTER TABLE `question` CHANGE `image_alt` `image_alt` varchar(255) NULL\");\n        await queryRunner.query(\"ALTER TABLE `question` CHANGE `group_id` `group_id` int NULL\");\n        await queryRunner.query(\"ALTER TABLE `question` ADD CONSTRAINT `FK_3b2789ae1c494ff1bf8dd4d4607` FOREIGN KEY (`group_id`) REFERENCES `question_group`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `question` DROP FOREIGN KEY `FK_3b2789ae1c494ff1bf8dd4d4607`\");\n        await queryRunner.query(\"ALTER TABLE `question` CHANGE `group_id` `group_id` int NOT NULL\");\n        await queryRunner.query(\"ALTER TABLE `question` CHANGE `image_alt` `image_alt` varchar(255) NOT NULL DEFAULT ''\");\n        await queryRunner.query(\"ALTER TABLE `question` CHANGE `image_url` `image_url` text NOT NULL\");\n        await queryRunner.query(\"ALTER TABLE `question` ADD CONSTRAINT `FK_3b2789ae1c494ff1bf8dd4d4607` FOREIGN KEY (`group_id`) REFERENCES `question_group`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuestionPosition1620488935141.html":{"url":"classes/QuestionPosition1620488935141.html","title":"class - QuestionPosition1620488935141","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuestionPosition1620488935141\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1620488935141-QuestionPosition.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'QuestionPosition1620488935141'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1620488935141-QuestionPosition.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1620488935141-QuestionPosition.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1620488935141-QuestionPosition.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class QuestionPosition1620488935141 implements MigrationInterface {\n    name = 'QuestionPosition1620488935141'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `question` ADD `position` int NOT NULL DEFAULT '0'\");\n        await queryRunner.query(\"ALTER TABLE `question_group` ADD `position` int NOT NULL DEFAULT '0'\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `question_group` DROP COLUMN `position`\");\n        await queryRunner.query(\"ALTER TABLE `question` DROP COLUMN `position`\");\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuestionPositionIdx1620563708532.html":{"url":"classes/QuestionPositionIdx1620563708532.html","title":"class - QuestionPositionIdx1620563708532","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuestionPositionIdx1620563708532\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1620563708532-QuestionPositionIdx.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'QuestionPositionIdx1620563708532'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1620563708532-QuestionPositionIdx.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1620563708532-QuestionPositionIdx.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1620563708532-QuestionPositionIdx.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {MigrationInterface, QueryRunner} from \"typeorm\";\n\nexport class QuestionPositionIdx1620563708532 implements MigrationInterface {\n    name = 'QuestionPositionIdx1620563708532'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `question` DROP FOREIGN KEY `FK_3b2789ae1c494ff1bf8dd4d4607`\");\n        await queryRunner.query(\"ALTER TABLE `question` CHANGE `group_id` `group_id` int NOT NULL\");\n        await queryRunner.query(\"CREATE INDEX `IX_question_position` ON `question` (`position`)\");\n        await queryRunner.query(\"CREATE INDEX `IX_question_group_position` ON `question_group` (`position`)\");\n        await queryRunner.query(\"ALTER TABLE `question` ADD CONSTRAINT `FK_3b2789ae1c494ff1bf8dd4d4607` FOREIGN KEY (`group_id`) REFERENCES `question_group`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(\"ALTER TABLE `question` DROP FOREIGN KEY `FK_3b2789ae1c494ff1bf8dd4d4607`\");\n        await queryRunner.query(\"DROP INDEX `IX_question_group_position` ON `question_group`\");\n        await queryRunner.query(\"DROP INDEX `IX_question_position` ON `question`\");\n        await queryRunner.query(\"ALTER TABLE `question` CHANGE `group_id` `group_id` int NULL\");\n        await queryRunner.query(\"ALTER TABLE `question` ADD CONSTRAINT `FK_3b2789ae1c494ff1bf8dd4d4607` FOREIGN KEY (`group_id`) REFERENCES `question_group`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION\");\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuestionRepository.html":{"url":"classes/QuestionRepository.html","title":"class - QuestionRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuestionRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-group/repositories/question.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseRepository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository } from 'typeorm';\nimport { BaseRepository } from 'typeorm-transactional-cls-hooked';\nimport { Question } from '../entities/question.entity';\n\n@EntityRepository(Question)\nexport class QuestionRepository extends BaseRepository {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionService.html":{"url":"injectables/QuestionService.html","title":"injectable - QuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-group/services/question.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                copyToGroup\n                            \n                            \n                                    Async\n                                createQuestion\n                            \n                            \n                                    Async\n                                createQuestions\n                            \n                            \n                                find\n                            \n                            \n                                findByIds\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Private\n                                    Async\n                                getNextPosition\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                reorder\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: QuestionRepository, groupService: QuestionGroupService)\n                    \n                \n                        \n                            \n                                Defined in src/question-group/services/question.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        QuestionRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupService\n                                                  \n                                                        \n                                                                        QuestionGroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            copyToGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    copyToGroup(group: QuestionGroup, questions: Question[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/question-group/services/question.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                QuestionGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    questions\n                                    \n                                                Question[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createQuestion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createQuestion(createQuestionDto: CreateQuestionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/question-group/services/question.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createQuestionDto\n                                    \n                                                CreateQuestionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createQuestions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createQuestions(groupId: number, createQuestionsDto: CreateQuestionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/question-group/services/question.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groupId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createQuestionsDto\n                                    \n                                                CreateQuestionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(findDto: QuestionFindDto)\n                \n            \n\n\n            \n                \n                    Defined in src/question-group/services/question.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    findDto\n                                    \n                                                QuestionFindDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findByIds\n                        \n                        \n                    \n                \n            \n            \n                \nfindByIds(ids: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/question-group/services/question.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/question-group/services/question.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getNextPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNextPosition(groupId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/question-group/services/question.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groupId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/question-group/services/question.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            reorder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reorder(undefined: ReorderQuestionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/question-group/services/question.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ReorderQuestionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateDto: UpdateQuestionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/question-group/services/question.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDto\n                                    \n                                                UpdateQuestionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  forwardRef,\n  Inject,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { SoftDeleteResult } from 'src/core/interfaces/soft-delete-result.interface';\nimport { In } from 'typeorm';\nimport { Transactional } from 'typeorm-transactional-cls-hooked';\nimport { QuestionGroup } from '../entities/question-group.entity';\nimport { CreateQuestionDto } from '../dtos/create-question.dto';\nimport { QuestionFindDto } from '../dtos/question-find.dto';\nimport { ReorderQuestionDto } from '../dtos/reorder-question.dto';\nimport { UpdateQuestionDto } from '../dtos/update-question.dto';\nimport { Question } from '../entities/question.entity';\nimport { questionNotFound } from '../question.constants';\nimport { QuestionRepository } from '../repositories/question.repository';\nimport { QuestionGroupService } from './question-group.service';\nimport { last } from 'src/core/utils/last.util';\nimport { CreateQuestionsDto } from '../dtos/create-questions.dto';\n\n@Injectable()\nexport class QuestionService {\n  constructor(\n    @InjectRepository(QuestionRepository)\n    private readonly repository: QuestionRepository,\n    @Inject(forwardRef(() => QuestionGroupService))\n    private readonly groupService: QuestionGroupService,\n  ) {}\n\n  private async getNextPosition(groupId: number): Promise {\n    const { questions } = await this.groupService.findOne(groupId);\n\n    return (last(questions)?.position ?? -1) + 1;\n  }\n\n  @Transactional()\n  async createQuestion(\n    createQuestionDto: CreateQuestionDto,\n  ): Promise {\n    const question = this.repository.create({\n      ...createQuestionDto,\n      position: await this.getNextPosition(createQuestionDto.groupId),\n    });\n\n    return this.repository.save(question);\n  }\n\n  @Transactional()\n  async createQuestions(\n    groupId: number,\n    createQuestionsDto: CreateQuestionsDto,\n  ): Promise {\n    const questions = this.repository.create(\n      createQuestionsDto.questions.map((dto, position) =>\n        this.repository.create({ ...dto, position, groupId }),\n      ),\n    );\n\n    return this.repository.save(questions);\n  }\n\n  find(findDto: QuestionFindDto): Promise {\n    return this.repository.find({\n      where: (qb) => {\n        if (findDto.groupId) {\n          qb.where(`${qb.alias}.groupId = :groupId`, findDto);\n        }\n        return qb;\n      },\n    });\n  }\n\n  findByIds(ids: number[]): Promise {\n    return this.repository.findByIds(ids);\n  }\n\n  async findOne(id: number): Promise {\n    const question = await this.repository.findOne({ id });\n    if (!question) {\n      throw new NotFoundException({ id }, questionNotFound);\n    }\n\n    return question;\n  }\n\n  @Transactional()\n  async update(id: number, updateDto: UpdateQuestionDto): Promise {\n    let question = await this.findOne(id);\n\n    if (updateDto.groupId && question.groupId !== updateDto.groupId) {\n      question.position = await this.getNextPosition(updateDto.groupId);\n    }\n\n    question = this.repository.merge(question, updateDto);\n\n    return this.repository.save(question);\n  }\n\n  @Transactional()\n  async copyToGroup(\n    group: QuestionGroup,\n    questions: Question[],\n  ): Promise {\n    return this.repository.save(\n      questions.map((question) =>\n        this.repository.create({ ...question, group, id: undefined }),\n      ),\n    );\n  }\n\n  @Transactional()\n  async reorder({\n    groupId,\n    questionIds,\n  }: ReorderQuestionDto): Promise {\n    const questions = await this.repository.find({\n      where: { groupId, id: In(questionIds) },\n    });\n\n    const questionPositionMap: ReadonlyMap = new Map(\n      questionIds.map((id, position) => [id, position]),\n    );\n\n    return this.repository.save(\n      questions.map((question) => {\n        question.position = questionPositionMap.get(question.id) ?? 0;\n        return question;\n      }),\n    );\n  }\n\n  @Transactional()\n  async remove(id: number): Promise {\n    const result: SoftDeleteResult = await this.repository.softDelete({ id });\n    if (!result.raw.affectedRows) {\n      throw new NotFoundException({ id }, questionNotFound);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReorderQuestionDto.html":{"url":"classes/ReorderQuestionDto.html","title":"class - ReorderQuestionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReorderQuestionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-group/dtos/reorder-question.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                groupId\n                            \n                            \n                                questionIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsPositive()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/dtos/reorder-question.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionIds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsArray()@IsPositive({each: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/dtos/reorder-question.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsPositive } from \"class-validator\";\n\nexport class ReorderQuestionDto {\n  @IsPositive()\n  groupId: number;\n\n  @IsArray()\n  @IsPositive({each: true})\n  questionIds: number[];\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReorderQuestionGroupDto.html":{"url":"classes/ReorderQuestionGroupDto.html","title":"class - ReorderQuestionGroupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReorderQuestionGroupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-group/dtos/reorder-question-group.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                examId\n                            \n                            \n                                groupIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            examId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsPositive()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/dtos/reorder-question-group.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupIds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsArray()@IsPositive({each: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-group/dtos/reorder-question-group.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsPositive } from 'class-validator';\n\nexport class ReorderQuestionGroupDto {\n  @IsPositive()\n  examId: number;\n\n  @IsArray()\n  @IsPositive({ each: true })\n  groupIds: number[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SeedAuxiliary1624412129413.html":{"url":"classes/SeedAuxiliary1624412129413.html","title":"class - SeedAuxiliary1624412129413","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SeedAuxiliary1624412129413\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1624416663575-SeedAuxiliary1.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1624416663575-SeedAuxiliary1.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1624416663575-SeedAuxiliary1.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { addMonths, endOfMonth, startOfMonth } from 'date-fns';\nimport { MigrationInterface, QueryRunner } from 'typeorm';\nimport faker = require('faker');\nimport bcrypt = require('bcryptjs');\n\ninterface IEntity {\n  id: number;\n}\n\nconst defaultName = 'Gerado';\nconst student = {\n  cpf: '50172241065',\n  enrollment: '989898',\n};\n\nexport class SeedAuxiliary1624412129413 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      'INSERT INTO `period` (`name`, `started_at`, `ended_at`) VALUES (?, ?, ?)',\n      [\n        defaultName,\n        startOfMonth(new Date()),\n        endOfMonth(addMonths(new Date(), 5)),\n      ],\n    );\n    const [\n      period,\n    ]: IEntity[] = await queryRunner.query(\n      'SELECT `id` FROM `period` WHERE `name` = ?',\n      [defaultName],\n    );\n\n    await queryRunner.query(\n      'INSERT INTO `course` (`code`, `title`) VALUES (?, ?)',\n      [defaultName, faker.random.alphaNumeric(20)],\n    );\n    const [\n      course,\n    ]: IEntity[] = await queryRunner.query(\n      'SELECT `id` FROM `course` WHERE `code` = ?',\n      [defaultName],\n    );\n\n    await queryRunner.query(\n      'INSERT INTO `subject` (`code`, `title`, `course_id`) VALUES (?, ?, ?)',\n      [defaultName, faker.random.alpha({ count: 20, upcase: true }), course.id],\n    );\n    const [\n      subject,\n    ]: IEntity[] = await queryRunner.query(\n      'SELECT `id` FROM `subject` WHERE `code` = ?',\n      [defaultName],\n    );\n\n    await queryRunner.query(\n      'INSERT INTO `grade` (`subject_id`, `period_id`) VALUES (?, ?)',\n      [subject.id, period.id],\n    );\n    const [\n      grade,\n    ]: IEntity[] = await queryRunner.query(\n      'SELECT `id` FROM `grade` WHERE `subject_id` = ? AND `period_id` = ?',\n      [subject.id, period.id],\n    );\n\n    const salt = await bcrypt.genSalt();\n    const password = await bcrypt.hash(process.env.ADMIN_PASSWORD!, salt);\n\n    await queryRunner.query(\n      'INSERT INTO `auth` (`login`, `password`, `salt`) VALUES (?, ?, ?)',\n      [student.enrollment, password, salt],\n    );\n    await queryRunner.query(\n      'INSERT INTO `user` (`enrollment`, `cpf`, `type`, `role`) VALUES (?, ?, ?, ?)',\n      [student.enrollment, student.cpf, 'Student', 'manager'],\n    );\n    const [\n      user,\n    ]: IEntity[] = await queryRunner.query(\n      'SELECT `id` FROM `user` WHERE `enrollment` = ?',\n      [student.enrollment],\n    );\n\n    await queryRunner.query(\n      'INSERT INTO `student_grade` (`user_id`, `grade_id`) VALUES (?, ?)',\n      [user.id, grade.id],\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    const [\n      user,\n    ]: IEntity[] = await queryRunner.query(\n      'SELECT `id` FROM `user` WHERE `enrollment` = ?',\n      [student.enrollment],\n    );\n    await queryRunner.query('DELETE FROM `student_grade` WHERE `user_id` = ?', [\n      user.id,\n    ]);\n    await queryRunner.query('DELETE FROM `user` WHERE `enrollment` = ?', [\n      student.enrollment,\n    ]);\n    await queryRunner.query('DELETE FROM `auth` WHERE `login` = ?', [\n      student.enrollment,\n    ]);\n\n    const [\n      period,\n    ]: IEntity[] = await queryRunner.query(\n      'SELECT `id` FROM `period` WHERE `name` = ?',\n      [defaultName],\n    );\n    const [\n      course,\n    ]: IEntity[] = await queryRunner.query(\n      'SELECT `id` FROM `course` WHERE `code` = ?',\n      [defaultName],\n    );\n    const [\n      subject,\n    ]: IEntity[] = await queryRunner.query(\n      'SELECT `id` FROM `subject` WHERE `code` = ?',\n      [defaultName],\n    );\n    const [\n      grade,\n    ]: IEntity[] = await queryRunner.query(\n      'SELECT `id` FROM `grade` WHERE `subject_id` = ? AND `period_id` = ?',\n      [subject.id, period.id],\n    );\n\n    await queryRunner.query('DELETE FROM `subject` WHERE `id` = ?', [\n      subject.id,\n    ]);\n    await queryRunner.query('DELETE FROM `course` WHERE `id` = ?', [course.id]);\n    await queryRunner.query('DELETE FROM `grade` WHERE `id` = ?', [grade.id]);\n    await queryRunner.query('DELETE FROM `period` WHERE `id` = ?', [period.id]);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendAgreementEmailDto.html":{"url":"interfaces/SendAgreementEmailDto.html","title":"interface - SendAgreementEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SendAgreementEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/dtos/send-agreement-email.dto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        agreement\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        agreement\n                                    \n                                \n                                \n                                    \n                                        agreement:         ExamAgreement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExamAgreement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ExamAgreement } from 'src/exam/entities/exam-agreement.entity';\n\nexport interface SendAgreementEmailDto {\n  user: { email: string };\n  agreement: ExamAgreement;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SendEmailService.html":{"url":"injectables/SendEmailService.html","title":"injectable - SendEmailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SendEmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/services/send-email.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendAgreementEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService, templateService: TemplateService)\n                    \n                \n                        \n                            \n                                Defined in src/infra/services/send-email.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                        MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templateService\n                                                  \n                                                        \n                                                                        TemplateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendAgreementEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendAgreementEmail(dto: SendAgreementEmailDto)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/services/send-email.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                SendAgreementEmailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SendAgreementEmailDto } from '../dtos/send-agreement-email.dto';\nimport { MailerService } from './mailer.service';\nimport { TemplateService } from './template.service';\n\n@Injectable()\nexport class SendEmailService {\n  constructor(\n    private readonly mailerService: MailerService,\n    private readonly templateService: TemplateService,\n  ) {}\n\n  async sendAgreementEmail(dto: SendAgreementEmailDto): Promise {\n    const html = this.templateService.get('agreement', dto.agreement);\n    const text = this.templateService.get('agreement-text', dto.agreement);\n\n    process.nextTick(() =>\n      this.mailerService\n        .send({\n          html,\n          text,\n          subject: 'Seu código de sorte',\n          to: dto.user.email,\n        })\n        .catch(console.error),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendMailDto.html":{"url":"classes/SendMailDto.html","title":"class - SendMailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendMailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/dtos/send-mail.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                html\n                            \n                            \n                                subject\n                            \n                            \n                                text\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            html\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/infra/dtos/send-mail.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/infra/dtos/send-mail.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/infra/dtos/send-mail.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            to\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/infra/dtos/send-mail.dto.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SendMailDto {\n  html: string;\n  text: string;\n  to: string;\n  subject: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SoftDeleteResult.html":{"url":"interfaces/SoftDeleteResult.html","title":"interface - SoftDeleteResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SoftDeleteResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/interfaces/soft-delete-result.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        raw\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        raw\n                                    \n                                \n                                \n                                    \n                                        raw:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SoftDeleteResult {\n  raw: {\n    affectedRows: number;\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Student.html":{"url":"classes/Student.html","title":"class - Student","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Student\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auxiliary/entities/student.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        User\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                studentGrades\n                            \n                            \n                                cpf\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                enrollment\n                            \n                            \n                                examAgreements\n                            \n                            \n                                role\n                            \n                            \n                                type\n                            \n                            \n                                id\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    grades\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            studentGrades\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Promise\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany(undefined, {lazy: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auxiliary/entities/student.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cpf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', unique: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         User\n\n                                \n                            \n                        \n                            \n                                    Defined in         User:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', unique: true, nullable: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         User\n\n                                \n                            \n                        \n                            \n                                    Defined in         User:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enrollment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', unique: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         User\n\n                                \n                            \n                        \n                            \n                                    Defined in         User:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            examAgreements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ExamAgreement[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         User\n\n                                \n                            \n                        \n                            \n                                    Defined in         User:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'enum', default: undefined, enum: UserRole})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         User\n\n                                \n                            \n                        \n                            \n                                    Defined in         User:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'enum', enum: UserType})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         User\n\n                                \n                            \n                        \n                            \n                                    Defined in         User:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        grades\n                    \n                \n\n                \n                    \n                        getgrades()\n                    \n                \n                            \n                                \n                                    Defined in src/auxiliary/entities/student.entity.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ChildEntity, ManyToMany } from 'typeorm';\nimport { User } from '../../user/entities/user.entity';\nimport { Grade } from './grade.entity';\n\n@ChildEntity()\nexport class Student extends User {\n  @ManyToMany(() => Grade, { lazy: true })\n  studentGrades!: Promise;\n\n  get grades(): Promise {\n    return this.studentGrades;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StudentRepository.html":{"url":"classes/StudentRepository.html","title":"class - StudentRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StudentRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auxiliary/repositories/student.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseRepository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository } from 'typeorm';\nimport { BaseRepository } from 'typeorm-transactional-cls-hooked';\nimport { Student } from '../entities/student.entity';\n\n@EntityRepository(Student)\nexport class StudentRepository extends BaseRepository {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentService.html":{"url":"injectables/StudentService.html","title":"injectable - StudentService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StudentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auxiliary/services/student.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createStudent\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: StudentRepository)\n                    \n                \n                        \n                            \n                                Defined in src/auxiliary/services/student.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        StudentRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createStudent\n                        \n                        \n                    \n                \n            \n            \n                \ncreateStudent(createDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/auxiliary/services/student.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(userDto: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auxiliary/services/student.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserDto } from 'src/user/dtos/user.dto';\nimport { Transactional } from 'typeorm-transactional-cls-hooked';\n\nimport { CreateUserDto } from '../../user/dtos/create-user.dto';\nimport { Student } from '../entities/student.entity';\nimport { StudentRepository } from '../repositories/student.repository';\n\n@Injectable()\nexport class StudentService {\n  constructor(\n    @InjectRepository(StudentRepository)\n    private readonly repository: StudentRepository,\n  ) {}\n\n  @Transactional()\n  createStudent(createDto: CreateUserDto): Promise {\n    const student = this.repository.create(createDto);\n\n    return this.repository.save(student);\n  }\n\n  findOne(userDto: UserDto): Promise {\n    return this.repository.findOne({ ...userDto });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subject.html":{"url":"classes/Subject.html","title":"class - Subject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auxiliary/entities/subject.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        FFEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                course\n                            \n                            \n                                courseId\n                            \n                            \n                                grades\n                            \n                            \n                                title\n                            \n                            \n                                id\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auxiliary/entities/subject.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Course\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auxiliary/entities/subject.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auxiliary/entities/subject.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grades\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Grade[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auxiliary/entities/subject.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auxiliary/entities/subject.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, ManyToOne, OneToMany } from 'typeorm';\n\nimport { FFEntity } from '../../core/entities/ff.entity';\nimport { Course } from './course.entity';\nimport { Grade } from './grade.entity';\n\n@Entity('subject')\nexport class Subject extends FFEntity {\n  @Column({ type: 'varchar', unique: true })\n  code: string;\n\n  @Column({ type: 'varchar' })\n  title: string;\n\n  @Column({ type: 'int' })\n  courseId: number;\n\n  @ManyToOne(() => Course)\n  course: Course;\n\n  @OneToMany(() => Grade, (grade) => grade.subject)\n  grades: Grade[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SwaggerOptions.html":{"url":"interfaces/SwaggerOptions.html","title":"interface - SwaggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SwaggerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/interfaces/swagger.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        title\n                                \n                                \n                                        users\n                                \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                    \n                                \n                                \n                                    \n                                        users:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SwaggerOptions {\n  title: string;\n  description: string;\n  version: string;\n  users: Record;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TemplateService.html":{"url":"injectables/TemplateService.html","title":"injectable - TemplateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TemplateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/services/template.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                templateMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/infra/services/template.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(name: string, vars: T)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/services/template.service.ts:24\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    vars\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            templateMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReadonlyMap\n\n                        \n                    \n                        \n                            \n                                    Defined in src/infra/services/template.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { readdirSync, readFileSync } from 'fs';\nimport { render } from 'mustache';\nimport { basename, join } from 'path';\n\n@Injectable()\nexport class TemplateService {\n  private readonly templateMap: ReadonlyMap;\n\n  constructor() {\n    const basePath = join(__dirname, '..', '..', '..', 'views');\n    const extRe = /.+\\.mustache$/u;\n\n    this.templateMap = new Map(\n      readdirSync(basePath)\n        .filter((file) => file.match(extRe))\n        .map((file) => [\n          basename(file, '.mustache'),\n          readFileSync(join(basePath, file), 'utf-8'),\n        ]),\n    );\n  }\n\n  get(name: string, vars: T): string {\n    const template = this.templateMap.get(name);\n    if (!template) {\n      throw new InternalServerErrorException('Template not supported');\n    }\n\n    return render(template, vars);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimestampEntity.html":{"url":"classes/TimestampEntity.html","title":"class - TimestampEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimestampEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/entities/timestamp.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/core/entities/timestamp.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/core/entities/timestamp.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/core/entities/timestamp.entity.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  CreateDateColumn,\n  DeleteDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\nexport class TimestampEntity extends BaseEntity {\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAnswerDto.html":{"url":"classes/UpdateAnswerDto.html","title":"class - UpdateAnswerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAnswerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/answer/dto/update-answer.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAnswerDto } from './create-answer.dto';\n\nexport class UpdateAnswerDto extends PartialType(CreateAnswerDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateExamAgreementDto.html":{"url":"classes/UpdateExamAgreementDto.html","title":"class - UpdateExamAgreementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateExamAgreementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/dtos/update-exam-agreement.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                anonymous\n                            \n                            \n                                    Optional\n                                observation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            anonymous\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsBoolean()@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/dtos/update-exam-agreement.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            observation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/dtos/update-exam-agreement.dto.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsBoolean,\n  IsNotEmpty,\n  IsOptional,\n  IsPositive,\n  IsString,\n} from 'class-validator';\nimport { ExamUser } from '../interfaces/exam-user.interface';\n\nexport class UpdateExamAgreementQueryDto {\n  @IsPositive()\n  @Type(() => Number)\n  examId: number;\n\n  user: ExamUser;\n}\n\nexport class UpdateExamAgreementDto {\n  @IsOptional()\n  @IsString()\n  @IsNotEmpty()\n  observation?: string;\n\n  @IsOptional()\n  @IsBoolean()\n  @Type(() => Boolean)\n  anonymous?: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateExamAgreementQueryDto.html":{"url":"classes/UpdateExamAgreementQueryDto.html","title":"class - UpdateExamAgreementQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateExamAgreementQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/dtos/update-exam-agreement.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                examId\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            examId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsPositive()@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/exam/dtos/update-exam-agreement.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExamUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/exam/dtos/update-exam-agreement.dto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsBoolean,\n  IsNotEmpty,\n  IsOptional,\n  IsPositive,\n  IsString,\n} from 'class-validator';\nimport { ExamUser } from '../interfaces/exam-user.interface';\n\nexport class UpdateExamAgreementQueryDto {\n  @IsPositive()\n  @Type(() => Number)\n  examId: number;\n\n  user: ExamUser;\n}\n\nexport class UpdateExamAgreementDto {\n  @IsOptional()\n  @IsString()\n  @IsNotEmpty()\n  observation?: string;\n\n  @IsOptional()\n  @IsBoolean()\n  @Type(() => Boolean)\n  anonymous?: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateExamDto.html":{"url":"classes/UpdateExamDto.html","title":"class - UpdateExamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateExamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exam/dtos/update-exam.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateExamDto } from './create-exam.dto';\n\nexport class UpdateExamDto extends PartialType(CreateExamDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateQuestionDto.html":{"url":"classes/UpdateQuestionDto.html","title":"class - UpdateQuestionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateQuestionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-group/dtos/update-question.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateQuestionDto } from './create-question.dto';\n\nexport class UpdateQuestionDto extends PartialType(CreateQuestionDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateQuestionGroupDto.html":{"url":"classes/UpdateQuestionGroupDto.html","title":"class - UpdateQuestionGroupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateQuestionGroupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-group/dtos/update-question-group.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateQuestionGroupDto } from './create-question-group.dto';\n\nexport class UpdateQuestionGroupDto extends PartialType(CreateQuestionGroupDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UploadController.html":{"url":"controllers/UploadController.html","title":"controller - UploadController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UploadController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/controllers/upload.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                upload\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/infra/controllers/upload.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { JwtGuard } from 'src/auth/guards/jwt.guard';\nimport { UPLOAD_PATH } from '../infra.constants';\nimport { UploaderService } from '../services/uploader.service';\n\n@Controller('upload')\n@ApiTags('Upload')\n@UseGuards(JwtGuard)\n@ApiBearerAuth()\nexport class UploadController {\n  constructor(private readonly service: UploaderService) {}\n\n  @Post()\n  @UseInterceptors(FileInterceptor('file'))\n  async upload(@UploadedFile() file: Express.Multer.File) {\n    return this.service.upload(file, UPLOAD_PATH);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UploaderService.html":{"url":"classes/UploaderService.html","title":"class - UploaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infra/services/uploader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(fileDto: FileSendDto, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/infra/services/uploader.service.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileDto\n                                    \n                                                FileSendDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileSendDto } from '../dtos/file-send.dto';\n\nexport abstract class UploaderService {\n  abstract upload(fileDto: FileSendDto, path?: string): Promise;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        FFEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cpf\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                enrollment\n                            \n                            \n                                examAgreements\n                            \n                            \n                                role\n                            \n                            \n                                type\n                            \n                            \n                                id\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                            \n                                createdAt\n                            \n                            \n                                deletedAt\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cpf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', unique: true, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enrollment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'varchar', unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            examAgreements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ExamAgreement[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'enum', default: undefined, enum: UserRole})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'enum', enum: UserType})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/entities/user.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         FFEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         FFEntity:13\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TimestampEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         TimestampEntity:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ExamAgreement } from 'src/exam/entities/exam-agreement.entity';\nimport { Column, Entity, OneToMany, TableInheritance } from 'typeorm';\nimport { FFEntity } from '../../core/entities/ff.entity';\nimport { UserRole } from '../enum/user-role.enum';\nimport { UserType } from '../enum/user-type.enum';\n\n@Entity('user')\n@TableInheritance({ column: { type: 'enum', name: 'type', enum: UserType } })\nexport class User extends FFEntity {\n  @Column({ type: 'varchar', unique: true })\n  enrollment: string;\n\n  @Column({ type: 'varchar', unique: true })\n  cpf: string;\n\n  @Column({ type: 'varchar', unique: true, nullable: true })\n  email?: string;\n\n  @Column({ type: 'enum', enum: UserType })\n  type: UserType;\n\n  @Column({ type: 'enum', default: UserRole.REGULAR, enum: UserRole })\n  role: UserRole;\n\n  @OneToMany(() => ExamAgreement, (agreement) => agreement.user)\n  examAgreements: ExamAgreement[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/controllers/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                getUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \ncreateUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/user/controllers/user.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetUser(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(JwtGuard)\n                \n            \n\n            \n                \n                    Defined in src/user/controllers/user.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, UseGuards } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { JwtGuard } from '../../auth/guards/jwt.guard';\nimport { GetUser } from '../decoratos/get-user.decorator';\nimport { CreateUserDto } from '../dtos/create-user.dto';\nimport { User } from '../entities/user.entity';\nimport { UserService } from '../user.service';\n\n@Controller('user')\n@ApiTags('User')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post()\n  createUser(@Body() createUserDto: CreateUserDto) {\n    return this.userService.createUser(createUserDto);\n  }\n\n  @Get()\n  @UseGuards(JwtGuard)\n  getUser(@GetUser() user: User) {\n    return user;\n  }\n\n  // @Put()\n  // @UseGuards(JwtGuard)\n  // updateUser() {\n  //   return this.userService.updateUser();\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                enrollment\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enrollment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/dtos/user.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class UserDto {\n  @IsString()\n  @IsNotEmpty()\n  enrollment: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEmail1625013724392.html":{"url":"classes/UserEmail1625013724392.html","title":"class - UserEmail1625013724392","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEmail1625013724392\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1625013724393-UserEmail.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'UserEmail1625013724392'\n                        \n                    \n                        \n                            \n                                    Defined in src/database/migrations/1625013724393-UserEmail.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            down\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1625013724393-UserEmail.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            up\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/database/migrations/1625013724393-UserEmail.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class UserEmail1625013724392 implements MigrationInterface {\n  name = 'UserEmail1625013724392';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query('ALTER TABLE `user` ADD `email` varchar(255) NULL');\n    await queryRunner.query(\n      'ALTER TABLE `user` ADD UNIQUE INDEX `IDX_e12875dfb3b1d92d7d7c5377e2` (`email`)',\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      'ALTER TABLE `user` DROP INDEX `IDX_e12875dfb3b1d92d7d7c5377e2`',\n    );\n    await queryRunner.query('ALTER TABLE `user` DROP COLUMN `email`');\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuxiliaryModule } from 'src/auxiliary/auxiliary.module';\n\nimport { AuthModule } from '../auth/auth.module';\nimport { UserController } from './controllers/user.controller';\nimport { UserRepository } from './repositories/user.repository';\nimport { UserService } from './user.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserRepository]),\n    forwardRef(() => AuthModule),\n    forwardRef(() => AuxiliaryModule),\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepository.html":{"url":"classes/UserRepository.html","title":"class - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/repositories/user.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseRepository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository } from 'typeorm';\nimport { BaseRepository } from 'typeorm-transactional-cls-hooked';\nimport { User } from '../entities/user.entity';\n\n@EntityRepository(User)\nexport class UserRepository extends BaseRepository {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserResult.html":{"url":"interfaces/UserResult.html","title":"interface - UserResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/user-specialized-result.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         UserType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserType } from '../enum/user-type.enum';\n\nexport interface UserResult {\n  readonly type: UserType;\n  readonly id: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Private\n                                    Async\n                                createUserByType\n                            \n                            \n                                    Async\n                                findSpecializedUser\n                            \n                            \n                                findUser\n                            \n                            \n                                    Async\n                                mustFindSpecializedUser\n                            \n                            \n                                    Async\n                                mustFindUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository, authService: AuthService, studentService: StudentService, professorService: ProfessorService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studentService\n                                                  \n                                                        \n                                                                        StudentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        professorService\n                                                  \n                                                        \n                                                                        ProfessorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Transactional()\n                \n            \n\n            \n                \n                    Defined in src/user/user.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            createUserByType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserByType(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findSpecializedUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findSpecializedUser(userDto: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findUser\n                        \n                        \n                    \n                \n            \n            \n                \nfindUser(userDto: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            mustFindSpecializedUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mustFindSpecializedUser(userDto: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            mustFindUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mustFindUser(userDto: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  UnauthorizedException,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { AuthService } from 'src/auth/auth.service';\nimport { ProfessorService } from 'src/auxiliary/services/professor.service';\nimport { StudentService } from 'src/auxiliary/services/student.service';\nimport {\n  runOnTransactionComplete,\n  Transactional,\n} from 'typeorm-transactional-cls-hooked';\n\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { UserDto } from './dtos/user.dto';\nimport { User } from './entities/user.entity';\nimport { UserType } from './enum/user-type.enum';\nimport { UserResult } from './interfaces/user-specialized-result.interface';\nimport { UserRepository } from './repositories/user.repository';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(UserRepository)\n    private readonly userRepository: UserRepository,\n    private readonly authService: AuthService,\n    private readonly studentService: StudentService,\n    private readonly professorService: ProfessorService,\n  ) {}\n\n  @Transactional()\n  async createUser(createUserDto: CreateUserDto): Promise {\n    const user = await this.createUserByType(createUserDto);\n    await this.authService.createAuth({\n      login: createUserDto.enrollment,\n      password: createUserDto.password,\n    });\n    runOnTransactionComplete((e) => {\n      e && console.error(e);\n      console.log('create auth transaction completed');\n    });\n    return user;\n  }\n\n  private async createUserByType(createUserDto: CreateUserDto): Promise {\n    switch (createUserDto.type) {\n      case UserType.PROFESSOR:\n        return this.professorService.createStudent(createUserDto);\n      case UserType.STUDENT:\n        return this.studentService.createStudent(createUserDto);\n      default:\n        throw new UnprocessableEntityException();\n    }\n  }\n\n  findUser(userDto: UserDto): Promise {\n    return this.userRepository.findOne({ ...userDto });\n  }\n\n  async mustFindUser(userDto: UserDto): Promise {\n    const user = await this.findUser(userDto);\n    if (!user) {\n      throw new UnauthorizedException(userDto);\n    }\n    return user;\n  }\n\n  async findSpecializedUser(userDto: UserDto): Promise {\n    const partialUser:\n      | UserResult\n      | undefined = await this.userRepository.findOne({\n      select: ['type', 'id'],\n      where: { ...userDto },\n    });\n\n    if (!partialUser) {\n      throw new UnauthorizedException(userDto);\n    }\n\n    let user: User | undefined;\n\n    switch (partialUser.type) {\n      case UserType.PROFESSOR:\n        user = await this.professorService.findOne(userDto);\n        break;\n      case UserType.STUDENT:\n        user = await this.studentService.findOne(userDto);\n        break;\n      default:\n        user = await this.userRepository.findOne({ ...userDto });\n    }\n\n    return user!;\n  }\n\n  async mustFindSpecializedUser(userDto: UserDto): Promise {\n    const user = await this.findSpecializedUser(userDto);\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/answer/answer.controller.ts\n            \n            controller\n            AnswerController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/answer/answer.service.ts\n            \n            injectable\n            AnswerService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/answer/dto/create-answer.dto.ts\n            \n            class\n            CreateAnswerDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/answer/dto/update-answer.dto.ts\n            \n            class\n            UpdateAnswerDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/answer/entities/answer-grade.entity.ts\n            \n            class\n            AnswerGrade\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/answer/entities/answer.entity.ts\n            \n            class\n            Answer\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/answer/interfaces/batch-user.interface.ts\n            \n            interface\n            BatchUser\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/answer/repositories/answer-grade.repository.ts\n            \n            class\n            AnswerGradeRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/answer/repositories/answer.repository.ts\n            \n            class\n            AnswerRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.constants.ts\n            \n            variable\n            PASSWORD_MAX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.constants.ts\n            \n            variable\n            PASSWORD_MIN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/casl/factories/casl-ability.factory.ts\n            \n            injectable\n            CaslAbilityFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/controllers/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth.dto.ts\n            \n            class\n            AuthDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dtos/create-auth.dto.ts\n            \n            class\n            CreateAuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dtos/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/entities/auth.entity.ts\n            \n            class\n            Auth\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt.guard.ts\n            \n            injectable\n            JwtGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/interfaces/jwt-payload.interface.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/repositories/auth.repository.ts\n            \n            class\n            AuthRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auxiliary/entities/course.entity.ts\n            \n            class\n            Course\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auxiliary/entities/grade.entity.ts\n            \n            class\n            Grade\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/auxiliary/entities/period.entity.ts\n            \n            class\n            Period\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auxiliary/entities/professor.entity.ts\n            \n            class\n            Professor\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/auxiliary/entities/student.entity.ts\n            \n            class\n            Student\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/auxiliary/entities/subject.entity.ts\n            \n            class\n            Subject\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/auxiliary/repositories/grade.repository.ts\n            \n            class\n            GradeRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auxiliary/repositories/period.repository.ts\n            \n            class\n            PeriodRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auxiliary/repositories/professor.repository.ts\n            \n            class\n            ProfessorRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auxiliary/repositories/student.repository.ts\n            \n            class\n            StudentRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auxiliary/services/grade.service.ts\n            \n            injectable\n            GradeService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auxiliary/services/period.service.ts\n            \n            injectable\n            PeriodService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auxiliary/services/professor.service.ts\n            \n            injectable\n            ProfessorService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auxiliary/services/student.service.ts\n            \n            injectable\n            StudentService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/cors.config.ts\n            \n            function\n            origin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/cors.config.ts\n            \n            variable\n            allowedOrigins\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/cors.config.ts\n            \n            variable\n            corsConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/cors.config.ts\n            \n            variable\n            corsConfigKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/cors.config.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/database.config.ts\n            \n            variable\n            databaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/database.config.ts\n            \n            variable\n            databaseConfigKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/firebase.config.ts\n            \n            variable\n            firebaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/index.ts\n            \n            variable\n            configs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/interfaces/swagger.interface.ts\n            \n            interface\n            SwaggerOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/config/jwt.config.ts\n            \n            variable\n            jwtConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/jwt.config.ts\n            \n            variable\n            jwtConfigKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/nodemailer.config.ts\n            \n            variable\n            nodemailerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/rate-limit.config.ts\n            \n            variable\n            rateLimitConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/rate-limit.config.ts\n            \n            variable\n            rateLimitConfigKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/sentry.config.ts\n            \n            variable\n            sentryConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/swagger.config.ts\n            \n            variable\n            swaggerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/swagger.config.ts\n            \n            variable\n            swaggerConfigKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/controllers/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/core.constants.ts\n            \n            variable\n            enrollmentLength\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/decorators/is-enrollment.decorator.ts\n            \n            function\n            IsEnrollment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/entities/ff.entity.ts\n            \n            class\n            FFEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/entities/timestamp.entity.ts\n            \n            class\n            TimestampEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/filters/http-exception.filter.ts\n            \n            interface\n            IClassValidatorException\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/filters/http-exception.filter.ts\n            \n            interface\n            IException\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/core/interceptors/payload.interceptor.ts\n            \n            injectable\n            PayloadInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/interfaces/soft-delete-result.interface.ts\n            \n            interface\n            SoftDeleteResult\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/utils/last.util.ts\n            \n            function\n            last\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/1619445806509-Auth.ts\n            \n            class\n            Auth1619445806509\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1620179231630-QuestionGroup.ts\n            \n            class\n            QuestionGroup1620179231630\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1620299822480-AdminUser.ts\n            \n            class\n            AdminUser1620299822480\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/migrations/1620299822480-AdminUser.ts\n            \n            variable\n            cpf\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/1620299822480-AdminUser.ts\n            \n            variable\n            enrollment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/1620477175799-Auxiliary.ts\n            \n            class\n            Auxiliary1620477175799\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1620477869366-QuestionImage.ts\n            \n            class\n            QuestionImage1620477869366\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1620478273991-Exam.ts\n            \n            class\n            Exam1620478273991\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1620488935141-QuestionPosition.ts\n            \n            class\n            QuestionPosition1620488935141\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1620563708532-QuestionPositionIdx.ts\n            \n            class\n            QuestionPositionIdx1620563708532\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1621036457247-ExamTitle.ts\n            \n            class\n            ExamTitle1621036457247\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1621992475274-QuestionGroupTarget.ts\n            \n            class\n            QuestionGroupTarget1621992475274\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1622326106015-ExamTarget.ts\n            \n            class\n            ExamTarget1622326106015\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1622326106015-ExamTarget.ts\n            \n            variable\n            targets\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/1622332886234-ExamAgreement.ts\n            \n            class\n            ExamAgreement1622332886234\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1622334780336-ExamAgreementAnonymousDefault.ts\n            \n            class\n            ExamAgreementAnonymousDefault1622334780336\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1622378888497-ExamTargetAdd.ts\n            \n            class\n            ExamTargetAdd1622378888497\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1622378888497-ExamTargetAdd.ts\n            \n            variable\n            addTargets\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/1622417032753-ExamAgreementObservation.ts\n            \n            class\n            ExamAgreementObservation1622417032753\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1622421768424-Answer.ts\n            \n            class\n            Answer1622421768424\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1624416663574-Auxiliary.ts\n            \n            class\n            Auxiliary1624416663574\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1624416663575-SeedAuxiliary1.ts\n            \n            class\n            SeedAuxiliary1624412129413\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/migrations/1624416663575-SeedAuxiliary1.ts\n            \n            interface\n            IEntity\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/database/migrations/1624416663575-SeedAuxiliary1.ts\n            \n            variable\n            defaultName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/1624416663575-SeedAuxiliary1.ts\n            \n            variable\n            student\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/1624547816204-PeriodIndex.ts\n            \n            class\n            PeriodIndex1624547816204\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1624560625346-GradeIndex.ts\n            \n            class\n            GradeIndex1624560625346\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1624750140569-AnswerScoreCheck.ts\n            \n            class\n            AnswerScoreCheck1624750140568\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1624883202214-QuestionGroupGradeRemove.ts\n            \n            class\n            QuestionGroupGradeRemove1624883202213\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1625001091463-ExamAgreementUniqueCode.ts\n            \n            class\n            ExamAgreementUniqueCode1625001091462\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1625001565002-GracefulUniqueCodeOnExamAgreement.ts\n            \n            class\n            GracefulUniqueCodeOnExamAgreement1625001565001\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/migrations/1625002603969-ExamAgreementUniqueCodeSendedAt.ts\n            \n            class\n            ExamAgreementUniqueCodeSendedAt1625002603968\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/migrations/1625013724393-UserEmail.ts\n            \n            class\n            UserEmail1625013724392\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/exam/controllers/exam-agreement.controller.ts\n            \n            controller\n            ExamAgreementController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/exam/controllers/exam-target.controller.ts\n            \n            controller\n            ExamTargetController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/exam/controllers/exam.controller.ts\n            \n            controller\n            ExamController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/exam/dtos/create-exam-agreement.dto.ts\n            \n            class\n            CreateExamAgreementDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exam/dtos/create-exam.dto.ts\n            \n            class\n            CreateExamDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/exam/dtos/exam-agreement.dto.ts\n            \n            class\n            ExamAgreementDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/exam/dtos/exam-target-manager.dto.ts\n            \n            interface\n            ExamTargetManagerDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exam/dtos/find-exam-by-user.dto.ts\n            \n            interface\n            FindExamByUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/exam/dtos/update-exam-agreement.dto.ts\n            \n            class\n            UpdateExamAgreementDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/exam/dtos/update-exam-agreement.dto.ts\n            \n            class\n            UpdateExamAgreementQueryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/exam/dtos/update-exam.dto.ts\n            \n            class\n            UpdateExamDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exam/entities/exam-agreement.entity.ts\n            \n            class\n            ExamAgreement\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/exam/entities/exam-target.entity.ts\n            \n            class\n            ExamTarget\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/exam/entities/exam.entity.ts\n            \n            class\n            Exam\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/exam/exam.constants.ts\n            \n            variable\n            EXAM_NOT_FOUND\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exam/factories/exam-target-node.factory.ts\n            \n            injectable\n            ExamTargetNodeFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exam/factories/exam-target-node.factory.ts\n            \n            interface\n            ExamTargetNodeSchema\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/exam/interfaces/exam-agreement-user.interface.ts\n            \n            interface\n            ExamAgreementUser\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/exam/interfaces/exam-user.interface.ts\n            \n            interface\n            ExamUser\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/exam/models/exam-personal-result.model.ts\n            \n            class\n            ExamPersonalResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/exam/models/exam-target-node.model.ts\n            \n            class\n            ExamTargetNode\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/exam/providers/exam-target-tree.provider.ts\n            \n            injectable\n            ExamTargetTree\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/exam/repositories/exam-agreement.repository.ts\n            \n            class\n            ExamAgreementRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exam/repositories/exam-target.repository.ts\n            \n            class\n            ExamTargetRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exam/repositories/exam.repository.ts\n            \n            class\n            ExamRepository\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/exam/services/exam-agreement.service.ts\n            \n            injectable\n            ExamAgreementService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/exam/services/exam-target.service.ts\n            \n            injectable\n            ExamTargetService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/exam/services/exam.service.ts\n            \n            injectable\n            ExamService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/exportation/exportation.controller.ts\n            \n            controller\n            ExportationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exportation/exportation.repository.ts\n            \n            injectable\n            ExportationRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/exportation/exportation.service.ts\n            \n            injectable\n            ExportationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/exportation/interfaces/csv-line-row.interface.ts\n            \n            interface\n            CsvLineRow\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/exportation/interfaces/csv-line.interface.ts\n            \n            interface\n            CsvLine\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/exportation/maps/user-type.map.ts\n            \n            variable\n            userTypeMap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/firebase/dtos/firebase-storage-upload.dto.ts\n            \n            interface\n            FirebaseStorageUploadDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/firebase/firebase-admin/firebase-admin.constants.ts\n            \n            variable\n            FIREBASE_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/firebase/firebase-admin/providers/firebase-admin.provider.ts\n            \n            injectable\n            FirebaseAdmin\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/firebase/firebase.constants.ts\n            \n            variable\n            FIREBASE_ADMIN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/firebase/interfaces/firebase-async-module-options.interface.ts\n            \n            interface\n            FirebaseAsyncModuleOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/firebase/interfaces/firebase-async-module-options.interface.ts\n            \n            interface\n            FirebaseModuleOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/firebase/interfaces/firebase-auth-decoded-token.interface.ts\n            \n            interface\n            FirebaseAuthDecodedToken\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/firebase/services/firebase-auth.service.ts\n            \n            injectable\n            FirebaseAuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/firebase/services/firebase-cloud-messaging.service.ts\n            \n            injectable\n            FirebaseCloudMessagingService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/firebase/services/firebase-firestore.service.ts\n            \n            injectable\n            FirebaseFirestoreService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/firebase/services/firebase-storage.service.ts\n            \n            injectable\n            FirebaseStorageService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/infra/controllers/upload.controller.ts\n            \n            controller\n            UploadController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infra/dtos/file-send.dto.ts\n            \n            interface\n            FileSendDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/infra/dtos/send-agreement-email.dto.ts\n            \n            interface\n            SendAgreementEmailDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/infra/dtos/send-mail.dto.ts\n            \n            class\n            SendMailDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/infra/infra.constants.ts\n            \n            variable\n            NODEMAILER_TRANSPORTER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infra/infra.constants.ts\n            \n            variable\n            UPLOAD_PATH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infra/services/firebase-uploader.service.ts\n            \n            injectable\n            FirebaseUploader\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/infra/services/mailer.service.ts\n            \n            class\n            MailerService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infra/services/nodemailer.service.ts\n            \n            injectable\n            NodeMailerService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/infra/services/send-email.service.ts\n            \n            injectable\n            SendEmailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/infra/services/template.service.ts\n            \n            injectable\n            TemplateService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/infra/services/uploader.service.ts\n            \n            class\n            UploaderService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/logger/logger.service.ts\n            \n            injectable\n            CustomLogger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            applyGlobals\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            applyPerfLayer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            applySecurityLayer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            buildSwaggerDoc\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            sentryInit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            DEFAULT_PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/question-group/controllers/question-group.controller.ts\n            \n            controller\n            QuestionGroupController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/question-group/controllers/question.controller.ts\n            \n            controller\n            QuestionController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/question-group/dtos/copy-question-group.dto.ts\n            \n            class\n            CopyQuestionGroupDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/question-group/dtos/create-question-group.dto.ts\n            \n            class\n            CreateQuestionGroupDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/question-group/dtos/create-question.dto.ts\n            \n            class\n            CreateQuestionDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/question-group/dtos/create-questions.dto.ts\n            \n            class\n            CreateQuestion\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/question-group/dtos/create-questions.dto.ts\n            \n            class\n            CreateQuestionsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/question-group/dtos/find-personal.dto.ts\n            \n            class\n            FindPersonalDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/question-group/dtos/question-find.dto.ts\n            \n            class\n            QuestionFindDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/question-group/dtos/question-group-grade.dto.ts\n            \n            class\n            QuestionGroupGrade\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/question-group/dtos/reorder-question-group.dto.ts\n            \n            class\n            ReorderQuestionGroupDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/question-group/dtos/reorder-question.dto.ts\n            \n            class\n            ReorderQuestionDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/question-group/dtos/update-question-group.dto.ts\n            \n            class\n            UpdateQuestionGroupDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/question-group/dtos/update-question.dto.ts\n            \n            class\n            UpdateQuestionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/question-group/entities/question-group.entity.ts\n            \n            class\n            QuestionGroup\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/question-group/entities/question.entity.ts\n            \n            class\n            Question\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/question-group/interfaces/question-group-user.interface.ts\n            \n            interface\n            QuestionGroupUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/question-group/providers/personal-group.provider.ts\n            \n            injectable\n            PersonalQuestionGroup\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/question-group/question-group.constants.ts\n            \n            variable\n            questionGroupNotFound\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/question-group/question.constants.ts\n            \n            variable\n            questionGroupRelations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/question-group/question.constants.ts\n            \n            variable\n            questionNotFound\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/question-group/repositories/question-group.repository.ts\n            \n            class\n            QuestionGroupRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/question-group/repositories/question.repository.ts\n            \n            class\n            QuestionRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/question-group/services/question-group.service.ts\n            \n            injectable\n            QuestionGroupService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/question-group/services/question.service.ts\n            \n            injectable\n            QuestionService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/user/controllers/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/decoratos/get-user.decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/dtos/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/user/helpers/create-user.helper.ts\n            \n            function\n            createUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/interfaces/user-specialized-result.interface.ts\n            \n            interface\n            UserResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/repositories/user.repository.ts\n            \n            class\n            UserRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @casl/ability : ^5.2.2\n        \n            @nestjs/common : ^7.6.13\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.13\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.13\n        \n            @nestjs/swagger : ^4.7.15\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            @sentry/node : ^6.5.1\n        \n            @sentry/tracing : ^6.5.1\n        \n            bcryptjs : ^2.4.3\n        \n            brazilian-class-validator : ^0.1.6\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            compression : ^1.7.4\n        \n            date-fns : ^2.22.1\n        \n            express-basic-auth : ^1.2.0\n        \n            express-rate-limit : ^5.2.6\n        \n            faker : ^5.5.3\n        \n            firebase-admin : ^9.7.0\n        \n            helmet : ^4.4.1\n        \n            lodash : ^4.17.21\n        \n            morgan : ^1.10.0\n        \n            mustache : ^4.2.0\n        \n            mysql2 : ^2.2.5\n        \n            nodemailer : ^6.6.2\n        \n            objects-to-csv : ^1.3.6\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            swagger-ui-express : ^4.1.6\n        \n            typeorm : ^0.2.31\n        \n            typeorm-naming-strategies : ^2.0.0\n        \n            typeorm-transactional-cls-hooked : ^0.1.20\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnswerType   (src/.../answer-type.enum.ts)\n                        \n                        \n                            CaslAction   (src/.../casl-action.enum.ts)\n                        \n                        \n                            ExamAgreementStatus   (src/.../exam-agreement-status.enum.ts)\n                        \n                        \n                            ExamStatus   (src/.../exam-status.enum.ts)\n                        \n                        \n                            ExamTargetType   (src/.../exam-target-type.enum.ts)\n                        \n                        \n                            ExportationType   (src/.../exportation-type.enum.ts)\n                        \n                        \n                            UserRole   (src/.../user-role.enum.ts)\n                        \n                        \n                            UserType   (src/.../user-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/answer/enums/answer-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AnswerType\n                    \n                \n                        \n                            \n                                 ANSWER\n                            \n                        \n                        \n                            \n                                Value : Answer\n                            \n                        \n                        \n                            \n                                 ANSWER_GRADE\n                            \n                        \n                        \n                            \n                                Value : AnswerGrade\n                            \n                        \n            \n        \n\n    src/auth/casl/enums/casl-action.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CaslAction\n                    \n                \n                        \n                            \n                                 MANAGE\n                            \n                        \n                        \n                            \n                                Value : manage\n                            \n                        \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : create\n                            \n                        \n                        \n                            \n                                 READ\n                            \n                        \n                        \n                            \n                                Value : read\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                Value : update\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : delete\n                            \n                        \n            \n        \n\n    src/exam/enums/exam-agreement-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ExamAgreementStatus\n                    \n                \n                        \n                            \n                                 STARTED\n                            \n                        \n                        \n                            \n                                Value : started\n                            \n                        \n                        \n                            \n                                 FINISHED\n                            \n                        \n                        \n                            \n                                Value : finished\n                            \n                        \n            \n        \n\n    src/exam/enums/exam-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ExamStatus\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : active\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : inactive\n                            \n                        \n            \n        \n\n    src/exam/enums/exam-target-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ExamTargetType\n                    \n                \n                        \n                            \n                                 STUDENT\n                            \n                        \n                        \n                            \n                                Value : Student\n                            \n                        \n                        \n                            \n                                 PROFESSOR\n                            \n                        \n                        \n                            \n                                Value : Professor\n                            \n                        \n                        \n                            \n                                 COURSE\n                            \n                        \n                        \n                            \n                                Value : Course\n                            \n                        \n                        \n                            \n                                 GRADE\n                            \n                        \n                        \n                            \n                                Value : Grade\n                            \n                        \n            \n        \n\n    src/exportation/enums/exportation-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ExportationType\n                    \n                \n                        \n                            \n                                 AVALIACAO\n                            \n                        \n                        \n                            \n                                Value : Avaliacao\n                            \n                        \n                        \n                            \n                                 GRUPO\n                            \n                        \n                        \n                            \n                                Value : Grupo\n                            \n                        \n                        \n                            \n                                 PESSOAL\n                            \n                        \n                        \n                            \n                                Value : GrupoPessoal\n                            \n                        \n            \n        \n\n    src/user/enum/user-role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 MANAGER\n                            \n                        \n                        \n                            \n                                Value : manager\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 REGULAR\n                            \n                        \n                        \n                            \n                                Value : regular\n                            \n                        \n            \n        \n\n    src/user/enum/user-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserType\n                    \n                \n                        \n                            \n                                 PROFESSOR\n                            \n                        \n                        \n                            \n                                Value : Professor\n                            \n                        \n                        \n                            \n                                 STUDENT\n                            \n                        \n                        \n                            \n                                Value : Student\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : User\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            applyGlobals   (src/.../main.ts)\n                        \n                        \n                            applyPerfLayer   (src/.../main.ts)\n                        \n                        \n                            applySecurityLayer   (src/.../main.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            buildSwaggerDoc   (src/.../main.ts)\n                        \n                        \n                            createUser   (src/.../create-user.helper.ts)\n                        \n                        \n                            IsEnrollment   (src/.../is-enrollment.decorator.ts)\n                        \n                        \n                            last   (src/.../last.util.ts)\n                        \n                        \n                            origin   (src/.../cors.config.ts)\n                        \n                        \n                            sentryInit   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            applyGlobals\n                        \n                        \n                    \n                \n            \n            \n                \napplyGlobals(app, config)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyPerfLayer\n                        \n                        \n                    \n                \n            \n            \n                \napplyPerfLayer(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applySecurityLayer\n                        \n                        \n                    \n                \n            \n            \n                \napplySecurityLayer(app, config)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildSwaggerDoc\n                        \n                        \n                    \n                \n            \n            \n                \nbuildSwaggerDoc(app, config)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sentryInit\n                        \n                        \n                    \n                \n            \n            \n                \nsentryInit(config)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/user/helpers/create-user.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \ncreateUser(createUserDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/core/decorators/is-enrollment.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            IsEnrollment\n                        \n                        \n                    \n                \n            \n            \n                \nIsEnrollment()\n                \n            \n\n\n\n\n        \n    \n    src/core/utils/last.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            last\n                        \n                        \n                    \n                \n            \n            \n                \nlast(arr)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arr\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/config/cors.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            origin\n                        \n                        \n                    \n                \n            \n            \n                \norigin(origin, callback)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    origin\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFast Form API\nAPI para suprir a lógica de negócio do sistema Fast Form (FF)\nInstalação\nPara rodar a API localmente (em development mode) é necessário esses programas no seu computador:\n\ndocker\ndocker-compose\n\n# fullfil all needed environment variables copying .env.example to .env\n$ cp .env.example .env\n# initialize api service and its dependencies using following command\n$ sudo docker-compose up --build\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AnswerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuxiliaryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CaslModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExamModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExportationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FirebaseAdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FirebaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfraModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuestionGroupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnswerModule\n\n\n\ncluster_AnswerModule_imports\n\n\n\ncluster_AnswerModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuxiliaryModule\n\n\n\ncluster_AuxiliaryModule_exports\n\n\n\ncluster_AuxiliaryModule_providers\n\n\n\ncluster_CaslModule\n\n\n\ncluster_CaslModule_exports\n\n\n\ncluster_CaslModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_ExamModule\n\n\n\ncluster_ExamModule_exports\n\n\n\ncluster_ExamModule_providers\n\n\n\ncluster_ExportationModule\n\n\n\ncluster_ExportationModule_exports\n\n\n\ncluster_ExportationModule_providers\n\n\n\ncluster_FirebaseAdminModule\n\n\n\ncluster_FirebaseAdminModule_exports\n\n\n\ncluster_FirebaseAdminModule_providers\n\n\n\ncluster_FirebaseModule\n\n\n\ncluster_FirebaseModule_exports\n\n\n\ncluster_FirebaseModule_providers\n\n\n\ncluster_InfraModule\n\n\n\ncluster_InfraModule_exports\n\n\n\ncluster_InfraModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_QuestionGroupModule\n\n\n\ncluster_QuestionGroupModule_exports\n\n\n\ncluster_QuestionGroupModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nExamModule\n\nExamModule\n\n\n\nQuestionGroupModule\n\nQuestionGroupModule\n\nQuestionGroupModule -->\n\nExamModule->QuestionGroupModule\n\n\n\n\n\nAnswerModule\n\nAnswerModule\n\nAnswerModule -->\n\nExamModule->AnswerModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nExamModule->AppModule\n\n\n\n\n\nExamAgreementService \n\nExamAgreementService \n\nExamAgreementService  -->\n\nExamModule->ExamAgreementService \n\n\n\n\n\nExamService \n\nExamService \n\nExamService  -->\n\nExamModule->ExamService \n\n\n\nAnswerModule -->\n\nQuestionGroupModule->AnswerModule\n\n\n\nAppModule -->\n\nQuestionGroupModule->AppModule\n\n\n\n\n\nQuestionService \n\nQuestionService \n\nQuestionService  -->\n\nQuestionGroupModule->QuestionService \n\n\n\nAppModule -->\n\nAnswerModule->AppModule\n\n\n\n\n\nAnswerService\n\nAnswerService\n\nAnswerModule -->\n\nAnswerService->AnswerModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCaslModule \n\nCaslModule \n\nCaslModule  -->\n\nAuthModule->CaslModule \n\n\n\n\n\nJwtGuard \n\nJwtGuard \n\nJwtGuard  -->\n\nAuthModule->JwtGuard \n\n\n\n\n\nAuxiliaryModule\n\nAuxiliaryModule\n\nExamModule -->\n\nAuxiliaryModule->ExamModule\n\n\n\nQuestionGroupModule -->\n\nAuxiliaryModule->QuestionGroupModule\n\n\n\nAppModule -->\n\nAuxiliaryModule->AppModule\n\n\n\n\n\nGradeService \n\nGradeService \n\nGradeService  -->\n\nAuxiliaryModule->GradeService \n\n\n\n\n\nPeriodService \n\nPeriodService \n\nPeriodService  -->\n\nAuxiliaryModule->PeriodService \n\n\n\n\n\nProfessorService \n\nProfessorService \n\nProfessorService  -->\n\nAuxiliaryModule->ProfessorService \n\n\n\n\n\nStudentService \n\nStudentService \n\nStudentService  -->\n\nAuxiliaryModule->StudentService \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nHttpExceptionFilter \n\nHttpExceptionFilter \n\nHttpExceptionFilter  -->\n\nCoreModule->HttpExceptionFilter \n\n\n\n\n\nPayloadInterceptor \n\nPayloadInterceptor \n\nPayloadInterceptor  -->\n\nCoreModule->PayloadInterceptor \n\n\n\n\n\nExportationModule\n\nExportationModule\n\nAppModule -->\n\nExportationModule->AppModule\n\n\n\n\n\nExportationService \n\nExportationService \n\nExportationService  -->\n\nExportationModule->ExportationService \n\n\n\n\n\nInfraModule\n\nInfraModule\n\nExamModule -->\n\nInfraModule->ExamModule\n\n\n\nExportationModule -->\n\nInfraModule->ExportationModule\n\n\n\nAppModule -->\n\nInfraModule->AppModule\n\n\n\n\n\nMailerService \n\nMailerService \n\nMailerService  -->\n\nInfraModule->MailerService \n\n\n\n\n\nSendEmailService \n\nSendEmailService \n\nSendEmailService  -->\n\nInfraModule->SendEmailService \n\n\n\n\n\nTemplateService \n\nTemplateService \n\nTemplateService  -->\n\nInfraModule->TemplateService \n\n\n\n\n\nUploaderService \n\nUploaderService \n\nUploaderService  -->\n\nInfraModule->UploaderService \n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nAppModule -->\n\nLoggerModule->AppModule\n\n\n\n\n\nCustomLogger \n\nCustomLogger \n\nCustomLogger  -->\n\nLoggerModule->CustomLogger \n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nCaslModule\n\nCaslModule\n\nAuthModule -->\n\nCaslModule->AuthModule\n\n\n\n\n\nCaslAbilityFactory \n\nCaslAbilityFactory \n\nCaslAbilityFactory  -->\n\nCaslModule->CaslAbilityFactory \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtGuard\n\nJwtGuard\n\nAuthModule -->\n\nJwtGuard->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nGradeService\n\nGradeService\n\nAuxiliaryModule -->\n\nGradeService->AuxiliaryModule\n\n\n\n\n\nPeriodService\n\nPeriodService\n\nAuxiliaryModule -->\n\nPeriodService->AuxiliaryModule\n\n\n\n\n\nProfessorService\n\nProfessorService\n\nAuxiliaryModule -->\n\nProfessorService->AuxiliaryModule\n\n\n\n\n\nStudentService\n\nStudentService\n\nAuxiliaryModule -->\n\nStudentService->AuxiliaryModule\n\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\nCaslModule -->\n\nCaslAbilityFactory->CaslModule\n\n\n\n\n\nPayloadInterceptor\n\nPayloadInterceptor\n\nCoreModule -->\n\nPayloadInterceptor->CoreModule\n\n\n\n\n\nExamAgreementService\n\nExamAgreementService\n\nExamModule -->\n\nExamAgreementService->ExamModule\n\n\n\n\n\nExamService\n\nExamService\n\nExamModule -->\n\nExamService->ExamModule\n\n\n\n\n\nExamTargetNodeFactory\n\nExamTargetNodeFactory\n\nExamModule -->\n\nExamTargetNodeFactory->ExamModule\n\n\n\n\n\nExamTargetService\n\nExamTargetService\n\nExamModule -->\n\nExamTargetService->ExamModule\n\n\n\n\n\nExamTargetTree\n\nExamTargetTree\n\nExamModule -->\n\nExamTargetTree->ExamModule\n\n\n\n\n\nExportationRepository\n\nExportationRepository\n\nExportationModule -->\n\nExportationRepository->ExportationModule\n\n\n\n\n\nExportationService\n\nExportationService\n\nExportationModule -->\n\nExportationService->ExportationModule\n\n\n\n\n\nFirebaseAdmin \n\nFirebaseAdmin \n\n\n\nFirebaseAdminModule\n\nFirebaseAdminModule\n\nFirebaseAdmin  -->\n\nFirebaseAdminModule->FirebaseAdmin \n\n\n\n\n\nFirebaseAdmin\n\nFirebaseAdmin\n\nFirebaseAdminModule -->\n\nFirebaseAdmin->FirebaseAdminModule\n\n\n\n\n\nFirebaseAuthService \n\nFirebaseAuthService \n\n\n\nFirebaseCloudMessagingService \n\nFirebaseCloudMessagingService \n\n\n\nFirebaseModule\n\nFirebaseModule\n\nInfraModule -->\n\nFirebaseModule->InfraModule\n\n\n\nFirebaseAuthService  -->\n\nFirebaseModule->FirebaseAuthService \n\n\n\nFirebaseCloudMessagingService  -->\n\nFirebaseModule->FirebaseCloudMessagingService \n\n\n\n\n\nFirebaseAuthService\n\nFirebaseAuthService\n\nFirebaseModule -->\n\nFirebaseAuthService->FirebaseModule\n\n\n\n\n\nFirebaseCloudMessagingService\n\nFirebaseCloudMessagingService\n\nFirebaseModule -->\n\nFirebaseCloudMessagingService->FirebaseModule\n\n\n\n\n\nSendEmailService\n\nSendEmailService\n\nInfraModule -->\n\nSendEmailService->InfraModule\n\n\n\n\n\nTemplateService\n\nTemplateService\n\nInfraModule -->\n\nTemplateService->InfraModule\n\n\n\n\n\nCustomLogger\n\nCustomLogger\n\nLoggerModule -->\n\nCustomLogger->LoggerModule\n\n\n\n\n\nPersonalQuestionGroup\n\nPersonalQuestionGroup\n\nQuestionGroupModule -->\n\nPersonalQuestionGroup->QuestionGroupModule\n\n\n\n\n\nQuestionGroupService\n\nQuestionGroupService\n\nQuestionGroupModule -->\n\nQuestionGroupService->QuestionGroupModule\n\n\n\n\n\nQuestionService\n\nQuestionService\n\nQuestionGroupModule -->\n\nQuestionService->QuestionGroupModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    31 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    87 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    22 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppAbility   (src/.../casl-ability.factory.ts)\n                        \n                        \n                            Callback   (src/.../cors.config.ts)\n                        \n                        \n                            CaslSubjects   (src/.../casl-ability.factory.ts)\n                        \n                        \n                            FirebaseFirestoreCollection   (src/.../firebase-firestore-collection.type.ts)\n                        \n                        \n                            Path   (src/.../exam-target-node.model.ts)\n                        \n                        \n                            UserToFind   (src/.../user-to-find.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/casl/factories/casl-ability.factory.ts\n    \n    \n        \n            \n                \n                    \n                    AppAbility\n                \n            \n            \n                \n                        Ability<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CaslSubjects\n                \n            \n            \n                \n                            InferSubjects | \"all\"\n\n                \n            \n        \n    \n    src/config/cors.config.ts\n    \n    \n        \n            \n                \n                    \n                    Callback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/firebase/types/firebase-firestore-collection.type.ts\n    \n    \n        \n            \n                \n                    \n                    FirebaseFirestoreCollection\n                \n            \n            \n                \n                        firebase.firestore.CollectionReference\n\n                \n            \n        \n    \n    src/exam/models/exam-target-node.model.ts\n    \n    \n        \n            \n                \n                    \n                    Path\n                \n            \n            \n                \n                        ExamTargetNode[] | undefined\n\n                \n            \n        \n    \n    src/auxiliary/types/user-to-find.type.ts\n    \n    \n        \n            \n                \n                    \n                    UserToFind\n                \n            \n            \n                \n                        Student | Professor\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addTargets   (src/.../1622378888497-ExamTargetAdd.ts)\n                        \n                        \n                            allowedOrigins   (src/.../cors.config.ts)\n                        \n                        \n                            configs   (src/.../index.ts)\n                        \n                        \n                            corsConfig   (src/.../cors.config.ts)\n                        \n                        \n                            corsConfigKey   (src/.../cors.config.ts)\n                        \n                        \n                            cpf   (src/.../1620299822480-AdminUser.ts)\n                        \n                        \n                            databaseConfig   (src/.../database.config.ts)\n                        \n                        \n                            databaseConfigKey   (src/.../database.config.ts)\n                        \n                        \n                            DEFAULT_PORT   (src/.../main.ts)\n                        \n                        \n                            defaultName   (src/.../1624416663575-SeedAuxiliary1.ts)\n                        \n                        \n                            enrollment   (src/.../1620299822480-AdminUser.ts)\n                        \n                        \n                            enrollmentLength   (src/.../core.constants.ts)\n                        \n                        \n                            EXAM_NOT_FOUND   (src/.../exam.constants.ts)\n                        \n                        \n                            FIREBASE_ADMIN   (src/.../firebase.constants.ts)\n                        \n                        \n                            FIREBASE_OPTIONS   (src/.../firebase-admin.constants.ts)\n                        \n                        \n                            firebaseConfig   (src/.../firebase.config.ts)\n                        \n                        \n                            GetUser   (src/.../get-user.decorator.ts)\n                        \n                        \n                            isProd   (src/.../cors.config.ts)\n                        \n                        \n                            jwtConfig   (src/.../jwt.config.ts)\n                        \n                        \n                            jwtConfigKey   (src/.../jwt.config.ts)\n                        \n                        \n                            logger   (src/.../main.ts)\n                        \n                        \n                            NODEMAILER_TRANSPORTER   (src/.../infra.constants.ts)\n                        \n                        \n                            nodemailerConfig   (src/.../nodemailer.config.ts)\n                        \n                        \n                            PASSWORD_MAX   (src/.../auth.constants.ts)\n                        \n                        \n                            PASSWORD_MIN   (src/.../auth.constants.ts)\n                        \n                        \n                            questionGroupNotFound   (src/.../question-group.constants.ts)\n                        \n                        \n                            questionGroupRelations   (src/.../question.constants.ts)\n                        \n                        \n                            questionNotFound   (src/.../question.constants.ts)\n                        \n                        \n                            rateLimitConfig   (src/.../rate-limit.config.ts)\n                        \n                        \n                            rateLimitConfigKey   (src/.../rate-limit.config.ts)\n                        \n                        \n                            sentryConfig   (src/.../sentry.config.ts)\n                        \n                        \n                            student   (src/.../1624416663575-SeedAuxiliary1.ts)\n                        \n                        \n                            swaggerConfig   (src/.../swagger.config.ts)\n                        \n                        \n                            swaggerConfigKey   (src/.../swagger.config.ts)\n                        \n                        \n                            targets   (src/.../1622326106015-ExamTarget.ts)\n                        \n                        \n                            UPLOAD_PATH   (src/.../infra.constants.ts)\n                        \n                        \n                            userTypeMap   (src/.../user-type.map.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/database/migrations/1622378888497-ExamTargetAdd.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            addTargets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['Course', 'Grade']\n                        \n                    \n\n\n            \n        \n\n    src/config/cors.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            allowedOrigins\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp[]\n\n                        \n                    \n                    \n                        \n                            Default value : isProd\n  ? [/^https:\\/\\/(.*\\.|)herokuapp.com/]\n  : [/^http:\\/\\/localhost:(3000|5000)$/, /^https:\\/\\/(.*\\.|)herokuapp.com/]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            corsConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : registerAs(\n  corsConfigKey,\n  (): CorsOptions => ({\n    origin,\n    optionsSuccessStatus: 200,\n  }),\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            corsConfigKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'cors'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isProd\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.env.NODE_ENV === 'production'\n                        \n                    \n\n\n            \n        \n\n    src/config/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            configs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  swaggerConfig,\n  databaseConfig,\n  rateLimitConfig,\n  corsConfig,\n  jwtConfig,\n  firebaseConfig,\n  sentryConfig,\n  nodemailerConfig,\n]\n                        \n                    \n\n\n            \n        \n\n    src/database/migrations/1620299822480-AdminUser.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cpf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '29997856155'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enrollment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '999999'\n                        \n                    \n\n\n            \n        \n\n    src/config/database.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            databaseConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : registerAs(\n  databaseConfigKey,\n  (): TypeOrmModuleOptions => ({\n    type: 'mysql',\n    host: process.env.DB_HOST,\n    username: process.env.DB_USER,\n    password: process.env.DB_PASSWORD,\n    database: process.env.DB_DATABASE,\n    port: parseInt(process.env.DB_PORT!),\n    maxQueryExecutionTime: parseInt(process.env.DB_QUERY_TIMEOUT ?? '5000'),\n    entities: [__dirname + '/../**/*.entity.{js,ts}'],\n    migrations: [__dirname + '/../database/migrations/*.{js,ts}'],\n    subscribers: [__dirname + '/../**/*.subscriber.{js,ts}'],\n    synchronize: false,\n    logging:\n      process.env.DB_LOGGING === 'true' ||\n      process.env.NODE_ENV === 'development',\n    cli: {\n      migrationsDir: 'src/database/migrations',\n    },\n    namingStrategy: new SnakeNamingStrategy(),\n  }),\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            databaseConfigKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'database'\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3000\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('bootstrap')\n                        \n                    \n\n\n            \n        \n\n    src/database/migrations/1624416663575-SeedAuxiliary1.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Gerado'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            student\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  cpf: '50172241065',\n  enrollment: '989898',\n}\n                        \n                    \n\n\n            \n        \n\n    src/core/core.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            enrollmentLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : [1, 9]\n                        \n                    \n\n\n            \n        \n\n    src/exam/exam.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EXAM_NOT_FOUND\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Exam not found'\n                        \n                    \n\n\n            \n        \n\n    src/firebase/firebase.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FIREBASE_ADMIN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'FIREBASE_ADMIN'\n                        \n                    \n\n\n            \n        \n\n    src/firebase/firebase-admin/firebase-admin.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FIREBASE_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'FIREBASE_OPTIONS'\n                        \n                    \n\n\n            \n        \n\n    src/config/firebase.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            firebaseConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : registerAs(\n  'firebase',\n  (): FirebaseModuleOptions => {\n    if (!process.env.FIREBASE_ADMIN) {\n      throw new Error(\n        'Needs FIREBASE_ADMIN env (JSON Service Account as string)',\n      );\n    }\n\n    if (!process.env.FIREBASE_BUCKET) {\n      throw new Error('Needs FIREBASE_BUCKET env var');\n    }\n\n    return {\n      cert: JSON.parse(process.env.FIREBASE_ADMIN),\n      storageBucket: process.env.FIREBASE_BUCKET,\n    };\n    //return JSON.parse(process.env.FIREBASE_ADMIN);\n  },\n)\n                        \n                    \n\n\n            \n        \n\n    src/user/decoratos/get-user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GetUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator(\n  (_: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                        \n                    \n\n\n            \n        \n\n    src/config/jwt.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : registerAs(\n  jwtConfigKey,\n  (): JwtModuleOptions => ({\n    secret: process.env.JWT_SECRET,\n    signOptions: { issuer: 'ff.uneb.br', expiresIn: '10h' },\n  }),\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConfigKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'jwt'\n                        \n                    \n\n\n            \n        \n\n    src/infra/infra.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NODEMAILER_TRANSPORTER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'transporter'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UPLOAD_PATH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/questions'\n                        \n                    \n\n\n            \n        \n\n    src/config/nodemailer.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            nodemailerConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : registerAs('nodemailer', () => ({\n  pool: true,\n  host: 'smtp.gmail.com',\n  port: 465,\n  secure: true, // use TLS\n  auth: {\n    user: process.env.MAIL_FROM,\n    pass: process.env.MAIL_PASSWORD,\n  },\n}))\n                        \n                    \n\n\n            \n        \n\n    src/auth/auth.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PASSWORD_MAX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PASSWORD_MIN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 6\n                        \n                    \n\n\n            \n        \n\n    src/question-group/question-group.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            questionGroupNotFound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'QuestionGroup not found'\n                        \n                    \n\n\n            \n        \n\n    src/question-group/question.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            questionGroupRelations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['questions']\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionNotFound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Question not found'\n                        \n                    \n\n\n            \n        \n\n    src/config/rate-limit.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            rateLimitConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : registerAs(rateLimitConfigKey, () => ({\n  timeWindow: parseInt(process.env.RATE_LIMIT_WINDOW_MS ?? '60000'),\n  max: parseInt(process.env.RATE_LIMIT_MAX ?? '20'),\n}))\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rateLimitConfigKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'rateLimit'\n                        \n                    \n\n\n            \n        \n\n    src/config/sentry.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sentryConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : registerAs('sentry', () => ({\n  dsn: process.env.SENTRY_DSN,\n}))\n                        \n                    \n\n\n            \n        \n\n    src/config/swagger.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            swaggerConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : registerAs(\n  swaggerConfigKey,\n  (): SwaggerOptions => ({\n    title: 'Fast Form',\n    description: 'Fast Form API',\n    version: 'v0.0.1',\n    users: { ff: 'senhaforte' },\n  }),\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swaggerConfigKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'swagger'\n                        \n                    \n\n\n            \n        \n\n    src/database/migrations/1622326106015-ExamTarget.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            targets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Student\", \"Professor\"]\n                        \n                    \n\n\n            \n        \n\n    src/exportation/maps/user-type.map.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            userTypeMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReadonlyMap\n\n                        \n                    \n                    \n                        \n                            Default value : new Map([\n  ['User', 'Usuário'],\n  ['Professor', 'Professor'],\n  ['Student', 'Estudante'],\n])\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
